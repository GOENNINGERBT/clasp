// This file was GENERATED by command:
//     pump.py applyToFrame.pmp
// DO NOT EDIT BY HAND!!!

#ifdef APPLY_TO_FRAME    // Reg = -1
case 0:
return (*func).entry(func.raw_(), 0  , LCC_UNUSED , LCC_UNUSED , LCC_UNUSED , LCC_UNUSED     );
// Reg = 0
case 1:
return (*func).entry(func.raw_(), 1 , ENSURE_VALID_OBJECT((*frame)[0])  , LCC_UNUSED , LCC_UNUSED , LCC_UNUSED     );
// Reg = 1
case 2:
return (*func).entry(func.raw_(), 2 , ENSURE_VALID_OBJECT((*frame)[0]) , ENSURE_VALID_OBJECT((*frame)[1])  , LCC_UNUSED ,
    LCC_UNUSED     );
// Reg = 2
case 3:
return (*func).entry(func.raw_(), 3 , ENSURE_VALID_OBJECT((*frame)[0]) , ENSURE_VALID_OBJECT((*frame)[1]) ,
    ENSURE_VALID_OBJECT((*frame)[2])  , LCC_UNUSED     );
// Reg = 3
case 4:
return (*func).entry(func.raw_(), 4 , ENSURE_VALID_OBJECT((*frame)[0]) , ENSURE_VALID_OBJECT((*frame)[1]) ,
    ENSURE_VALID_OBJECT((*frame)[2]) , ENSURE_VALID_OBJECT((*frame)[3])      );
// Reg = 3
case 5:
return (*func).entry(func.raw_(), 5 , ENSURE_VALID_OBJECT((*frame)[0]) , ENSURE_VALID_OBJECT((*frame)[1]) ,
    ENSURE_VALID_OBJECT((*frame)[2]) , ENSURE_VALID_OBJECT((*frame)[3])        , ENSURE_VALID_OBJECT((*frame)[4])
);
// Reg = 3
case 6:
return (*func).entry(func.raw_(), 6 , ENSURE_VALID_OBJECT((*frame)[0]) , ENSURE_VALID_OBJECT((*frame)[1]) ,
    ENSURE_VALID_OBJECT((*frame)[2]) , ENSURE_VALID_OBJECT((*frame)[3])        , ENSURE_VALID_OBJECT((*frame)[4])
, ENSURE_VALID_OBJECT((*frame)[5])
);
// Reg = 3
case 7:
return (*func).entry(func.raw_(), 7 , ENSURE_VALID_OBJECT((*frame)[0]) , ENSURE_VALID_OBJECT((*frame)[1]) ,
    ENSURE_VALID_OBJECT((*frame)[2]) , ENSURE_VALID_OBJECT((*frame)[3])        , ENSURE_VALID_OBJECT((*frame)[4])
, ENSURE_VALID_OBJECT((*frame)[5])
, ENSURE_VALID_OBJECT((*frame)[6])
);
// Reg = 3
case 8:
return (*func).entry(func.raw_(), 8 , ENSURE_VALID_OBJECT((*frame)[0]) , ENSURE_VALID_OBJECT((*frame)[1]) ,
    ENSURE_VALID_OBJECT((*frame)[2]) , ENSURE_VALID_OBJECT((*frame)[3])        , ENSURE_VALID_OBJECT((*frame)[4])
, ENSURE_VALID_OBJECT((*frame)[5])
, ENSURE_VALID_OBJECT((*frame)[6])
, ENSURE_VALID_OBJECT((*frame)[7])
);
// Reg = 3
case 9:
return (*func).entry(func.raw_(), 9 , ENSURE_VALID_OBJECT((*frame)[0]) , ENSURE_VALID_OBJECT((*frame)[1]) ,
    ENSURE_VALID_OBJECT((*frame)[2]) , ENSURE_VALID_OBJECT((*frame)[3])        , ENSURE_VALID_OBJECT((*frame)[4])
, ENSURE_VALID_OBJECT((*frame)[5])
, ENSURE_VALID_OBJECT((*frame)[6])
, ENSURE_VALID_OBJECT((*frame)[7])
, ENSURE_VALID_OBJECT((*frame)[8])
);
// Reg = 3
case 10:
return (*func).entry(func.raw_(), 10 , ENSURE_VALID_OBJECT((*frame)[0]) , ENSURE_VALID_OBJECT((*frame)[1]) ,
    ENSURE_VALID_OBJECT((*frame)[2]) , ENSURE_VALID_OBJECT((*frame)[3])        , ENSURE_VALID_OBJECT((*frame)[4])
, ENSURE_VALID_OBJECT((*frame)[5])
, ENSURE_VALID_OBJECT((*frame)[6])
, ENSURE_VALID_OBJECT((*frame)[7])
, ENSURE_VALID_OBJECT((*frame)[8])
, ENSURE_VALID_OBJECT((*frame)[9])
);
// Reg = 3
case 11:
return (*func).entry(func.raw_(), 11 , ENSURE_VALID_OBJECT((*frame)[0]) , ENSURE_VALID_OBJECT((*frame)[1]) ,
    ENSURE_VALID_OBJECT((*frame)[2]) , ENSURE_VALID_OBJECT((*frame)[3])        , ENSURE_VALID_OBJECT((*frame)[4])
, ENSURE_VALID_OBJECT((*frame)[5])
, ENSURE_VALID_OBJECT((*frame)[6])
, ENSURE_VALID_OBJECT((*frame)[7])
, ENSURE_VALID_OBJECT((*frame)[8])
, ENSURE_VALID_OBJECT((*frame)[9])
, ENSURE_VALID_OBJECT((*frame)[10])
);
// Reg = 3
case 12:
return (*func).entry(func.raw_(), 12 , ENSURE_VALID_OBJECT((*frame)[0]) , ENSURE_VALID_OBJECT((*frame)[1]) ,
    ENSURE_VALID_OBJECT((*frame)[2]) , ENSURE_VALID_OBJECT((*frame)[3])        , ENSURE_VALID_OBJECT((*frame)[4])
, ENSURE_VALID_OBJECT((*frame)[5])
, ENSURE_VALID_OBJECT((*frame)[6])
, ENSURE_VALID_OBJECT((*frame)[7])
, ENSURE_VALID_OBJECT((*frame)[8])
, ENSURE_VALID_OBJECT((*frame)[9])
, ENSURE_VALID_OBJECT((*frame)[10])
, ENSURE_VALID_OBJECT((*frame)[11])
);
// Reg = 3
case 13:
return (*func).entry(func.raw_(), 13 , ENSURE_VALID_OBJECT((*frame)[0]) , ENSURE_VALID_OBJECT((*frame)[1]) ,
    ENSURE_VALID_OBJECT((*frame)[2]) , ENSURE_VALID_OBJECT((*frame)[3])        , ENSURE_VALID_OBJECT((*frame)[4])
, ENSURE_VALID_OBJECT((*frame)[5])
, ENSURE_VALID_OBJECT((*frame)[6])
, ENSURE_VALID_OBJECT((*frame)[7])
, ENSURE_VALID_OBJECT((*frame)[8])
, ENSURE_VALID_OBJECT((*frame)[9])
, ENSURE_VALID_OBJECT((*frame)[10])
, ENSURE_VALID_OBJECT((*frame)[11])
, ENSURE_VALID_OBJECT((*frame)[12])
);
// Reg = 3
case 14:
return (*func).entry(func.raw_(), 14 , ENSURE_VALID_OBJECT((*frame)[0]) , ENSURE_VALID_OBJECT((*frame)[1]) ,
    ENSURE_VALID_OBJECT((*frame)[2]) , ENSURE_VALID_OBJECT((*frame)[3])        , ENSURE_VALID_OBJECT((*frame)[4])
, ENSURE_VALID_OBJECT((*frame)[5])
, ENSURE_VALID_OBJECT((*frame)[6])
, ENSURE_VALID_OBJECT((*frame)[7])
, ENSURE_VALID_OBJECT((*frame)[8])
, ENSURE_VALID_OBJECT((*frame)[9])
, ENSURE_VALID_OBJECT((*frame)[10])
, ENSURE_VALID_OBJECT((*frame)[11])
, ENSURE_VALID_OBJECT((*frame)[12])
, ENSURE_VALID_OBJECT((*frame)[13])
);
// Reg = 3
case 15:
return (*func).entry(func.raw_(), 15 , ENSURE_VALID_OBJECT((*frame)[0]) , ENSURE_VALID_OBJECT((*frame)[1]) ,
    ENSURE_VALID_OBJECT((*frame)[2]) , ENSURE_VALID_OBJECT((*frame)[3])        , ENSURE_VALID_OBJECT((*frame)[4])
, ENSURE_VALID_OBJECT((*frame)[5])
, ENSURE_VALID_OBJECT((*frame)[6])
, ENSURE_VALID_OBJECT((*frame)[7])
, ENSURE_VALID_OBJECT((*frame)[8])
, ENSURE_VALID_OBJECT((*frame)[9])
, ENSURE_VALID_OBJECT((*frame)[10])
, ENSURE_VALID_OBJECT((*frame)[11])
, ENSURE_VALID_OBJECT((*frame)[12])
, ENSURE_VALID_OBJECT((*frame)[13])
, ENSURE_VALID_OBJECT((*frame)[14])
);
// Reg = 3
case 16:
return (*func).entry(func.raw_(), 16 , ENSURE_VALID_OBJECT((*frame)[0]) , ENSURE_VALID_OBJECT((*frame)[1]) ,
    ENSURE_VALID_OBJECT((*frame)[2]) , ENSURE_VALID_OBJECT((*frame)[3])        , ENSURE_VALID_OBJECT((*frame)[4])
, ENSURE_VALID_OBJECT((*frame)[5])
, ENSURE_VALID_OBJECT((*frame)[6])
, ENSURE_VALID_OBJECT((*frame)[7])
, ENSURE_VALID_OBJECT((*frame)[8])
, ENSURE_VALID_OBJECT((*frame)[9])
, ENSURE_VALID_OBJECT((*frame)[10])
, ENSURE_VALID_OBJECT((*frame)[11])
, ENSURE_VALID_OBJECT((*frame)[12])
, ENSURE_VALID_OBJECT((*frame)[13])
, ENSURE_VALID_OBJECT((*frame)[14])
, ENSURE_VALID_OBJECT((*frame)[15])
);
// Reg = 3
case 17:
return (*func).entry(func.raw_(), 17 , ENSURE_VALID_OBJECT((*frame)[0]) , ENSURE_VALID_OBJECT((*frame)[1]) ,
    ENSURE_VALID_OBJECT((*frame)[2]) , ENSURE_VALID_OBJECT((*frame)[3])        , ENSURE_VALID_OBJECT((*frame)[4])
, ENSURE_VALID_OBJECT((*frame)[5])
, ENSURE_VALID_OBJECT((*frame)[6])
, ENSURE_VALID_OBJECT((*frame)[7])
, ENSURE_VALID_OBJECT((*frame)[8])
, ENSURE_VALID_OBJECT((*frame)[9])
, ENSURE_VALID_OBJECT((*frame)[10])
, ENSURE_VALID_OBJECT((*frame)[11])
, ENSURE_VALID_OBJECT((*frame)[12])
, ENSURE_VALID_OBJECT((*frame)[13])
, ENSURE_VALID_OBJECT((*frame)[14])
, ENSURE_VALID_OBJECT((*frame)[15])
, ENSURE_VALID_OBJECT((*frame)[16])
);
// Reg = 3
case 18:
return (*func).entry(func.raw_(), 18 , ENSURE_VALID_OBJECT((*frame)[0]) , ENSURE_VALID_OBJECT((*frame)[1]) ,
    ENSURE_VALID_OBJECT((*frame)[2]) , ENSURE_VALID_OBJECT((*frame)[3])        , ENSURE_VALID_OBJECT((*frame)[4])
, ENSURE_VALID_OBJECT((*frame)[5])
, ENSURE_VALID_OBJECT((*frame)[6])
, ENSURE_VALID_OBJECT((*frame)[7])
, ENSURE_VALID_OBJECT((*frame)[8])
, ENSURE_VALID_OBJECT((*frame)[9])
, ENSURE_VALID_OBJECT((*frame)[10])
, ENSURE_VALID_OBJECT((*frame)[11])
, ENSURE_VALID_OBJECT((*frame)[12])
, ENSURE_VALID_OBJECT((*frame)[13])
, ENSURE_VALID_OBJECT((*frame)[14])
, ENSURE_VALID_OBJECT((*frame)[15])
, ENSURE_VALID_OBJECT((*frame)[16])
, ENSURE_VALID_OBJECT((*frame)[17])
);
// Reg = 3
case 19:
return (*func).entry(func.raw_(), 19 , ENSURE_VALID_OBJECT((*frame)[0]) , ENSURE_VALID_OBJECT((*frame)[1]) ,
    ENSURE_VALID_OBJECT((*frame)[2]) , ENSURE_VALID_OBJECT((*frame)[3])        , ENSURE_VALID_OBJECT((*frame)[4])
, ENSURE_VALID_OBJECT((*frame)[5])
, ENSURE_VALID_OBJECT((*frame)[6])
, ENSURE_VALID_OBJECT((*frame)[7])
, ENSURE_VALID_OBJECT((*frame)[8])
, ENSURE_VALID_OBJECT((*frame)[9])
, ENSURE_VALID_OBJECT((*frame)[10])
, ENSURE_VALID_OBJECT((*frame)[11])
, ENSURE_VALID_OBJECT((*frame)[12])
, ENSURE_VALID_OBJECT((*frame)[13])
, ENSURE_VALID_OBJECT((*frame)[14])
, ENSURE_VALID_OBJECT((*frame)[15])
, ENSURE_VALID_OBJECT((*frame)[16])
, ENSURE_VALID_OBJECT((*frame)[17])
, ENSURE_VALID_OBJECT((*frame)[18])
);
// Reg = 3
case 20:
return (*func).entry(func.raw_(), 20 , ENSURE_VALID_OBJECT((*frame)[0]) , ENSURE_VALID_OBJECT((*frame)[1]) ,
    ENSURE_VALID_OBJECT((*frame)[2]) , ENSURE_VALID_OBJECT((*frame)[3])        , ENSURE_VALID_OBJECT((*frame)[4])
, ENSURE_VALID_OBJECT((*frame)[5])
, ENSURE_VALID_OBJECT((*frame)[6])
, ENSURE_VALID_OBJECT((*frame)[7])
, ENSURE_VALID_OBJECT((*frame)[8])
, ENSURE_VALID_OBJECT((*frame)[9])
, ENSURE_VALID_OBJECT((*frame)[10])
, ENSURE_VALID_OBJECT((*frame)[11])
, ENSURE_VALID_OBJECT((*frame)[12])
, ENSURE_VALID_OBJECT((*frame)[13])
, ENSURE_VALID_OBJECT((*frame)[14])
, ENSURE_VALID_OBJECT((*frame)[15])
, ENSURE_VALID_OBJECT((*frame)[16])
, ENSURE_VALID_OBJECT((*frame)[17])
, ENSURE_VALID_OBJECT((*frame)[18])
, ENSURE_VALID_OBJECT((*frame)[19])
);
// Reg = 3
case 21:
return (*func).entry(func.raw_(), 21 , ENSURE_VALID_OBJECT((*frame)[0]) , ENSURE_VALID_OBJECT((*frame)[1]) ,
    ENSURE_VALID_OBJECT((*frame)[2]) , ENSURE_VALID_OBJECT((*frame)[3])        , ENSURE_VALID_OBJECT((*frame)[4])
, ENSURE_VALID_OBJECT((*frame)[5])
, ENSURE_VALID_OBJECT((*frame)[6])
, ENSURE_VALID_OBJECT((*frame)[7])
, ENSURE_VALID_OBJECT((*frame)[8])
, ENSURE_VALID_OBJECT((*frame)[9])
, ENSURE_VALID_OBJECT((*frame)[10])
, ENSURE_VALID_OBJECT((*frame)[11])
, ENSURE_VALID_OBJECT((*frame)[12])
, ENSURE_VALID_OBJECT((*frame)[13])
, ENSURE_VALID_OBJECT((*frame)[14])
, ENSURE_VALID_OBJECT((*frame)[15])
, ENSURE_VALID_OBJECT((*frame)[16])
, ENSURE_VALID_OBJECT((*frame)[17])
, ENSURE_VALID_OBJECT((*frame)[18])
, ENSURE_VALID_OBJECT((*frame)[19])
, ENSURE_VALID_OBJECT((*frame)[20])
);
// Reg = 3
case 22:
return (*func).entry(func.raw_(), 22 , ENSURE_VALID_OBJECT((*frame)[0]) , ENSURE_VALID_OBJECT((*frame)[1]) ,
    ENSURE_VALID_OBJECT((*frame)[2]) , ENSURE_VALID_OBJECT((*frame)[3])        , ENSURE_VALID_OBJECT((*frame)[4])
, ENSURE_VALID_OBJECT((*frame)[5])
, ENSURE_VALID_OBJECT((*frame)[6])
, ENSURE_VALID_OBJECT((*frame)[7])
, ENSURE_VALID_OBJECT((*frame)[8])
, ENSURE_VALID_OBJECT((*frame)[9])
, ENSURE_VALID_OBJECT((*frame)[10])
, ENSURE_VALID_OBJECT((*frame)[11])
, ENSURE_VALID_OBJECT((*frame)[12])
, ENSURE_VALID_OBJECT((*frame)[13])
, ENSURE_VALID_OBJECT((*frame)[14])
, ENSURE_VALID_OBJECT((*frame)[15])
, ENSURE_VALID_OBJECT((*frame)[16])
, ENSURE_VALID_OBJECT((*frame)[17])
, ENSURE_VALID_OBJECT((*frame)[18])
, ENSURE_VALID_OBJECT((*frame)[19])
, ENSURE_VALID_OBJECT((*frame)[20])
, ENSURE_VALID_OBJECT((*frame)[21])
);
// Reg = 3
case 23:
return (*func).entry(func.raw_(), 23 , ENSURE_VALID_OBJECT((*frame)[0]) , ENSURE_VALID_OBJECT((*frame)[1]) ,
    ENSURE_VALID_OBJECT((*frame)[2]) , ENSURE_VALID_OBJECT((*frame)[3])        , ENSURE_VALID_OBJECT((*frame)[4])
, ENSURE_VALID_OBJECT((*frame)[5])
, ENSURE_VALID_OBJECT((*frame)[6])
, ENSURE_VALID_OBJECT((*frame)[7])
, ENSURE_VALID_OBJECT((*frame)[8])
, ENSURE_VALID_OBJECT((*frame)[9])
, ENSURE_VALID_OBJECT((*frame)[10])
, ENSURE_VALID_OBJECT((*frame)[11])
, ENSURE_VALID_OBJECT((*frame)[12])
, ENSURE_VALID_OBJECT((*frame)[13])
, ENSURE_VALID_OBJECT((*frame)[14])
, ENSURE_VALID_OBJECT((*frame)[15])
, ENSURE_VALID_OBJECT((*frame)[16])
, ENSURE_VALID_OBJECT((*frame)[17])
, ENSURE_VALID_OBJECT((*frame)[18])
, ENSURE_VALID_OBJECT((*frame)[19])
, ENSURE_VALID_OBJECT((*frame)[20])
, ENSURE_VALID_OBJECT((*frame)[21])
, ENSURE_VALID_OBJECT((*frame)[22])
);
// Reg = 3
case 24:
return (*func).entry(func.raw_(), 24 , ENSURE_VALID_OBJECT((*frame)[0]) , ENSURE_VALID_OBJECT((*frame)[1]) ,
    ENSURE_VALID_OBJECT((*frame)[2]) , ENSURE_VALID_OBJECT((*frame)[3])        , ENSURE_VALID_OBJECT((*frame)[4])
, ENSURE_VALID_OBJECT((*frame)[5])
, ENSURE_VALID_OBJECT((*frame)[6])
, ENSURE_VALID_OBJECT((*frame)[7])
, ENSURE_VALID_OBJECT((*frame)[8])
, ENSURE_VALID_OBJECT((*frame)[9])
, ENSURE_VALID_OBJECT((*frame)[10])
, ENSURE_VALID_OBJECT((*frame)[11])
, ENSURE_VALID_OBJECT((*frame)[12])
, ENSURE_VALID_OBJECT((*frame)[13])
, ENSURE_VALID_OBJECT((*frame)[14])
, ENSURE_VALID_OBJECT((*frame)[15])
, ENSURE_VALID_OBJECT((*frame)[16])
, ENSURE_VALID_OBJECT((*frame)[17])
, ENSURE_VALID_OBJECT((*frame)[18])
, ENSURE_VALID_OBJECT((*frame)[19])
, ENSURE_VALID_OBJECT((*frame)[20])
, ENSURE_VALID_OBJECT((*frame)[21])
, ENSURE_VALID_OBJECT((*frame)[22])
, ENSURE_VALID_OBJECT((*frame)[23])
);
// Reg = 3
case 25:
return (*func).entry(func.raw_(), 25 , ENSURE_VALID_OBJECT((*frame)[0]) , ENSURE_VALID_OBJECT((*frame)[1]) ,
    ENSURE_VALID_OBJECT((*frame)[2]) , ENSURE_VALID_OBJECT((*frame)[3])        , ENSURE_VALID_OBJECT((*frame)[4])
, ENSURE_VALID_OBJECT((*frame)[5])
, ENSURE_VALID_OBJECT((*frame)[6])
, ENSURE_VALID_OBJECT((*frame)[7])
, ENSURE_VALID_OBJECT((*frame)[8])
, ENSURE_VALID_OBJECT((*frame)[9])
, ENSURE_VALID_OBJECT((*frame)[10])
, ENSURE_VALID_OBJECT((*frame)[11])
, ENSURE_VALID_OBJECT((*frame)[12])
, ENSURE_VALID_OBJECT((*frame)[13])
, ENSURE_VALID_OBJECT((*frame)[14])
, ENSURE_VALID_OBJECT((*frame)[15])
, ENSURE_VALID_OBJECT((*frame)[16])
, ENSURE_VALID_OBJECT((*frame)[17])
, ENSURE_VALID_OBJECT((*frame)[18])
, ENSURE_VALID_OBJECT((*frame)[19])
, ENSURE_VALID_OBJECT((*frame)[20])
, ENSURE_VALID_OBJECT((*frame)[21])
, ENSURE_VALID_OBJECT((*frame)[22])
, ENSURE_VALID_OBJECT((*frame)[23])
, ENSURE_VALID_OBJECT((*frame)[24])
);
// Reg = 3
case 26:
return (*func).entry(func.raw_(), 26 , ENSURE_VALID_OBJECT((*frame)[0]) , ENSURE_VALID_OBJECT((*frame)[1]) ,
    ENSURE_VALID_OBJECT((*frame)[2]) , ENSURE_VALID_OBJECT((*frame)[3])        , ENSURE_VALID_OBJECT((*frame)[4])
, ENSURE_VALID_OBJECT((*frame)[5])
, ENSURE_VALID_OBJECT((*frame)[6])
, ENSURE_VALID_OBJECT((*frame)[7])
, ENSURE_VALID_OBJECT((*frame)[8])
, ENSURE_VALID_OBJECT((*frame)[9])
, ENSURE_VALID_OBJECT((*frame)[10])
, ENSURE_VALID_OBJECT((*frame)[11])
, ENSURE_VALID_OBJECT((*frame)[12])
, ENSURE_VALID_OBJECT((*frame)[13])
, ENSURE_VALID_OBJECT((*frame)[14])
, ENSURE_VALID_OBJECT((*frame)[15])
, ENSURE_VALID_OBJECT((*frame)[16])
, ENSURE_VALID_OBJECT((*frame)[17])
, ENSURE_VALID_OBJECT((*frame)[18])
, ENSURE_VALID_OBJECT((*frame)[19])
, ENSURE_VALID_OBJECT((*frame)[20])
, ENSURE_VALID_OBJECT((*frame)[21])
, ENSURE_VALID_OBJECT((*frame)[22])
, ENSURE_VALID_OBJECT((*frame)[23])
, ENSURE_VALID_OBJECT((*frame)[24])
, ENSURE_VALID_OBJECT((*frame)[25])
);
// Reg = 3
case 27:
return (*func).entry(func.raw_(), 27 , ENSURE_VALID_OBJECT((*frame)[0]) , ENSURE_VALID_OBJECT((*frame)[1]) ,
    ENSURE_VALID_OBJECT((*frame)[2]) , ENSURE_VALID_OBJECT((*frame)[3])        , ENSURE_VALID_OBJECT((*frame)[4])
, ENSURE_VALID_OBJECT((*frame)[5])
, ENSURE_VALID_OBJECT((*frame)[6])
, ENSURE_VALID_OBJECT((*frame)[7])
, ENSURE_VALID_OBJECT((*frame)[8])
, ENSURE_VALID_OBJECT((*frame)[9])
, ENSURE_VALID_OBJECT((*frame)[10])
, ENSURE_VALID_OBJECT((*frame)[11])
, ENSURE_VALID_OBJECT((*frame)[12])
, ENSURE_VALID_OBJECT((*frame)[13])
, ENSURE_VALID_OBJECT((*frame)[14])
, ENSURE_VALID_OBJECT((*frame)[15])
, ENSURE_VALID_OBJECT((*frame)[16])
, ENSURE_VALID_OBJECT((*frame)[17])
, ENSURE_VALID_OBJECT((*frame)[18])
, ENSURE_VALID_OBJECT((*frame)[19])
, ENSURE_VALID_OBJECT((*frame)[20])
, ENSURE_VALID_OBJECT((*frame)[21])
, ENSURE_VALID_OBJECT((*frame)[22])
, ENSURE_VALID_OBJECT((*frame)[23])
, ENSURE_VALID_OBJECT((*frame)[24])
, ENSURE_VALID_OBJECT((*frame)[25])
, ENSURE_VALID_OBJECT((*frame)[26])
);
// Reg = 3
case 28:
return (*func).entry(func.raw_(), 28 , ENSURE_VALID_OBJECT((*frame)[0]) , ENSURE_VALID_OBJECT((*frame)[1]) ,
    ENSURE_VALID_OBJECT((*frame)[2]) , ENSURE_VALID_OBJECT((*frame)[3])        , ENSURE_VALID_OBJECT((*frame)[4])
, ENSURE_VALID_OBJECT((*frame)[5])
, ENSURE_VALID_OBJECT((*frame)[6])
, ENSURE_VALID_OBJECT((*frame)[7])
, ENSURE_VALID_OBJECT((*frame)[8])
, ENSURE_VALID_OBJECT((*frame)[9])
, ENSURE_VALID_OBJECT((*frame)[10])
, ENSURE_VALID_OBJECT((*frame)[11])
, ENSURE_VALID_OBJECT((*frame)[12])
, ENSURE_VALID_OBJECT((*frame)[13])
, ENSURE_VALID_OBJECT((*frame)[14])
, ENSURE_VALID_OBJECT((*frame)[15])
, ENSURE_VALID_OBJECT((*frame)[16])
, ENSURE_VALID_OBJECT((*frame)[17])
, ENSURE_VALID_OBJECT((*frame)[18])
, ENSURE_VALID_OBJECT((*frame)[19])
, ENSURE_VALID_OBJECT((*frame)[20])
, ENSURE_VALID_OBJECT((*frame)[21])
, ENSURE_VALID_OBJECT((*frame)[22])
, ENSURE_VALID_OBJECT((*frame)[23])
, ENSURE_VALID_OBJECT((*frame)[24])
, ENSURE_VALID_OBJECT((*frame)[25])
, ENSURE_VALID_OBJECT((*frame)[26])
, ENSURE_VALID_OBJECT((*frame)[27])
);
// Reg = 3
case 29:
return (*func).entry(func.raw_(), 29 , ENSURE_VALID_OBJECT((*frame)[0]) , ENSURE_VALID_OBJECT((*frame)[1]) ,
    ENSURE_VALID_OBJECT((*frame)[2]) , ENSURE_VALID_OBJECT((*frame)[3])        , ENSURE_VALID_OBJECT((*frame)[4])
, ENSURE_VALID_OBJECT((*frame)[5])
, ENSURE_VALID_OBJECT((*frame)[6])
, ENSURE_VALID_OBJECT((*frame)[7])
, ENSURE_VALID_OBJECT((*frame)[8])
, ENSURE_VALID_OBJECT((*frame)[9])
, ENSURE_VALID_OBJECT((*frame)[10])
, ENSURE_VALID_OBJECT((*frame)[11])
, ENSURE_VALID_OBJECT((*frame)[12])
, ENSURE_VALID_OBJECT((*frame)[13])
, ENSURE_VALID_OBJECT((*frame)[14])
, ENSURE_VALID_OBJECT((*frame)[15])
, ENSURE_VALID_OBJECT((*frame)[16])
, ENSURE_VALID_OBJECT((*frame)[17])
, ENSURE_VALID_OBJECT((*frame)[18])
, ENSURE_VALID_OBJECT((*frame)[19])
, ENSURE_VALID_OBJECT((*frame)[20])
, ENSURE_VALID_OBJECT((*frame)[21])
, ENSURE_VALID_OBJECT((*frame)[22])
, ENSURE_VALID_OBJECT((*frame)[23])
, ENSURE_VALID_OBJECT((*frame)[24])
, ENSURE_VALID_OBJECT((*frame)[25])
, ENSURE_VALID_OBJECT((*frame)[26])
, ENSURE_VALID_OBJECT((*frame)[27])
, ENSURE_VALID_OBJECT((*frame)[28])
);
// Reg = 3
case 30:
return (*func).entry(func.raw_(), 30 , ENSURE_VALID_OBJECT((*frame)[0]) , ENSURE_VALID_OBJECT((*frame)[1]) ,
    ENSURE_VALID_OBJECT((*frame)[2]) , ENSURE_VALID_OBJECT((*frame)[3])        , ENSURE_VALID_OBJECT((*frame)[4])
, ENSURE_VALID_OBJECT((*frame)[5])
, ENSURE_VALID_OBJECT((*frame)[6])
, ENSURE_VALID_OBJECT((*frame)[7])
, ENSURE_VALID_OBJECT((*frame)[8])
, ENSURE_VALID_OBJECT((*frame)[9])
, ENSURE_VALID_OBJECT((*frame)[10])
, ENSURE_VALID_OBJECT((*frame)[11])
, ENSURE_VALID_OBJECT((*frame)[12])
, ENSURE_VALID_OBJECT((*frame)[13])
, ENSURE_VALID_OBJECT((*frame)[14])
, ENSURE_VALID_OBJECT((*frame)[15])
, ENSURE_VALID_OBJECT((*frame)[16])
, ENSURE_VALID_OBJECT((*frame)[17])
, ENSURE_VALID_OBJECT((*frame)[18])
, ENSURE_VALID_OBJECT((*frame)[19])
, ENSURE_VALID_OBJECT((*frame)[20])
, ENSURE_VALID_OBJECT((*frame)[21])
, ENSURE_VALID_OBJECT((*frame)[22])
, ENSURE_VALID_OBJECT((*frame)[23])
, ENSURE_VALID_OBJECT((*frame)[24])
, ENSURE_VALID_OBJECT((*frame)[25])
, ENSURE_VALID_OBJECT((*frame)[26])
, ENSURE_VALID_OBJECT((*frame)[27])
, ENSURE_VALID_OBJECT((*frame)[28])
, ENSURE_VALID_OBJECT((*frame)[29])
);
// Reg = 3
case 31:
return (*func).entry(func.raw_(), 31 , ENSURE_VALID_OBJECT((*frame)[0]) , ENSURE_VALID_OBJECT((*frame)[1]) ,
    ENSURE_VALID_OBJECT((*frame)[2]) , ENSURE_VALID_OBJECT((*frame)[3])        , ENSURE_VALID_OBJECT((*frame)[4])
, ENSURE_VALID_OBJECT((*frame)[5])
, ENSURE_VALID_OBJECT((*frame)[6])
, ENSURE_VALID_OBJECT((*frame)[7])
, ENSURE_VALID_OBJECT((*frame)[8])
, ENSURE_VALID_OBJECT((*frame)[9])
, ENSURE_VALID_OBJECT((*frame)[10])
, ENSURE_VALID_OBJECT((*frame)[11])
, ENSURE_VALID_OBJECT((*frame)[12])
, ENSURE_VALID_OBJECT((*frame)[13])
, ENSURE_VALID_OBJECT((*frame)[14])
, ENSURE_VALID_OBJECT((*frame)[15])
, ENSURE_VALID_OBJECT((*frame)[16])
, ENSURE_VALID_OBJECT((*frame)[17])
, ENSURE_VALID_OBJECT((*frame)[18])
, ENSURE_VALID_OBJECT((*frame)[19])
, ENSURE_VALID_OBJECT((*frame)[20])
, ENSURE_VALID_OBJECT((*frame)[21])
, ENSURE_VALID_OBJECT((*frame)[22])
, ENSURE_VALID_OBJECT((*frame)[23])
, ENSURE_VALID_OBJECT((*frame)[24])
, ENSURE_VALID_OBJECT((*frame)[25])
, ENSURE_VALID_OBJECT((*frame)[26])
, ENSURE_VALID_OBJECT((*frame)[27])
, ENSURE_VALID_OBJECT((*frame)[28])
, ENSURE_VALID_OBJECT((*frame)[29])
, ENSURE_VALID_OBJECT((*frame)[30])
);
// Reg = 3
case 32:
return (*func).entry(func.raw_(), 32 , ENSURE_VALID_OBJECT((*frame)[0]) , ENSURE_VALID_OBJECT((*frame)[1]) ,
    ENSURE_VALID_OBJECT((*frame)[2]) , ENSURE_VALID_OBJECT((*frame)[3])        , ENSURE_VALID_OBJECT((*frame)[4])
, ENSURE_VALID_OBJECT((*frame)[5])
, ENSURE_VALID_OBJECT((*frame)[6])
, ENSURE_VALID_OBJECT((*frame)[7])
, ENSURE_VALID_OBJECT((*frame)[8])
, ENSURE_VALID_OBJECT((*frame)[9])
, ENSURE_VALID_OBJECT((*frame)[10])
, ENSURE_VALID_OBJECT((*frame)[11])
, ENSURE_VALID_OBJECT((*frame)[12])
, ENSURE_VALID_OBJECT((*frame)[13])
, ENSURE_VALID_OBJECT((*frame)[14])
, ENSURE_VALID_OBJECT((*frame)[15])
, ENSURE_VALID_OBJECT((*frame)[16])
, ENSURE_VALID_OBJECT((*frame)[17])
, ENSURE_VALID_OBJECT((*frame)[18])
, ENSURE_VALID_OBJECT((*frame)[19])
, ENSURE_VALID_OBJECT((*frame)[20])
, ENSURE_VALID_OBJECT((*frame)[21])
, ENSURE_VALID_OBJECT((*frame)[22])
, ENSURE_VALID_OBJECT((*frame)[23])
, ENSURE_VALID_OBJECT((*frame)[24])
, ENSURE_VALID_OBJECT((*frame)[25])
, ENSURE_VALID_OBJECT((*frame)[26])
, ENSURE_VALID_OBJECT((*frame)[27])
, ENSURE_VALID_OBJECT((*frame)[28])
, ENSURE_VALID_OBJECT((*frame)[29])
, ENSURE_VALID_OBJECT((*frame)[30])
, ENSURE_VALID_OBJECT((*frame)[31])
);
// Reg = 3
case 33:
return (*func).entry(func.raw_(), 33 , ENSURE_VALID_OBJECT((*frame)[0]) , ENSURE_VALID_OBJECT((*frame)[1]) ,
    ENSURE_VALID_OBJECT((*frame)[2]) , ENSURE_VALID_OBJECT((*frame)[3])        , ENSURE_VALID_OBJECT((*frame)[4])
, ENSURE_VALID_OBJECT((*frame)[5])
, ENSURE_VALID_OBJECT((*frame)[6])
, ENSURE_VALID_OBJECT((*frame)[7])
, ENSURE_VALID_OBJECT((*frame)[8])
, ENSURE_VALID_OBJECT((*frame)[9])
, ENSURE_VALID_OBJECT((*frame)[10])
, ENSURE_VALID_OBJECT((*frame)[11])
, ENSURE_VALID_OBJECT((*frame)[12])
, ENSURE_VALID_OBJECT((*frame)[13])
, ENSURE_VALID_OBJECT((*frame)[14])
, ENSURE_VALID_OBJECT((*frame)[15])
, ENSURE_VALID_OBJECT((*frame)[16])
, ENSURE_VALID_OBJECT((*frame)[17])
, ENSURE_VALID_OBJECT((*frame)[18])
, ENSURE_VALID_OBJECT((*frame)[19])
, ENSURE_VALID_OBJECT((*frame)[20])
, ENSURE_VALID_OBJECT((*frame)[21])
, ENSURE_VALID_OBJECT((*frame)[22])
, ENSURE_VALID_OBJECT((*frame)[23])
, ENSURE_VALID_OBJECT((*frame)[24])
, ENSURE_VALID_OBJECT((*frame)[25])
, ENSURE_VALID_OBJECT((*frame)[26])
, ENSURE_VALID_OBJECT((*frame)[27])
, ENSURE_VALID_OBJECT((*frame)[28])
, ENSURE_VALID_OBJECT((*frame)[29])
, ENSURE_VALID_OBJECT((*frame)[30])
, ENSURE_VALID_OBJECT((*frame)[31])
, ENSURE_VALID_OBJECT((*frame)[32])
);
// Reg = 3
case 34:
return (*func).entry(func.raw_(), 34 , ENSURE_VALID_OBJECT((*frame)[0]) , ENSURE_VALID_OBJECT((*frame)[1]) ,
    ENSURE_VALID_OBJECT((*frame)[2]) , ENSURE_VALID_OBJECT((*frame)[3])        , ENSURE_VALID_OBJECT((*frame)[4])
, ENSURE_VALID_OBJECT((*frame)[5])
, ENSURE_VALID_OBJECT((*frame)[6])
, ENSURE_VALID_OBJECT((*frame)[7])
, ENSURE_VALID_OBJECT((*frame)[8])
, ENSURE_VALID_OBJECT((*frame)[9])
, ENSURE_VALID_OBJECT((*frame)[10])
, ENSURE_VALID_OBJECT((*frame)[11])
, ENSURE_VALID_OBJECT((*frame)[12])
, ENSURE_VALID_OBJECT((*frame)[13])
, ENSURE_VALID_OBJECT((*frame)[14])
, ENSURE_VALID_OBJECT((*frame)[15])
, ENSURE_VALID_OBJECT((*frame)[16])
, ENSURE_VALID_OBJECT((*frame)[17])
, ENSURE_VALID_OBJECT((*frame)[18])
, ENSURE_VALID_OBJECT((*frame)[19])
, ENSURE_VALID_OBJECT((*frame)[20])
, ENSURE_VALID_OBJECT((*frame)[21])
, ENSURE_VALID_OBJECT((*frame)[22])
, ENSURE_VALID_OBJECT((*frame)[23])
, ENSURE_VALID_OBJECT((*frame)[24])
, ENSURE_VALID_OBJECT((*frame)[25])
, ENSURE_VALID_OBJECT((*frame)[26])
, ENSURE_VALID_OBJECT((*frame)[27])
, ENSURE_VALID_OBJECT((*frame)[28])
, ENSURE_VALID_OBJECT((*frame)[29])
, ENSURE_VALID_OBJECT((*frame)[30])
, ENSURE_VALID_OBJECT((*frame)[31])
, ENSURE_VALID_OBJECT((*frame)[32])
, ENSURE_VALID_OBJECT((*frame)[33])
);
// Reg = 3
case 35:
return (*func).entry(func.raw_(), 35 , ENSURE_VALID_OBJECT((*frame)[0]) , ENSURE_VALID_OBJECT((*frame)[1]) ,
    ENSURE_VALID_OBJECT((*frame)[2]) , ENSURE_VALID_OBJECT((*frame)[3])        , ENSURE_VALID_OBJECT((*frame)[4])
, ENSURE_VALID_OBJECT((*frame)[5])
, ENSURE_VALID_OBJECT((*frame)[6])
, ENSURE_VALID_OBJECT((*frame)[7])
, ENSURE_VALID_OBJECT((*frame)[8])
, ENSURE_VALID_OBJECT((*frame)[9])
, ENSURE_VALID_OBJECT((*frame)[10])
, ENSURE_VALID_OBJECT((*frame)[11])
, ENSURE_VALID_OBJECT((*frame)[12])
, ENSURE_VALID_OBJECT((*frame)[13])
, ENSURE_VALID_OBJECT((*frame)[14])
, ENSURE_VALID_OBJECT((*frame)[15])
, ENSURE_VALID_OBJECT((*frame)[16])
, ENSURE_VALID_OBJECT((*frame)[17])
, ENSURE_VALID_OBJECT((*frame)[18])
, ENSURE_VALID_OBJECT((*frame)[19])
, ENSURE_VALID_OBJECT((*frame)[20])
, ENSURE_VALID_OBJECT((*frame)[21])
, ENSURE_VALID_OBJECT((*frame)[22])
, ENSURE_VALID_OBJECT((*frame)[23])
, ENSURE_VALID_OBJECT((*frame)[24])
, ENSURE_VALID_OBJECT((*frame)[25])
, ENSURE_VALID_OBJECT((*frame)[26])
, ENSURE_VALID_OBJECT((*frame)[27])
, ENSURE_VALID_OBJECT((*frame)[28])
, ENSURE_VALID_OBJECT((*frame)[29])
, ENSURE_VALID_OBJECT((*frame)[30])
, ENSURE_VALID_OBJECT((*frame)[31])
, ENSURE_VALID_OBJECT((*frame)[32])
, ENSURE_VALID_OBJECT((*frame)[33])
, ENSURE_VALID_OBJECT((*frame)[34])
);
// Reg = 3
case 36:
return (*func).entry(func.raw_(), 36 , ENSURE_VALID_OBJECT((*frame)[0]) , ENSURE_VALID_OBJECT((*frame)[1]) ,
    ENSURE_VALID_OBJECT((*frame)[2]) , ENSURE_VALID_OBJECT((*frame)[3])        , ENSURE_VALID_OBJECT((*frame)[4])
, ENSURE_VALID_OBJECT((*frame)[5])
, ENSURE_VALID_OBJECT((*frame)[6])
, ENSURE_VALID_OBJECT((*frame)[7])
, ENSURE_VALID_OBJECT((*frame)[8])
, ENSURE_VALID_OBJECT((*frame)[9])
, ENSURE_VALID_OBJECT((*frame)[10])
, ENSURE_VALID_OBJECT((*frame)[11])
, ENSURE_VALID_OBJECT((*frame)[12])
, ENSURE_VALID_OBJECT((*frame)[13])
, ENSURE_VALID_OBJECT((*frame)[14])
, ENSURE_VALID_OBJECT((*frame)[15])
, ENSURE_VALID_OBJECT((*frame)[16])
, ENSURE_VALID_OBJECT((*frame)[17])
, ENSURE_VALID_OBJECT((*frame)[18])
, ENSURE_VALID_OBJECT((*frame)[19])
, ENSURE_VALID_OBJECT((*frame)[20])
, ENSURE_VALID_OBJECT((*frame)[21])
, ENSURE_VALID_OBJECT((*frame)[22])
, ENSURE_VALID_OBJECT((*frame)[23])
, ENSURE_VALID_OBJECT((*frame)[24])
, ENSURE_VALID_OBJECT((*frame)[25])
, ENSURE_VALID_OBJECT((*frame)[26])
, ENSURE_VALID_OBJECT((*frame)[27])
, ENSURE_VALID_OBJECT((*frame)[28])
, ENSURE_VALID_OBJECT((*frame)[29])
, ENSURE_VALID_OBJECT((*frame)[30])
, ENSURE_VALID_OBJECT((*frame)[31])
, ENSURE_VALID_OBJECT((*frame)[32])
, ENSURE_VALID_OBJECT((*frame)[33])
, ENSURE_VALID_OBJECT((*frame)[34])
, ENSURE_VALID_OBJECT((*frame)[35])
);
// Reg = 3
case 37:
return (*func).entry(func.raw_(), 37 , ENSURE_VALID_OBJECT((*frame)[0]) , ENSURE_VALID_OBJECT((*frame)[1]) ,
    ENSURE_VALID_OBJECT((*frame)[2]) , ENSURE_VALID_OBJECT((*frame)[3])        , ENSURE_VALID_OBJECT((*frame)[4])
, ENSURE_VALID_OBJECT((*frame)[5])
, ENSURE_VALID_OBJECT((*frame)[6])
, ENSURE_VALID_OBJECT((*frame)[7])
, ENSURE_VALID_OBJECT((*frame)[8])
, ENSURE_VALID_OBJECT((*frame)[9])
, ENSURE_VALID_OBJECT((*frame)[10])
, ENSURE_VALID_OBJECT((*frame)[11])
, ENSURE_VALID_OBJECT((*frame)[12])
, ENSURE_VALID_OBJECT((*frame)[13])
, ENSURE_VALID_OBJECT((*frame)[14])
, ENSURE_VALID_OBJECT((*frame)[15])
, ENSURE_VALID_OBJECT((*frame)[16])
, ENSURE_VALID_OBJECT((*frame)[17])
, ENSURE_VALID_OBJECT((*frame)[18])
, ENSURE_VALID_OBJECT((*frame)[19])
, ENSURE_VALID_OBJECT((*frame)[20])
, ENSURE_VALID_OBJECT((*frame)[21])
, ENSURE_VALID_OBJECT((*frame)[22])
, ENSURE_VALID_OBJECT((*frame)[23])
, ENSURE_VALID_OBJECT((*frame)[24])
, ENSURE_VALID_OBJECT((*frame)[25])
, ENSURE_VALID_OBJECT((*frame)[26])
, ENSURE_VALID_OBJECT((*frame)[27])
, ENSURE_VALID_OBJECT((*frame)[28])
, ENSURE_VALID_OBJECT((*frame)[29])
, ENSURE_VALID_OBJECT((*frame)[30])
, ENSURE_VALID_OBJECT((*frame)[31])
, ENSURE_VALID_OBJECT((*frame)[32])
, ENSURE_VALID_OBJECT((*frame)[33])
, ENSURE_VALID_OBJECT((*frame)[34])
, ENSURE_VALID_OBJECT((*frame)[35])
, ENSURE_VALID_OBJECT((*frame)[36])
);
// Reg = 3
case 38:
return (*func).entry(func.raw_(), 38 , ENSURE_VALID_OBJECT((*frame)[0]) , ENSURE_VALID_OBJECT((*frame)[1]) ,
    ENSURE_VALID_OBJECT((*frame)[2]) , ENSURE_VALID_OBJECT((*frame)[3])        , ENSURE_VALID_OBJECT((*frame)[4])
, ENSURE_VALID_OBJECT((*frame)[5])
, ENSURE_VALID_OBJECT((*frame)[6])
, ENSURE_VALID_OBJECT((*frame)[7])
, ENSURE_VALID_OBJECT((*frame)[8])
, ENSURE_VALID_OBJECT((*frame)[9])
, ENSURE_VALID_OBJECT((*frame)[10])
, ENSURE_VALID_OBJECT((*frame)[11])
, ENSURE_VALID_OBJECT((*frame)[12])
, ENSURE_VALID_OBJECT((*frame)[13])
, ENSURE_VALID_OBJECT((*frame)[14])
, ENSURE_VALID_OBJECT((*frame)[15])
, ENSURE_VALID_OBJECT((*frame)[16])
, ENSURE_VALID_OBJECT((*frame)[17])
, ENSURE_VALID_OBJECT((*frame)[18])
, ENSURE_VALID_OBJECT((*frame)[19])
, ENSURE_VALID_OBJECT((*frame)[20])
, ENSURE_VALID_OBJECT((*frame)[21])
, ENSURE_VALID_OBJECT((*frame)[22])
, ENSURE_VALID_OBJECT((*frame)[23])
, ENSURE_VALID_OBJECT((*frame)[24])
, ENSURE_VALID_OBJECT((*frame)[25])
, ENSURE_VALID_OBJECT((*frame)[26])
, ENSURE_VALID_OBJECT((*frame)[27])
, ENSURE_VALID_OBJECT((*frame)[28])
, ENSURE_VALID_OBJECT((*frame)[29])
, ENSURE_VALID_OBJECT((*frame)[30])
, ENSURE_VALID_OBJECT((*frame)[31])
, ENSURE_VALID_OBJECT((*frame)[32])
, ENSURE_VALID_OBJECT((*frame)[33])
, ENSURE_VALID_OBJECT((*frame)[34])
, ENSURE_VALID_OBJECT((*frame)[35])
, ENSURE_VALID_OBJECT((*frame)[36])
, ENSURE_VALID_OBJECT((*frame)[37])
);
// Reg = 3
case 39:
return (*func).entry(func.raw_(), 39 , ENSURE_VALID_OBJECT((*frame)[0]) , ENSURE_VALID_OBJECT((*frame)[1]) ,
    ENSURE_VALID_OBJECT((*frame)[2]) , ENSURE_VALID_OBJECT((*frame)[3])        , ENSURE_VALID_OBJECT((*frame)[4])
, ENSURE_VALID_OBJECT((*frame)[5])
, ENSURE_VALID_OBJECT((*frame)[6])
, ENSURE_VALID_OBJECT((*frame)[7])
, ENSURE_VALID_OBJECT((*frame)[8])
, ENSURE_VALID_OBJECT((*frame)[9])
, ENSURE_VALID_OBJECT((*frame)[10])
, ENSURE_VALID_OBJECT((*frame)[11])
, ENSURE_VALID_OBJECT((*frame)[12])
, ENSURE_VALID_OBJECT((*frame)[13])
, ENSURE_VALID_OBJECT((*frame)[14])
, ENSURE_VALID_OBJECT((*frame)[15])
, ENSURE_VALID_OBJECT((*frame)[16])
, ENSURE_VALID_OBJECT((*frame)[17])
, ENSURE_VALID_OBJECT((*frame)[18])
, ENSURE_VALID_OBJECT((*frame)[19])
, ENSURE_VALID_OBJECT((*frame)[20])
, ENSURE_VALID_OBJECT((*frame)[21])
, ENSURE_VALID_OBJECT((*frame)[22])
, ENSURE_VALID_OBJECT((*frame)[23])
, ENSURE_VALID_OBJECT((*frame)[24])
, ENSURE_VALID_OBJECT((*frame)[25])
, ENSURE_VALID_OBJECT((*frame)[26])
, ENSURE_VALID_OBJECT((*frame)[27])
, ENSURE_VALID_OBJECT((*frame)[28])
, ENSURE_VALID_OBJECT((*frame)[29])
, ENSURE_VALID_OBJECT((*frame)[30])
, ENSURE_VALID_OBJECT((*frame)[31])
, ENSURE_VALID_OBJECT((*frame)[32])
, ENSURE_VALID_OBJECT((*frame)[33])
, ENSURE_VALID_OBJECT((*frame)[34])
, ENSURE_VALID_OBJECT((*frame)[35])
, ENSURE_VALID_OBJECT((*frame)[36])
, ENSURE_VALID_OBJECT((*frame)[37])
, ENSURE_VALID_OBJECT((*frame)[38])
);
// Reg = 3
case 40:
return (*func).entry(func.raw_(), 40 , ENSURE_VALID_OBJECT((*frame)[0]) , ENSURE_VALID_OBJECT((*frame)[1]) ,
    ENSURE_VALID_OBJECT((*frame)[2]) , ENSURE_VALID_OBJECT((*frame)[3])        , ENSURE_VALID_OBJECT((*frame)[4])
, ENSURE_VALID_OBJECT((*frame)[5])
, ENSURE_VALID_OBJECT((*frame)[6])
, ENSURE_VALID_OBJECT((*frame)[7])
, ENSURE_VALID_OBJECT((*frame)[8])
, ENSURE_VALID_OBJECT((*frame)[9])
, ENSURE_VALID_OBJECT((*frame)[10])
, ENSURE_VALID_OBJECT((*frame)[11])
, ENSURE_VALID_OBJECT((*frame)[12])
, ENSURE_VALID_OBJECT((*frame)[13])
, ENSURE_VALID_OBJECT((*frame)[14])
, ENSURE_VALID_OBJECT((*frame)[15])
, ENSURE_VALID_OBJECT((*frame)[16])
, ENSURE_VALID_OBJECT((*frame)[17])
, ENSURE_VALID_OBJECT((*frame)[18])
, ENSURE_VALID_OBJECT((*frame)[19])
, ENSURE_VALID_OBJECT((*frame)[20])
, ENSURE_VALID_OBJECT((*frame)[21])
, ENSURE_VALID_OBJECT((*frame)[22])
, ENSURE_VALID_OBJECT((*frame)[23])
, ENSURE_VALID_OBJECT((*frame)[24])
, ENSURE_VALID_OBJECT((*frame)[25])
, ENSURE_VALID_OBJECT((*frame)[26])
, ENSURE_VALID_OBJECT((*frame)[27])
, ENSURE_VALID_OBJECT((*frame)[28])
, ENSURE_VALID_OBJECT((*frame)[29])
, ENSURE_VALID_OBJECT((*frame)[30])
, ENSURE_VALID_OBJECT((*frame)[31])
, ENSURE_VALID_OBJECT((*frame)[32])
, ENSURE_VALID_OBJECT((*frame)[33])
, ENSURE_VALID_OBJECT((*frame)[34])
, ENSURE_VALID_OBJECT((*frame)[35])
, ENSURE_VALID_OBJECT((*frame)[36])
, ENSURE_VALID_OBJECT((*frame)[37])
, ENSURE_VALID_OBJECT((*frame)[38])
, ENSURE_VALID_OBJECT((*frame)[39])
);
// Reg = 3
case 41:
return (*func).entry(func.raw_(), 41 , ENSURE_VALID_OBJECT((*frame)[0]) , ENSURE_VALID_OBJECT((*frame)[1]) ,
    ENSURE_VALID_OBJECT((*frame)[2]) , ENSURE_VALID_OBJECT((*frame)[3])        , ENSURE_VALID_OBJECT((*frame)[4])
, ENSURE_VALID_OBJECT((*frame)[5])
, ENSURE_VALID_OBJECT((*frame)[6])
, ENSURE_VALID_OBJECT((*frame)[7])
, ENSURE_VALID_OBJECT((*frame)[8])
, ENSURE_VALID_OBJECT((*frame)[9])
, ENSURE_VALID_OBJECT((*frame)[10])
, ENSURE_VALID_OBJECT((*frame)[11])
, ENSURE_VALID_OBJECT((*frame)[12])
, ENSURE_VALID_OBJECT((*frame)[13])
, ENSURE_VALID_OBJECT((*frame)[14])
, ENSURE_VALID_OBJECT((*frame)[15])
, ENSURE_VALID_OBJECT((*frame)[16])
, ENSURE_VALID_OBJECT((*frame)[17])
, ENSURE_VALID_OBJECT((*frame)[18])
, ENSURE_VALID_OBJECT((*frame)[19])
, ENSURE_VALID_OBJECT((*frame)[20])
, ENSURE_VALID_OBJECT((*frame)[21])
, ENSURE_VALID_OBJECT((*frame)[22])
, ENSURE_VALID_OBJECT((*frame)[23])
, ENSURE_VALID_OBJECT((*frame)[24])
, ENSURE_VALID_OBJECT((*frame)[25])
, ENSURE_VALID_OBJECT((*frame)[26])
, ENSURE_VALID_OBJECT((*frame)[27])
, ENSURE_VALID_OBJECT((*frame)[28])
, ENSURE_VALID_OBJECT((*frame)[29])
, ENSURE_VALID_OBJECT((*frame)[30])
, ENSURE_VALID_OBJECT((*frame)[31])
, ENSURE_VALID_OBJECT((*frame)[32])
, ENSURE_VALID_OBJECT((*frame)[33])
, ENSURE_VALID_OBJECT((*frame)[34])
, ENSURE_VALID_OBJECT((*frame)[35])
, ENSURE_VALID_OBJECT((*frame)[36])
, ENSURE_VALID_OBJECT((*frame)[37])
, ENSURE_VALID_OBJECT((*frame)[38])
, ENSURE_VALID_OBJECT((*frame)[39])
, ENSURE_VALID_OBJECT((*frame)[40])
);
// Reg = 3
case 42:
return (*func).entry(func.raw_(), 42 , ENSURE_VALID_OBJECT((*frame)[0]) , ENSURE_VALID_OBJECT((*frame)[1]) ,
    ENSURE_VALID_OBJECT((*frame)[2]) , ENSURE_VALID_OBJECT((*frame)[3])        , ENSURE_VALID_OBJECT((*frame)[4])
, ENSURE_VALID_OBJECT((*frame)[5])
, ENSURE_VALID_OBJECT((*frame)[6])
, ENSURE_VALID_OBJECT((*frame)[7])
, ENSURE_VALID_OBJECT((*frame)[8])
, ENSURE_VALID_OBJECT((*frame)[9])
, ENSURE_VALID_OBJECT((*frame)[10])
, ENSURE_VALID_OBJECT((*frame)[11])
, ENSURE_VALID_OBJECT((*frame)[12])
, ENSURE_VALID_OBJECT((*frame)[13])
, ENSURE_VALID_OBJECT((*frame)[14])
, ENSURE_VALID_OBJECT((*frame)[15])
, ENSURE_VALID_OBJECT((*frame)[16])
, ENSURE_VALID_OBJECT((*frame)[17])
, ENSURE_VALID_OBJECT((*frame)[18])
, ENSURE_VALID_OBJECT((*frame)[19])
, ENSURE_VALID_OBJECT((*frame)[20])
, ENSURE_VALID_OBJECT((*frame)[21])
, ENSURE_VALID_OBJECT((*frame)[22])
, ENSURE_VALID_OBJECT((*frame)[23])
, ENSURE_VALID_OBJECT((*frame)[24])
, ENSURE_VALID_OBJECT((*frame)[25])
, ENSURE_VALID_OBJECT((*frame)[26])
, ENSURE_VALID_OBJECT((*frame)[27])
, ENSURE_VALID_OBJECT((*frame)[28])
, ENSURE_VALID_OBJECT((*frame)[29])
, ENSURE_VALID_OBJECT((*frame)[30])
, ENSURE_VALID_OBJECT((*frame)[31])
, ENSURE_VALID_OBJECT((*frame)[32])
, ENSURE_VALID_OBJECT((*frame)[33])
, ENSURE_VALID_OBJECT((*frame)[34])
, ENSURE_VALID_OBJECT((*frame)[35])
, ENSURE_VALID_OBJECT((*frame)[36])
, ENSURE_VALID_OBJECT((*frame)[37])
, ENSURE_VALID_OBJECT((*frame)[38])
, ENSURE_VALID_OBJECT((*frame)[39])
, ENSURE_VALID_OBJECT((*frame)[40])
, ENSURE_VALID_OBJECT((*frame)[41])
);
// Reg = 3
case 43:
return (*func).entry(func.raw_(), 43 , ENSURE_VALID_OBJECT((*frame)[0]) , ENSURE_VALID_OBJECT((*frame)[1]) ,
    ENSURE_VALID_OBJECT((*frame)[2]) , ENSURE_VALID_OBJECT((*frame)[3])        , ENSURE_VALID_OBJECT((*frame)[4])
, ENSURE_VALID_OBJECT((*frame)[5])
, ENSURE_VALID_OBJECT((*frame)[6])
, ENSURE_VALID_OBJECT((*frame)[7])
, ENSURE_VALID_OBJECT((*frame)[8])
, ENSURE_VALID_OBJECT((*frame)[9])
, ENSURE_VALID_OBJECT((*frame)[10])
, ENSURE_VALID_OBJECT((*frame)[11])
, ENSURE_VALID_OBJECT((*frame)[12])
, ENSURE_VALID_OBJECT((*frame)[13])
, ENSURE_VALID_OBJECT((*frame)[14])
, ENSURE_VALID_OBJECT((*frame)[15])
, ENSURE_VALID_OBJECT((*frame)[16])
, ENSURE_VALID_OBJECT((*frame)[17])
, ENSURE_VALID_OBJECT((*frame)[18])
, ENSURE_VALID_OBJECT((*frame)[19])
, ENSURE_VALID_OBJECT((*frame)[20])
, ENSURE_VALID_OBJECT((*frame)[21])
, ENSURE_VALID_OBJECT((*frame)[22])
, ENSURE_VALID_OBJECT((*frame)[23])
, ENSURE_VALID_OBJECT((*frame)[24])
, ENSURE_VALID_OBJECT((*frame)[25])
, ENSURE_VALID_OBJECT((*frame)[26])
, ENSURE_VALID_OBJECT((*frame)[27])
, ENSURE_VALID_OBJECT((*frame)[28])
, ENSURE_VALID_OBJECT((*frame)[29])
, ENSURE_VALID_OBJECT((*frame)[30])
, ENSURE_VALID_OBJECT((*frame)[31])
, ENSURE_VALID_OBJECT((*frame)[32])
, ENSURE_VALID_OBJECT((*frame)[33])
, ENSURE_VALID_OBJECT((*frame)[34])
, ENSURE_VALID_OBJECT((*frame)[35])
, ENSURE_VALID_OBJECT((*frame)[36])
, ENSURE_VALID_OBJECT((*frame)[37])
, ENSURE_VALID_OBJECT((*frame)[38])
, ENSURE_VALID_OBJECT((*frame)[39])
, ENSURE_VALID_OBJECT((*frame)[40])
, ENSURE_VALID_OBJECT((*frame)[41])
, ENSURE_VALID_OBJECT((*frame)[42])
);
// Reg = 3
case 44:
return (*func).entry(func.raw_(), 44 , ENSURE_VALID_OBJECT((*frame)[0]) , ENSURE_VALID_OBJECT((*frame)[1]) ,
    ENSURE_VALID_OBJECT((*frame)[2]) , ENSURE_VALID_OBJECT((*frame)[3])        , ENSURE_VALID_OBJECT((*frame)[4])
, ENSURE_VALID_OBJECT((*frame)[5])
, ENSURE_VALID_OBJECT((*frame)[6])
, ENSURE_VALID_OBJECT((*frame)[7])
, ENSURE_VALID_OBJECT((*frame)[8])
, ENSURE_VALID_OBJECT((*frame)[9])
, ENSURE_VALID_OBJECT((*frame)[10])
, ENSURE_VALID_OBJECT((*frame)[11])
, ENSURE_VALID_OBJECT((*frame)[12])
, ENSURE_VALID_OBJECT((*frame)[13])
, ENSURE_VALID_OBJECT((*frame)[14])
, ENSURE_VALID_OBJECT((*frame)[15])
, ENSURE_VALID_OBJECT((*frame)[16])
, ENSURE_VALID_OBJECT((*frame)[17])
, ENSURE_VALID_OBJECT((*frame)[18])
, ENSURE_VALID_OBJECT((*frame)[19])
, ENSURE_VALID_OBJECT((*frame)[20])
, ENSURE_VALID_OBJECT((*frame)[21])
, ENSURE_VALID_OBJECT((*frame)[22])
, ENSURE_VALID_OBJECT((*frame)[23])
, ENSURE_VALID_OBJECT((*frame)[24])
, ENSURE_VALID_OBJECT((*frame)[25])
, ENSURE_VALID_OBJECT((*frame)[26])
, ENSURE_VALID_OBJECT((*frame)[27])
, ENSURE_VALID_OBJECT((*frame)[28])
, ENSURE_VALID_OBJECT((*frame)[29])
, ENSURE_VALID_OBJECT((*frame)[30])
, ENSURE_VALID_OBJECT((*frame)[31])
, ENSURE_VALID_OBJECT((*frame)[32])
, ENSURE_VALID_OBJECT((*frame)[33])
, ENSURE_VALID_OBJECT((*frame)[34])
, ENSURE_VALID_OBJECT((*frame)[35])
, ENSURE_VALID_OBJECT((*frame)[36])
, ENSURE_VALID_OBJECT((*frame)[37])
, ENSURE_VALID_OBJECT((*frame)[38])
, ENSURE_VALID_OBJECT((*frame)[39])
, ENSURE_VALID_OBJECT((*frame)[40])
, ENSURE_VALID_OBJECT((*frame)[41])
, ENSURE_VALID_OBJECT((*frame)[42])
, ENSURE_VALID_OBJECT((*frame)[43])
);
// Reg = 3
case 45:
return (*func).entry(func.raw_(), 45 , ENSURE_VALID_OBJECT((*frame)[0]) , ENSURE_VALID_OBJECT((*frame)[1]) ,
    ENSURE_VALID_OBJECT((*frame)[2]) , ENSURE_VALID_OBJECT((*frame)[3])        , ENSURE_VALID_OBJECT((*frame)[4])
, ENSURE_VALID_OBJECT((*frame)[5])
, ENSURE_VALID_OBJECT((*frame)[6])
, ENSURE_VALID_OBJECT((*frame)[7])
, ENSURE_VALID_OBJECT((*frame)[8])
, ENSURE_VALID_OBJECT((*frame)[9])
, ENSURE_VALID_OBJECT((*frame)[10])
, ENSURE_VALID_OBJECT((*frame)[11])
, ENSURE_VALID_OBJECT((*frame)[12])
, ENSURE_VALID_OBJECT((*frame)[13])
, ENSURE_VALID_OBJECT((*frame)[14])
, ENSURE_VALID_OBJECT((*frame)[15])
, ENSURE_VALID_OBJECT((*frame)[16])
, ENSURE_VALID_OBJECT((*frame)[17])
, ENSURE_VALID_OBJECT((*frame)[18])
, ENSURE_VALID_OBJECT((*frame)[19])
, ENSURE_VALID_OBJECT((*frame)[20])
, ENSURE_VALID_OBJECT((*frame)[21])
, ENSURE_VALID_OBJECT((*frame)[22])
, ENSURE_VALID_OBJECT((*frame)[23])
, ENSURE_VALID_OBJECT((*frame)[24])
, ENSURE_VALID_OBJECT((*frame)[25])
, ENSURE_VALID_OBJECT((*frame)[26])
, ENSURE_VALID_OBJECT((*frame)[27])
, ENSURE_VALID_OBJECT((*frame)[28])
, ENSURE_VALID_OBJECT((*frame)[29])
, ENSURE_VALID_OBJECT((*frame)[30])
, ENSURE_VALID_OBJECT((*frame)[31])
, ENSURE_VALID_OBJECT((*frame)[32])
, ENSURE_VALID_OBJECT((*frame)[33])
, ENSURE_VALID_OBJECT((*frame)[34])
, ENSURE_VALID_OBJECT((*frame)[35])
, ENSURE_VALID_OBJECT((*frame)[36])
, ENSURE_VALID_OBJECT((*frame)[37])
, ENSURE_VALID_OBJECT((*frame)[38])
, ENSURE_VALID_OBJECT((*frame)[39])
, ENSURE_VALID_OBJECT((*frame)[40])
, ENSURE_VALID_OBJECT((*frame)[41])
, ENSURE_VALID_OBJECT((*frame)[42])
, ENSURE_VALID_OBJECT((*frame)[43])
, ENSURE_VALID_OBJECT((*frame)[44])
);
// Reg = 3
case 46:
return (*func).entry(func.raw_(), 46 , ENSURE_VALID_OBJECT((*frame)[0]) , ENSURE_VALID_OBJECT((*frame)[1]) ,
    ENSURE_VALID_OBJECT((*frame)[2]) , ENSURE_VALID_OBJECT((*frame)[3])        , ENSURE_VALID_OBJECT((*frame)[4])
, ENSURE_VALID_OBJECT((*frame)[5])
, ENSURE_VALID_OBJECT((*frame)[6])
, ENSURE_VALID_OBJECT((*frame)[7])
, ENSURE_VALID_OBJECT((*frame)[8])
, ENSURE_VALID_OBJECT((*frame)[9])
, ENSURE_VALID_OBJECT((*frame)[10])
, ENSURE_VALID_OBJECT((*frame)[11])
, ENSURE_VALID_OBJECT((*frame)[12])
, ENSURE_VALID_OBJECT((*frame)[13])
, ENSURE_VALID_OBJECT((*frame)[14])
, ENSURE_VALID_OBJECT((*frame)[15])
, ENSURE_VALID_OBJECT((*frame)[16])
, ENSURE_VALID_OBJECT((*frame)[17])
, ENSURE_VALID_OBJECT((*frame)[18])
, ENSURE_VALID_OBJECT((*frame)[19])
, ENSURE_VALID_OBJECT((*frame)[20])
, ENSURE_VALID_OBJECT((*frame)[21])
, ENSURE_VALID_OBJECT((*frame)[22])
, ENSURE_VALID_OBJECT((*frame)[23])
, ENSURE_VALID_OBJECT((*frame)[24])
, ENSURE_VALID_OBJECT((*frame)[25])
, ENSURE_VALID_OBJECT((*frame)[26])
, ENSURE_VALID_OBJECT((*frame)[27])
, ENSURE_VALID_OBJECT((*frame)[28])
, ENSURE_VALID_OBJECT((*frame)[29])
, ENSURE_VALID_OBJECT((*frame)[30])
, ENSURE_VALID_OBJECT((*frame)[31])
, ENSURE_VALID_OBJECT((*frame)[32])
, ENSURE_VALID_OBJECT((*frame)[33])
, ENSURE_VALID_OBJECT((*frame)[34])
, ENSURE_VALID_OBJECT((*frame)[35])
, ENSURE_VALID_OBJECT((*frame)[36])
, ENSURE_VALID_OBJECT((*frame)[37])
, ENSURE_VALID_OBJECT((*frame)[38])
, ENSURE_VALID_OBJECT((*frame)[39])
, ENSURE_VALID_OBJECT((*frame)[40])
, ENSURE_VALID_OBJECT((*frame)[41])
, ENSURE_VALID_OBJECT((*frame)[42])
, ENSURE_VALID_OBJECT((*frame)[43])
, ENSURE_VALID_OBJECT((*frame)[44])
, ENSURE_VALID_OBJECT((*frame)[45])
);
// Reg = 3
case 47:
return (*func).entry(func.raw_(), 47 , ENSURE_VALID_OBJECT((*frame)[0]) , ENSURE_VALID_OBJECT((*frame)[1]) ,
    ENSURE_VALID_OBJECT((*frame)[2]) , ENSURE_VALID_OBJECT((*frame)[3])        , ENSURE_VALID_OBJECT((*frame)[4])
, ENSURE_VALID_OBJECT((*frame)[5])
, ENSURE_VALID_OBJECT((*frame)[6])
, ENSURE_VALID_OBJECT((*frame)[7])
, ENSURE_VALID_OBJECT((*frame)[8])
, ENSURE_VALID_OBJECT((*frame)[9])
, ENSURE_VALID_OBJECT((*frame)[10])
, ENSURE_VALID_OBJECT((*frame)[11])
, ENSURE_VALID_OBJECT((*frame)[12])
, ENSURE_VALID_OBJECT((*frame)[13])
, ENSURE_VALID_OBJECT((*frame)[14])
, ENSURE_VALID_OBJECT((*frame)[15])
, ENSURE_VALID_OBJECT((*frame)[16])
, ENSURE_VALID_OBJECT((*frame)[17])
, ENSURE_VALID_OBJECT((*frame)[18])
, ENSURE_VALID_OBJECT((*frame)[19])
, ENSURE_VALID_OBJECT((*frame)[20])
, ENSURE_VALID_OBJECT((*frame)[21])
, ENSURE_VALID_OBJECT((*frame)[22])
, ENSURE_VALID_OBJECT((*frame)[23])
, ENSURE_VALID_OBJECT((*frame)[24])
, ENSURE_VALID_OBJECT((*frame)[25])
, ENSURE_VALID_OBJECT((*frame)[26])
, ENSURE_VALID_OBJECT((*frame)[27])
, ENSURE_VALID_OBJECT((*frame)[28])
, ENSURE_VALID_OBJECT((*frame)[29])
, ENSURE_VALID_OBJECT((*frame)[30])
, ENSURE_VALID_OBJECT((*frame)[31])
, ENSURE_VALID_OBJECT((*frame)[32])
, ENSURE_VALID_OBJECT((*frame)[33])
, ENSURE_VALID_OBJECT((*frame)[34])
, ENSURE_VALID_OBJECT((*frame)[35])
, ENSURE_VALID_OBJECT((*frame)[36])
, ENSURE_VALID_OBJECT((*frame)[37])
, ENSURE_VALID_OBJECT((*frame)[38])
, ENSURE_VALID_OBJECT((*frame)[39])
, ENSURE_VALID_OBJECT((*frame)[40])
, ENSURE_VALID_OBJECT((*frame)[41])
, ENSURE_VALID_OBJECT((*frame)[42])
, ENSURE_VALID_OBJECT((*frame)[43])
, ENSURE_VALID_OBJECT((*frame)[44])
, ENSURE_VALID_OBJECT((*frame)[45])
, ENSURE_VALID_OBJECT((*frame)[46])
);
// Reg = 3
case 48:
return (*func).entry(func.raw_(), 48 , ENSURE_VALID_OBJECT((*frame)[0]) , ENSURE_VALID_OBJECT((*frame)[1]) ,
    ENSURE_VALID_OBJECT((*frame)[2]) , ENSURE_VALID_OBJECT((*frame)[3])        , ENSURE_VALID_OBJECT((*frame)[4])
, ENSURE_VALID_OBJECT((*frame)[5])
, ENSURE_VALID_OBJECT((*frame)[6])
, ENSURE_VALID_OBJECT((*frame)[7])
, ENSURE_VALID_OBJECT((*frame)[8])
, ENSURE_VALID_OBJECT((*frame)[9])
, ENSURE_VALID_OBJECT((*frame)[10])
, ENSURE_VALID_OBJECT((*frame)[11])
, ENSURE_VALID_OBJECT((*frame)[12])
, ENSURE_VALID_OBJECT((*frame)[13])
, ENSURE_VALID_OBJECT((*frame)[14])
, ENSURE_VALID_OBJECT((*frame)[15])
, ENSURE_VALID_OBJECT((*frame)[16])
, ENSURE_VALID_OBJECT((*frame)[17])
, ENSURE_VALID_OBJECT((*frame)[18])
, ENSURE_VALID_OBJECT((*frame)[19])
, ENSURE_VALID_OBJECT((*frame)[20])
, ENSURE_VALID_OBJECT((*frame)[21])
, ENSURE_VALID_OBJECT((*frame)[22])
, ENSURE_VALID_OBJECT((*frame)[23])
, ENSURE_VALID_OBJECT((*frame)[24])
, ENSURE_VALID_OBJECT((*frame)[25])
, ENSURE_VALID_OBJECT((*frame)[26])
, ENSURE_VALID_OBJECT((*frame)[27])
, ENSURE_VALID_OBJECT((*frame)[28])
, ENSURE_VALID_OBJECT((*frame)[29])
, ENSURE_VALID_OBJECT((*frame)[30])
, ENSURE_VALID_OBJECT((*frame)[31])
, ENSURE_VALID_OBJECT((*frame)[32])
, ENSURE_VALID_OBJECT((*frame)[33])
, ENSURE_VALID_OBJECT((*frame)[34])
, ENSURE_VALID_OBJECT((*frame)[35])
, ENSURE_VALID_OBJECT((*frame)[36])
, ENSURE_VALID_OBJECT((*frame)[37])
, ENSURE_VALID_OBJECT((*frame)[38])
, ENSURE_VALID_OBJECT((*frame)[39])
, ENSURE_VALID_OBJECT((*frame)[40])
, ENSURE_VALID_OBJECT((*frame)[41])
, ENSURE_VALID_OBJECT((*frame)[42])
, ENSURE_VALID_OBJECT((*frame)[43])
, ENSURE_VALID_OBJECT((*frame)[44])
, ENSURE_VALID_OBJECT((*frame)[45])
, ENSURE_VALID_OBJECT((*frame)[46])
, ENSURE_VALID_OBJECT((*frame)[47])
);
// Reg = 3
case 49:
return (*func).entry(func.raw_(), 49 , ENSURE_VALID_OBJECT((*frame)[0]) , ENSURE_VALID_OBJECT((*frame)[1]) ,
    ENSURE_VALID_OBJECT((*frame)[2]) , ENSURE_VALID_OBJECT((*frame)[3])        , ENSURE_VALID_OBJECT((*frame)[4])
, ENSURE_VALID_OBJECT((*frame)[5])
, ENSURE_VALID_OBJECT((*frame)[6])
, ENSURE_VALID_OBJECT((*frame)[7])
, ENSURE_VALID_OBJECT((*frame)[8])
, ENSURE_VALID_OBJECT((*frame)[9])
, ENSURE_VALID_OBJECT((*frame)[10])
, ENSURE_VALID_OBJECT((*frame)[11])
, ENSURE_VALID_OBJECT((*frame)[12])
, ENSURE_VALID_OBJECT((*frame)[13])
, ENSURE_VALID_OBJECT((*frame)[14])
, ENSURE_VALID_OBJECT((*frame)[15])
, ENSURE_VALID_OBJECT((*frame)[16])
, ENSURE_VALID_OBJECT((*frame)[17])
, ENSURE_VALID_OBJECT((*frame)[18])
, ENSURE_VALID_OBJECT((*frame)[19])
, ENSURE_VALID_OBJECT((*frame)[20])
, ENSURE_VALID_OBJECT((*frame)[21])
, ENSURE_VALID_OBJECT((*frame)[22])
, ENSURE_VALID_OBJECT((*frame)[23])
, ENSURE_VALID_OBJECT((*frame)[24])
, ENSURE_VALID_OBJECT((*frame)[25])
, ENSURE_VALID_OBJECT((*frame)[26])
, ENSURE_VALID_OBJECT((*frame)[27])
, ENSURE_VALID_OBJECT((*frame)[28])
, ENSURE_VALID_OBJECT((*frame)[29])
, ENSURE_VALID_OBJECT((*frame)[30])
, ENSURE_VALID_OBJECT((*frame)[31])
, ENSURE_VALID_OBJECT((*frame)[32])
, ENSURE_VALID_OBJECT((*frame)[33])
, ENSURE_VALID_OBJECT((*frame)[34])
, ENSURE_VALID_OBJECT((*frame)[35])
, ENSURE_VALID_OBJECT((*frame)[36])
, ENSURE_VALID_OBJECT((*frame)[37])
, ENSURE_VALID_OBJECT((*frame)[38])
, ENSURE_VALID_OBJECT((*frame)[39])
, ENSURE_VALID_OBJECT((*frame)[40])
, ENSURE_VALID_OBJECT((*frame)[41])
, ENSURE_VALID_OBJECT((*frame)[42])
, ENSURE_VALID_OBJECT((*frame)[43])
, ENSURE_VALID_OBJECT((*frame)[44])
, ENSURE_VALID_OBJECT((*frame)[45])
, ENSURE_VALID_OBJECT((*frame)[46])
, ENSURE_VALID_OBJECT((*frame)[47])
, ENSURE_VALID_OBJECT((*frame)[48])
);
// Reg = 3
case 50:
return (*func).entry(func.raw_(), 50 , ENSURE_VALID_OBJECT((*frame)[0]) , ENSURE_VALID_OBJECT((*frame)[1]) ,
    ENSURE_VALID_OBJECT((*frame)[2]) , ENSURE_VALID_OBJECT((*frame)[3])        , ENSURE_VALID_OBJECT((*frame)[4])
, ENSURE_VALID_OBJECT((*frame)[5])
, ENSURE_VALID_OBJECT((*frame)[6])
, ENSURE_VALID_OBJECT((*frame)[7])
, ENSURE_VALID_OBJECT((*frame)[8])
, ENSURE_VALID_OBJECT((*frame)[9])
, ENSURE_VALID_OBJECT((*frame)[10])
, ENSURE_VALID_OBJECT((*frame)[11])
, ENSURE_VALID_OBJECT((*frame)[12])
, ENSURE_VALID_OBJECT((*frame)[13])
, ENSURE_VALID_OBJECT((*frame)[14])
, ENSURE_VALID_OBJECT((*frame)[15])
, ENSURE_VALID_OBJECT((*frame)[16])
, ENSURE_VALID_OBJECT((*frame)[17])
, ENSURE_VALID_OBJECT((*frame)[18])
, ENSURE_VALID_OBJECT((*frame)[19])
, ENSURE_VALID_OBJECT((*frame)[20])
, ENSURE_VALID_OBJECT((*frame)[21])
, ENSURE_VALID_OBJECT((*frame)[22])
, ENSURE_VALID_OBJECT((*frame)[23])
, ENSURE_VALID_OBJECT((*frame)[24])
, ENSURE_VALID_OBJECT((*frame)[25])
, ENSURE_VALID_OBJECT((*frame)[26])
, ENSURE_VALID_OBJECT((*frame)[27])
, ENSURE_VALID_OBJECT((*frame)[28])
, ENSURE_VALID_OBJECT((*frame)[29])
, ENSURE_VALID_OBJECT((*frame)[30])
, ENSURE_VALID_OBJECT((*frame)[31])
, ENSURE_VALID_OBJECT((*frame)[32])
, ENSURE_VALID_OBJECT((*frame)[33])
, ENSURE_VALID_OBJECT((*frame)[34])
, ENSURE_VALID_OBJECT((*frame)[35])
, ENSURE_VALID_OBJECT((*frame)[36])
, ENSURE_VALID_OBJECT((*frame)[37])
, ENSURE_VALID_OBJECT((*frame)[38])
, ENSURE_VALID_OBJECT((*frame)[39])
, ENSURE_VALID_OBJECT((*frame)[40])
, ENSURE_VALID_OBJECT((*frame)[41])
, ENSURE_VALID_OBJECT((*frame)[42])
, ENSURE_VALID_OBJECT((*frame)[43])
, ENSURE_VALID_OBJECT((*frame)[44])
, ENSURE_VALID_OBJECT((*frame)[45])
, ENSURE_VALID_OBJECT((*frame)[46])
, ENSURE_VALID_OBJECT((*frame)[47])
, ENSURE_VALID_OBJECT((*frame)[48])
, ENSURE_VALID_OBJECT((*frame)[49])
);
// Reg = 3
case 51:
return (*func).entry(func.raw_(), 51 , ENSURE_VALID_OBJECT((*frame)[0]) , ENSURE_VALID_OBJECT((*frame)[1]) ,
    ENSURE_VALID_OBJECT((*frame)[2]) , ENSURE_VALID_OBJECT((*frame)[3])        , ENSURE_VALID_OBJECT((*frame)[4])
, ENSURE_VALID_OBJECT((*frame)[5])
, ENSURE_VALID_OBJECT((*frame)[6])
, ENSURE_VALID_OBJECT((*frame)[7])
, ENSURE_VALID_OBJECT((*frame)[8])
, ENSURE_VALID_OBJECT((*frame)[9])
, ENSURE_VALID_OBJECT((*frame)[10])
, ENSURE_VALID_OBJECT((*frame)[11])
, ENSURE_VALID_OBJECT((*frame)[12])
, ENSURE_VALID_OBJECT((*frame)[13])
, ENSURE_VALID_OBJECT((*frame)[14])
, ENSURE_VALID_OBJECT((*frame)[15])
, ENSURE_VALID_OBJECT((*frame)[16])
, ENSURE_VALID_OBJECT((*frame)[17])
, ENSURE_VALID_OBJECT((*frame)[18])
, ENSURE_VALID_OBJECT((*frame)[19])
, ENSURE_VALID_OBJECT((*frame)[20])
, ENSURE_VALID_OBJECT((*frame)[21])
, ENSURE_VALID_OBJECT((*frame)[22])
, ENSURE_VALID_OBJECT((*frame)[23])
, ENSURE_VALID_OBJECT((*frame)[24])
, ENSURE_VALID_OBJECT((*frame)[25])
, ENSURE_VALID_OBJECT((*frame)[26])
, ENSURE_VALID_OBJECT((*frame)[27])
, ENSURE_VALID_OBJECT((*frame)[28])
, ENSURE_VALID_OBJECT((*frame)[29])
, ENSURE_VALID_OBJECT((*frame)[30])
, ENSURE_VALID_OBJECT((*frame)[31])
, ENSURE_VALID_OBJECT((*frame)[32])
, ENSURE_VALID_OBJECT((*frame)[33])
, ENSURE_VALID_OBJECT((*frame)[34])
, ENSURE_VALID_OBJECT((*frame)[35])
, ENSURE_VALID_OBJECT((*frame)[36])
, ENSURE_VALID_OBJECT((*frame)[37])
, ENSURE_VALID_OBJECT((*frame)[38])
, ENSURE_VALID_OBJECT((*frame)[39])
, ENSURE_VALID_OBJECT((*frame)[40])
, ENSURE_VALID_OBJECT((*frame)[41])
, ENSURE_VALID_OBJECT((*frame)[42])
, ENSURE_VALID_OBJECT((*frame)[43])
, ENSURE_VALID_OBJECT((*frame)[44])
, ENSURE_VALID_OBJECT((*frame)[45])
, ENSURE_VALID_OBJECT((*frame)[46])
, ENSURE_VALID_OBJECT((*frame)[47])
, ENSURE_VALID_OBJECT((*frame)[48])
, ENSURE_VALID_OBJECT((*frame)[49])
, ENSURE_VALID_OBJECT((*frame)[50])
);
// Reg = 3
case 52:
return (*func).entry(func.raw_(), 52 , ENSURE_VALID_OBJECT((*frame)[0]) , ENSURE_VALID_OBJECT((*frame)[1]) ,
    ENSURE_VALID_OBJECT((*frame)[2]) , ENSURE_VALID_OBJECT((*frame)[3])        , ENSURE_VALID_OBJECT((*frame)[4])
, ENSURE_VALID_OBJECT((*frame)[5])
, ENSURE_VALID_OBJECT((*frame)[6])
, ENSURE_VALID_OBJECT((*frame)[7])
, ENSURE_VALID_OBJECT((*frame)[8])
, ENSURE_VALID_OBJECT((*frame)[9])
, ENSURE_VALID_OBJECT((*frame)[10])
, ENSURE_VALID_OBJECT((*frame)[11])
, ENSURE_VALID_OBJECT((*frame)[12])
, ENSURE_VALID_OBJECT((*frame)[13])
, ENSURE_VALID_OBJECT((*frame)[14])
, ENSURE_VALID_OBJECT((*frame)[15])
, ENSURE_VALID_OBJECT((*frame)[16])
, ENSURE_VALID_OBJECT((*frame)[17])
, ENSURE_VALID_OBJECT((*frame)[18])
, ENSURE_VALID_OBJECT((*frame)[19])
, ENSURE_VALID_OBJECT((*frame)[20])
, ENSURE_VALID_OBJECT((*frame)[21])
, ENSURE_VALID_OBJECT((*frame)[22])
, ENSURE_VALID_OBJECT((*frame)[23])
, ENSURE_VALID_OBJECT((*frame)[24])
, ENSURE_VALID_OBJECT((*frame)[25])
, ENSURE_VALID_OBJECT((*frame)[26])
, ENSURE_VALID_OBJECT((*frame)[27])
, ENSURE_VALID_OBJECT((*frame)[28])
, ENSURE_VALID_OBJECT((*frame)[29])
, ENSURE_VALID_OBJECT((*frame)[30])
, ENSURE_VALID_OBJECT((*frame)[31])
, ENSURE_VALID_OBJECT((*frame)[32])
, ENSURE_VALID_OBJECT((*frame)[33])
, ENSURE_VALID_OBJECT((*frame)[34])
, ENSURE_VALID_OBJECT((*frame)[35])
, ENSURE_VALID_OBJECT((*frame)[36])
, ENSURE_VALID_OBJECT((*frame)[37])
, ENSURE_VALID_OBJECT((*frame)[38])
, ENSURE_VALID_OBJECT((*frame)[39])
, ENSURE_VALID_OBJECT((*frame)[40])
, ENSURE_VALID_OBJECT((*frame)[41])
, ENSURE_VALID_OBJECT((*frame)[42])
, ENSURE_VALID_OBJECT((*frame)[43])
, ENSURE_VALID_OBJECT((*frame)[44])
, ENSURE_VALID_OBJECT((*frame)[45])
, ENSURE_VALID_OBJECT((*frame)[46])
, ENSURE_VALID_OBJECT((*frame)[47])
, ENSURE_VALID_OBJECT((*frame)[48])
, ENSURE_VALID_OBJECT((*frame)[49])
, ENSURE_VALID_OBJECT((*frame)[50])
, ENSURE_VALID_OBJECT((*frame)[51])
);
// Reg = 3
case 53:
return (*func).entry(func.raw_(), 53 , ENSURE_VALID_OBJECT((*frame)[0]) , ENSURE_VALID_OBJECT((*frame)[1]) ,
    ENSURE_VALID_OBJECT((*frame)[2]) , ENSURE_VALID_OBJECT((*frame)[3])        , ENSURE_VALID_OBJECT((*frame)[4])
, ENSURE_VALID_OBJECT((*frame)[5])
, ENSURE_VALID_OBJECT((*frame)[6])
, ENSURE_VALID_OBJECT((*frame)[7])
, ENSURE_VALID_OBJECT((*frame)[8])
, ENSURE_VALID_OBJECT((*frame)[9])
, ENSURE_VALID_OBJECT((*frame)[10])
, ENSURE_VALID_OBJECT((*frame)[11])
, ENSURE_VALID_OBJECT((*frame)[12])
, ENSURE_VALID_OBJECT((*frame)[13])
, ENSURE_VALID_OBJECT((*frame)[14])
, ENSURE_VALID_OBJECT((*frame)[15])
, ENSURE_VALID_OBJECT((*frame)[16])
, ENSURE_VALID_OBJECT((*frame)[17])
, ENSURE_VALID_OBJECT((*frame)[18])
, ENSURE_VALID_OBJECT((*frame)[19])
, ENSURE_VALID_OBJECT((*frame)[20])
, ENSURE_VALID_OBJECT((*frame)[21])
, ENSURE_VALID_OBJECT((*frame)[22])
, ENSURE_VALID_OBJECT((*frame)[23])
, ENSURE_VALID_OBJECT((*frame)[24])
, ENSURE_VALID_OBJECT((*frame)[25])
, ENSURE_VALID_OBJECT((*frame)[26])
, ENSURE_VALID_OBJECT((*frame)[27])
, ENSURE_VALID_OBJECT((*frame)[28])
, ENSURE_VALID_OBJECT((*frame)[29])
, ENSURE_VALID_OBJECT((*frame)[30])
, ENSURE_VALID_OBJECT((*frame)[31])
, ENSURE_VALID_OBJECT((*frame)[32])
, ENSURE_VALID_OBJECT((*frame)[33])
, ENSURE_VALID_OBJECT((*frame)[34])
, ENSURE_VALID_OBJECT((*frame)[35])
, ENSURE_VALID_OBJECT((*frame)[36])
, ENSURE_VALID_OBJECT((*frame)[37])
, ENSURE_VALID_OBJECT((*frame)[38])
, ENSURE_VALID_OBJECT((*frame)[39])
, ENSURE_VALID_OBJECT((*frame)[40])
, ENSURE_VALID_OBJECT((*frame)[41])
, ENSURE_VALID_OBJECT((*frame)[42])
, ENSURE_VALID_OBJECT((*frame)[43])
, ENSURE_VALID_OBJECT((*frame)[44])
, ENSURE_VALID_OBJECT((*frame)[45])
, ENSURE_VALID_OBJECT((*frame)[46])
, ENSURE_VALID_OBJECT((*frame)[47])
, ENSURE_VALID_OBJECT((*frame)[48])
, ENSURE_VALID_OBJECT((*frame)[49])
, ENSURE_VALID_OBJECT((*frame)[50])
, ENSURE_VALID_OBJECT((*frame)[51])
, ENSURE_VALID_OBJECT((*frame)[52])
);
// Reg = 3
case 54:
return (*func).entry(func.raw_(), 54 , ENSURE_VALID_OBJECT((*frame)[0]) , ENSURE_VALID_OBJECT((*frame)[1]) ,
    ENSURE_VALID_OBJECT((*frame)[2]) , ENSURE_VALID_OBJECT((*frame)[3])        , ENSURE_VALID_OBJECT((*frame)[4])
, ENSURE_VALID_OBJECT((*frame)[5])
, ENSURE_VALID_OBJECT((*frame)[6])
, ENSURE_VALID_OBJECT((*frame)[7])
, ENSURE_VALID_OBJECT((*frame)[8])
, ENSURE_VALID_OBJECT((*frame)[9])
, ENSURE_VALID_OBJECT((*frame)[10])
, ENSURE_VALID_OBJECT((*frame)[11])
, ENSURE_VALID_OBJECT((*frame)[12])
, ENSURE_VALID_OBJECT((*frame)[13])
, ENSURE_VALID_OBJECT((*frame)[14])
, ENSURE_VALID_OBJECT((*frame)[15])
, ENSURE_VALID_OBJECT((*frame)[16])
, ENSURE_VALID_OBJECT((*frame)[17])
, ENSURE_VALID_OBJECT((*frame)[18])
, ENSURE_VALID_OBJECT((*frame)[19])
, ENSURE_VALID_OBJECT((*frame)[20])
, ENSURE_VALID_OBJECT((*frame)[21])
, ENSURE_VALID_OBJECT((*frame)[22])
, ENSURE_VALID_OBJECT((*frame)[23])
, ENSURE_VALID_OBJECT((*frame)[24])
, ENSURE_VALID_OBJECT((*frame)[25])
, ENSURE_VALID_OBJECT((*frame)[26])
, ENSURE_VALID_OBJECT((*frame)[27])
, ENSURE_VALID_OBJECT((*frame)[28])
, ENSURE_VALID_OBJECT((*frame)[29])
, ENSURE_VALID_OBJECT((*frame)[30])
, ENSURE_VALID_OBJECT((*frame)[31])
, ENSURE_VALID_OBJECT((*frame)[32])
, ENSURE_VALID_OBJECT((*frame)[33])
, ENSURE_VALID_OBJECT((*frame)[34])
, ENSURE_VALID_OBJECT((*frame)[35])
, ENSURE_VALID_OBJECT((*frame)[36])
, ENSURE_VALID_OBJECT((*frame)[37])
, ENSURE_VALID_OBJECT((*frame)[38])
, ENSURE_VALID_OBJECT((*frame)[39])
, ENSURE_VALID_OBJECT((*frame)[40])
, ENSURE_VALID_OBJECT((*frame)[41])
, ENSURE_VALID_OBJECT((*frame)[42])
, ENSURE_VALID_OBJECT((*frame)[43])
, ENSURE_VALID_OBJECT((*frame)[44])
, ENSURE_VALID_OBJECT((*frame)[45])
, ENSURE_VALID_OBJECT((*frame)[46])
, ENSURE_VALID_OBJECT((*frame)[47])
, ENSURE_VALID_OBJECT((*frame)[48])
, ENSURE_VALID_OBJECT((*frame)[49])
, ENSURE_VALID_OBJECT((*frame)[50])
, ENSURE_VALID_OBJECT((*frame)[51])
, ENSURE_VALID_OBJECT((*frame)[52])
, ENSURE_VALID_OBJECT((*frame)[53])
);
// Reg = 3
case 55:
return (*func).entry(func.raw_(), 55 , ENSURE_VALID_OBJECT((*frame)[0]) , ENSURE_VALID_OBJECT((*frame)[1]) ,
    ENSURE_VALID_OBJECT((*frame)[2]) , ENSURE_VALID_OBJECT((*frame)[3])        , ENSURE_VALID_OBJECT((*frame)[4])
, ENSURE_VALID_OBJECT((*frame)[5])
, ENSURE_VALID_OBJECT((*frame)[6])
, ENSURE_VALID_OBJECT((*frame)[7])
, ENSURE_VALID_OBJECT((*frame)[8])
, ENSURE_VALID_OBJECT((*frame)[9])
, ENSURE_VALID_OBJECT((*frame)[10])
, ENSURE_VALID_OBJECT((*frame)[11])
, ENSURE_VALID_OBJECT((*frame)[12])
, ENSURE_VALID_OBJECT((*frame)[13])
, ENSURE_VALID_OBJECT((*frame)[14])
, ENSURE_VALID_OBJECT((*frame)[15])
, ENSURE_VALID_OBJECT((*frame)[16])
, ENSURE_VALID_OBJECT((*frame)[17])
, ENSURE_VALID_OBJECT((*frame)[18])
, ENSURE_VALID_OBJECT((*frame)[19])
, ENSURE_VALID_OBJECT((*frame)[20])
, ENSURE_VALID_OBJECT((*frame)[21])
, ENSURE_VALID_OBJECT((*frame)[22])
, ENSURE_VALID_OBJECT((*frame)[23])
, ENSURE_VALID_OBJECT((*frame)[24])
, ENSURE_VALID_OBJECT((*frame)[25])
, ENSURE_VALID_OBJECT((*frame)[26])
, ENSURE_VALID_OBJECT((*frame)[27])
, ENSURE_VALID_OBJECT((*frame)[28])
, ENSURE_VALID_OBJECT((*frame)[29])
, ENSURE_VALID_OBJECT((*frame)[30])
, ENSURE_VALID_OBJECT((*frame)[31])
, ENSURE_VALID_OBJECT((*frame)[32])
, ENSURE_VALID_OBJECT((*frame)[33])
, ENSURE_VALID_OBJECT((*frame)[34])
, ENSURE_VALID_OBJECT((*frame)[35])
, ENSURE_VALID_OBJECT((*frame)[36])
, ENSURE_VALID_OBJECT((*frame)[37])
, ENSURE_VALID_OBJECT((*frame)[38])
, ENSURE_VALID_OBJECT((*frame)[39])
, ENSURE_VALID_OBJECT((*frame)[40])
, ENSURE_VALID_OBJECT((*frame)[41])
, ENSURE_VALID_OBJECT((*frame)[42])
, ENSURE_VALID_OBJECT((*frame)[43])
, ENSURE_VALID_OBJECT((*frame)[44])
, ENSURE_VALID_OBJECT((*frame)[45])
, ENSURE_VALID_OBJECT((*frame)[46])
, ENSURE_VALID_OBJECT((*frame)[47])
, ENSURE_VALID_OBJECT((*frame)[48])
, ENSURE_VALID_OBJECT((*frame)[49])
, ENSURE_VALID_OBJECT((*frame)[50])
, ENSURE_VALID_OBJECT((*frame)[51])
, ENSURE_VALID_OBJECT((*frame)[52])
, ENSURE_VALID_OBJECT((*frame)[53])
, ENSURE_VALID_OBJECT((*frame)[54])
);
// Reg = 3
case 56:
return (*func).entry(func.raw_(), 56 , ENSURE_VALID_OBJECT((*frame)[0]) , ENSURE_VALID_OBJECT((*frame)[1]) ,
    ENSURE_VALID_OBJECT((*frame)[2]) , ENSURE_VALID_OBJECT((*frame)[3])        , ENSURE_VALID_OBJECT((*frame)[4])
, ENSURE_VALID_OBJECT((*frame)[5])
, ENSURE_VALID_OBJECT((*frame)[6])
, ENSURE_VALID_OBJECT((*frame)[7])
, ENSURE_VALID_OBJECT((*frame)[8])
, ENSURE_VALID_OBJECT((*frame)[9])
, ENSURE_VALID_OBJECT((*frame)[10])
, ENSURE_VALID_OBJECT((*frame)[11])
, ENSURE_VALID_OBJECT((*frame)[12])
, ENSURE_VALID_OBJECT((*frame)[13])
, ENSURE_VALID_OBJECT((*frame)[14])
, ENSURE_VALID_OBJECT((*frame)[15])
, ENSURE_VALID_OBJECT((*frame)[16])
, ENSURE_VALID_OBJECT((*frame)[17])
, ENSURE_VALID_OBJECT((*frame)[18])
, ENSURE_VALID_OBJECT((*frame)[19])
, ENSURE_VALID_OBJECT((*frame)[20])
, ENSURE_VALID_OBJECT((*frame)[21])
, ENSURE_VALID_OBJECT((*frame)[22])
, ENSURE_VALID_OBJECT((*frame)[23])
, ENSURE_VALID_OBJECT((*frame)[24])
, ENSURE_VALID_OBJECT((*frame)[25])
, ENSURE_VALID_OBJECT((*frame)[26])
, ENSURE_VALID_OBJECT((*frame)[27])
, ENSURE_VALID_OBJECT((*frame)[28])
, ENSURE_VALID_OBJECT((*frame)[29])
, ENSURE_VALID_OBJECT((*frame)[30])
, ENSURE_VALID_OBJECT((*frame)[31])
, ENSURE_VALID_OBJECT((*frame)[32])
, ENSURE_VALID_OBJECT((*frame)[33])
, ENSURE_VALID_OBJECT((*frame)[34])
, ENSURE_VALID_OBJECT((*frame)[35])
, ENSURE_VALID_OBJECT((*frame)[36])
, ENSURE_VALID_OBJECT((*frame)[37])
, ENSURE_VALID_OBJECT((*frame)[38])
, ENSURE_VALID_OBJECT((*frame)[39])
, ENSURE_VALID_OBJECT((*frame)[40])
, ENSURE_VALID_OBJECT((*frame)[41])
, ENSURE_VALID_OBJECT((*frame)[42])
, ENSURE_VALID_OBJECT((*frame)[43])
, ENSURE_VALID_OBJECT((*frame)[44])
, ENSURE_VALID_OBJECT((*frame)[45])
, ENSURE_VALID_OBJECT((*frame)[46])
, ENSURE_VALID_OBJECT((*frame)[47])
, ENSURE_VALID_OBJECT((*frame)[48])
, ENSURE_VALID_OBJECT((*frame)[49])
, ENSURE_VALID_OBJECT((*frame)[50])
, ENSURE_VALID_OBJECT((*frame)[51])
, ENSURE_VALID_OBJECT((*frame)[52])
, ENSURE_VALID_OBJECT((*frame)[53])
, ENSURE_VALID_OBJECT((*frame)[54])
, ENSURE_VALID_OBJECT((*frame)[55])
);
// Reg = 3
case 57:
return (*func).entry(func.raw_(), 57 , ENSURE_VALID_OBJECT((*frame)[0]) , ENSURE_VALID_OBJECT((*frame)[1]) ,
    ENSURE_VALID_OBJECT((*frame)[2]) , ENSURE_VALID_OBJECT((*frame)[3])        , ENSURE_VALID_OBJECT((*frame)[4])
, ENSURE_VALID_OBJECT((*frame)[5])
, ENSURE_VALID_OBJECT((*frame)[6])
, ENSURE_VALID_OBJECT((*frame)[7])
, ENSURE_VALID_OBJECT((*frame)[8])
, ENSURE_VALID_OBJECT((*frame)[9])
, ENSURE_VALID_OBJECT((*frame)[10])
, ENSURE_VALID_OBJECT((*frame)[11])
, ENSURE_VALID_OBJECT((*frame)[12])
, ENSURE_VALID_OBJECT((*frame)[13])
, ENSURE_VALID_OBJECT((*frame)[14])
, ENSURE_VALID_OBJECT((*frame)[15])
, ENSURE_VALID_OBJECT((*frame)[16])
, ENSURE_VALID_OBJECT((*frame)[17])
, ENSURE_VALID_OBJECT((*frame)[18])
, ENSURE_VALID_OBJECT((*frame)[19])
, ENSURE_VALID_OBJECT((*frame)[20])
, ENSURE_VALID_OBJECT((*frame)[21])
, ENSURE_VALID_OBJECT((*frame)[22])
, ENSURE_VALID_OBJECT((*frame)[23])
, ENSURE_VALID_OBJECT((*frame)[24])
, ENSURE_VALID_OBJECT((*frame)[25])
, ENSURE_VALID_OBJECT((*frame)[26])
, ENSURE_VALID_OBJECT((*frame)[27])
, ENSURE_VALID_OBJECT((*frame)[28])
, ENSURE_VALID_OBJECT((*frame)[29])
, ENSURE_VALID_OBJECT((*frame)[30])
, ENSURE_VALID_OBJECT((*frame)[31])
, ENSURE_VALID_OBJECT((*frame)[32])
, ENSURE_VALID_OBJECT((*frame)[33])
, ENSURE_VALID_OBJECT((*frame)[34])
, ENSURE_VALID_OBJECT((*frame)[35])
, ENSURE_VALID_OBJECT((*frame)[36])
, ENSURE_VALID_OBJECT((*frame)[37])
, ENSURE_VALID_OBJECT((*frame)[38])
, ENSURE_VALID_OBJECT((*frame)[39])
, ENSURE_VALID_OBJECT((*frame)[40])
, ENSURE_VALID_OBJECT((*frame)[41])
, ENSURE_VALID_OBJECT((*frame)[42])
, ENSURE_VALID_OBJECT((*frame)[43])
, ENSURE_VALID_OBJECT((*frame)[44])
, ENSURE_VALID_OBJECT((*frame)[45])
, ENSURE_VALID_OBJECT((*frame)[46])
, ENSURE_VALID_OBJECT((*frame)[47])
, ENSURE_VALID_OBJECT((*frame)[48])
, ENSURE_VALID_OBJECT((*frame)[49])
, ENSURE_VALID_OBJECT((*frame)[50])
, ENSURE_VALID_OBJECT((*frame)[51])
, ENSURE_VALID_OBJECT((*frame)[52])
, ENSURE_VALID_OBJECT((*frame)[53])
, ENSURE_VALID_OBJECT((*frame)[54])
, ENSURE_VALID_OBJECT((*frame)[55])
, ENSURE_VALID_OBJECT((*frame)[56])
);
// Reg = 3
case 58:
return (*func).entry(func.raw_(), 58 , ENSURE_VALID_OBJECT((*frame)[0]) , ENSURE_VALID_OBJECT((*frame)[1]) ,
    ENSURE_VALID_OBJECT((*frame)[2]) , ENSURE_VALID_OBJECT((*frame)[3])        , ENSURE_VALID_OBJECT((*frame)[4])
, ENSURE_VALID_OBJECT((*frame)[5])
, ENSURE_VALID_OBJECT((*frame)[6])
, ENSURE_VALID_OBJECT((*frame)[7])
, ENSURE_VALID_OBJECT((*frame)[8])
, ENSURE_VALID_OBJECT((*frame)[9])
, ENSURE_VALID_OBJECT((*frame)[10])
, ENSURE_VALID_OBJECT((*frame)[11])
, ENSURE_VALID_OBJECT((*frame)[12])
, ENSURE_VALID_OBJECT((*frame)[13])
, ENSURE_VALID_OBJECT((*frame)[14])
, ENSURE_VALID_OBJECT((*frame)[15])
, ENSURE_VALID_OBJECT((*frame)[16])
, ENSURE_VALID_OBJECT((*frame)[17])
, ENSURE_VALID_OBJECT((*frame)[18])
, ENSURE_VALID_OBJECT((*frame)[19])
, ENSURE_VALID_OBJECT((*frame)[20])
, ENSURE_VALID_OBJECT((*frame)[21])
, ENSURE_VALID_OBJECT((*frame)[22])
, ENSURE_VALID_OBJECT((*frame)[23])
, ENSURE_VALID_OBJECT((*frame)[24])
, ENSURE_VALID_OBJECT((*frame)[25])
, ENSURE_VALID_OBJECT((*frame)[26])
, ENSURE_VALID_OBJECT((*frame)[27])
, ENSURE_VALID_OBJECT((*frame)[28])
, ENSURE_VALID_OBJECT((*frame)[29])
, ENSURE_VALID_OBJECT((*frame)[30])
, ENSURE_VALID_OBJECT((*frame)[31])
, ENSURE_VALID_OBJECT((*frame)[32])
, ENSURE_VALID_OBJECT((*frame)[33])
, ENSURE_VALID_OBJECT((*frame)[34])
, ENSURE_VALID_OBJECT((*frame)[35])
, ENSURE_VALID_OBJECT((*frame)[36])
, ENSURE_VALID_OBJECT((*frame)[37])
, ENSURE_VALID_OBJECT((*frame)[38])
, ENSURE_VALID_OBJECT((*frame)[39])
, ENSURE_VALID_OBJECT((*frame)[40])
, ENSURE_VALID_OBJECT((*frame)[41])
, ENSURE_VALID_OBJECT((*frame)[42])
, ENSURE_VALID_OBJECT((*frame)[43])
, ENSURE_VALID_OBJECT((*frame)[44])
, ENSURE_VALID_OBJECT((*frame)[45])
, ENSURE_VALID_OBJECT((*frame)[46])
, ENSURE_VALID_OBJECT((*frame)[47])
, ENSURE_VALID_OBJECT((*frame)[48])
, ENSURE_VALID_OBJECT((*frame)[49])
, ENSURE_VALID_OBJECT((*frame)[50])
, ENSURE_VALID_OBJECT((*frame)[51])
, ENSURE_VALID_OBJECT((*frame)[52])
, ENSURE_VALID_OBJECT((*frame)[53])
, ENSURE_VALID_OBJECT((*frame)[54])
, ENSURE_VALID_OBJECT((*frame)[55])
, ENSURE_VALID_OBJECT((*frame)[56])
, ENSURE_VALID_OBJECT((*frame)[57])
);
// Reg = 3
case 59:
return (*func).entry(func.raw_(), 59 , ENSURE_VALID_OBJECT((*frame)[0]) , ENSURE_VALID_OBJECT((*frame)[1]) ,
    ENSURE_VALID_OBJECT((*frame)[2]) , ENSURE_VALID_OBJECT((*frame)[3])        , ENSURE_VALID_OBJECT((*frame)[4])
, ENSURE_VALID_OBJECT((*frame)[5])
, ENSURE_VALID_OBJECT((*frame)[6])
, ENSURE_VALID_OBJECT((*frame)[7])
, ENSURE_VALID_OBJECT((*frame)[8])
, ENSURE_VALID_OBJECT((*frame)[9])
, ENSURE_VALID_OBJECT((*frame)[10])
, ENSURE_VALID_OBJECT((*frame)[11])
, ENSURE_VALID_OBJECT((*frame)[12])
, ENSURE_VALID_OBJECT((*frame)[13])
, ENSURE_VALID_OBJECT((*frame)[14])
, ENSURE_VALID_OBJECT((*frame)[15])
, ENSURE_VALID_OBJECT((*frame)[16])
, ENSURE_VALID_OBJECT((*frame)[17])
, ENSURE_VALID_OBJECT((*frame)[18])
, ENSURE_VALID_OBJECT((*frame)[19])
, ENSURE_VALID_OBJECT((*frame)[20])
, ENSURE_VALID_OBJECT((*frame)[21])
, ENSURE_VALID_OBJECT((*frame)[22])
, ENSURE_VALID_OBJECT((*frame)[23])
, ENSURE_VALID_OBJECT((*frame)[24])
, ENSURE_VALID_OBJECT((*frame)[25])
, ENSURE_VALID_OBJECT((*frame)[26])
, ENSURE_VALID_OBJECT((*frame)[27])
, ENSURE_VALID_OBJECT((*frame)[28])
, ENSURE_VALID_OBJECT((*frame)[29])
, ENSURE_VALID_OBJECT((*frame)[30])
, ENSURE_VALID_OBJECT((*frame)[31])
, ENSURE_VALID_OBJECT((*frame)[32])
, ENSURE_VALID_OBJECT((*frame)[33])
, ENSURE_VALID_OBJECT((*frame)[34])
, ENSURE_VALID_OBJECT((*frame)[35])
, ENSURE_VALID_OBJECT((*frame)[36])
, ENSURE_VALID_OBJECT((*frame)[37])
, ENSURE_VALID_OBJECT((*frame)[38])
, ENSURE_VALID_OBJECT((*frame)[39])
, ENSURE_VALID_OBJECT((*frame)[40])
, ENSURE_VALID_OBJECT((*frame)[41])
, ENSURE_VALID_OBJECT((*frame)[42])
, ENSURE_VALID_OBJECT((*frame)[43])
, ENSURE_VALID_OBJECT((*frame)[44])
, ENSURE_VALID_OBJECT((*frame)[45])
, ENSURE_VALID_OBJECT((*frame)[46])
, ENSURE_VALID_OBJECT((*frame)[47])
, ENSURE_VALID_OBJECT((*frame)[48])
, ENSURE_VALID_OBJECT((*frame)[49])
, ENSURE_VALID_OBJECT((*frame)[50])
, ENSURE_VALID_OBJECT((*frame)[51])
, ENSURE_VALID_OBJECT((*frame)[52])
, ENSURE_VALID_OBJECT((*frame)[53])
, ENSURE_VALID_OBJECT((*frame)[54])
, ENSURE_VALID_OBJECT((*frame)[55])
, ENSURE_VALID_OBJECT((*frame)[56])
, ENSURE_VALID_OBJECT((*frame)[57])
, ENSURE_VALID_OBJECT((*frame)[58])
);
// Reg = 3
case 60:
return (*func).entry(func.raw_(), 60 , ENSURE_VALID_OBJECT((*frame)[0]) , ENSURE_VALID_OBJECT((*frame)[1]) ,
    ENSURE_VALID_OBJECT((*frame)[2]) , ENSURE_VALID_OBJECT((*frame)[3])        , ENSURE_VALID_OBJECT((*frame)[4])
, ENSURE_VALID_OBJECT((*frame)[5])
, ENSURE_VALID_OBJECT((*frame)[6])
, ENSURE_VALID_OBJECT((*frame)[7])
, ENSURE_VALID_OBJECT((*frame)[8])
, ENSURE_VALID_OBJECT((*frame)[9])
, ENSURE_VALID_OBJECT((*frame)[10])
, ENSURE_VALID_OBJECT((*frame)[11])
, ENSURE_VALID_OBJECT((*frame)[12])
, ENSURE_VALID_OBJECT((*frame)[13])
, ENSURE_VALID_OBJECT((*frame)[14])
, ENSURE_VALID_OBJECT((*frame)[15])
, ENSURE_VALID_OBJECT((*frame)[16])
, ENSURE_VALID_OBJECT((*frame)[17])
, ENSURE_VALID_OBJECT((*frame)[18])
, ENSURE_VALID_OBJECT((*frame)[19])
, ENSURE_VALID_OBJECT((*frame)[20])
, ENSURE_VALID_OBJECT((*frame)[21])
, ENSURE_VALID_OBJECT((*frame)[22])
, ENSURE_VALID_OBJECT((*frame)[23])
, ENSURE_VALID_OBJECT((*frame)[24])
, ENSURE_VALID_OBJECT((*frame)[25])
, ENSURE_VALID_OBJECT((*frame)[26])
, ENSURE_VALID_OBJECT((*frame)[27])
, ENSURE_VALID_OBJECT((*frame)[28])
, ENSURE_VALID_OBJECT((*frame)[29])
, ENSURE_VALID_OBJECT((*frame)[30])
, ENSURE_VALID_OBJECT((*frame)[31])
, ENSURE_VALID_OBJECT((*frame)[32])
, ENSURE_VALID_OBJECT((*frame)[33])
, ENSURE_VALID_OBJECT((*frame)[34])
, ENSURE_VALID_OBJECT((*frame)[35])
, ENSURE_VALID_OBJECT((*frame)[36])
, ENSURE_VALID_OBJECT((*frame)[37])
, ENSURE_VALID_OBJECT((*frame)[38])
, ENSURE_VALID_OBJECT((*frame)[39])
, ENSURE_VALID_OBJECT((*frame)[40])
, ENSURE_VALID_OBJECT((*frame)[41])
, ENSURE_VALID_OBJECT((*frame)[42])
, ENSURE_VALID_OBJECT((*frame)[43])
, ENSURE_VALID_OBJECT((*frame)[44])
, ENSURE_VALID_OBJECT((*frame)[45])
, ENSURE_VALID_OBJECT((*frame)[46])
, ENSURE_VALID_OBJECT((*frame)[47])
, ENSURE_VALID_OBJECT((*frame)[48])
, ENSURE_VALID_OBJECT((*frame)[49])
, ENSURE_VALID_OBJECT((*frame)[50])
, ENSURE_VALID_OBJECT((*frame)[51])
, ENSURE_VALID_OBJECT((*frame)[52])
, ENSURE_VALID_OBJECT((*frame)[53])
, ENSURE_VALID_OBJECT((*frame)[54])
, ENSURE_VALID_OBJECT((*frame)[55])
, ENSURE_VALID_OBJECT((*frame)[56])
, ENSURE_VALID_OBJECT((*frame)[57])
, ENSURE_VALID_OBJECT((*frame)[58])
, ENSURE_VALID_OBJECT((*frame)[59])
);
// Reg = 3
case 61:
return (*func).entry(func.raw_(), 61 , ENSURE_VALID_OBJECT((*frame)[0]) , ENSURE_VALID_OBJECT((*frame)[1]) ,
    ENSURE_VALID_OBJECT((*frame)[2]) , ENSURE_VALID_OBJECT((*frame)[3])        , ENSURE_VALID_OBJECT((*frame)[4])
, ENSURE_VALID_OBJECT((*frame)[5])
, ENSURE_VALID_OBJECT((*frame)[6])
, ENSURE_VALID_OBJECT((*frame)[7])
, ENSURE_VALID_OBJECT((*frame)[8])
, ENSURE_VALID_OBJECT((*frame)[9])
, ENSURE_VALID_OBJECT((*frame)[10])
, ENSURE_VALID_OBJECT((*frame)[11])
, ENSURE_VALID_OBJECT((*frame)[12])
, ENSURE_VALID_OBJECT((*frame)[13])
, ENSURE_VALID_OBJECT((*frame)[14])
, ENSURE_VALID_OBJECT((*frame)[15])
, ENSURE_VALID_OBJECT((*frame)[16])
, ENSURE_VALID_OBJECT((*frame)[17])
, ENSURE_VALID_OBJECT((*frame)[18])
, ENSURE_VALID_OBJECT((*frame)[19])
, ENSURE_VALID_OBJECT((*frame)[20])
, ENSURE_VALID_OBJECT((*frame)[21])
, ENSURE_VALID_OBJECT((*frame)[22])
, ENSURE_VALID_OBJECT((*frame)[23])
, ENSURE_VALID_OBJECT((*frame)[24])
, ENSURE_VALID_OBJECT((*frame)[25])
, ENSURE_VALID_OBJECT((*frame)[26])
, ENSURE_VALID_OBJECT((*frame)[27])
, ENSURE_VALID_OBJECT((*frame)[28])
, ENSURE_VALID_OBJECT((*frame)[29])
, ENSURE_VALID_OBJECT((*frame)[30])
, ENSURE_VALID_OBJECT((*frame)[31])
, ENSURE_VALID_OBJECT((*frame)[32])
, ENSURE_VALID_OBJECT((*frame)[33])
, ENSURE_VALID_OBJECT((*frame)[34])
, ENSURE_VALID_OBJECT((*frame)[35])
, ENSURE_VALID_OBJECT((*frame)[36])
, ENSURE_VALID_OBJECT((*frame)[37])
, ENSURE_VALID_OBJECT((*frame)[38])
, ENSURE_VALID_OBJECT((*frame)[39])
, ENSURE_VALID_OBJECT((*frame)[40])
, ENSURE_VALID_OBJECT((*frame)[41])
, ENSURE_VALID_OBJECT((*frame)[42])
, ENSURE_VALID_OBJECT((*frame)[43])
, ENSURE_VALID_OBJECT((*frame)[44])
, ENSURE_VALID_OBJECT((*frame)[45])
, ENSURE_VALID_OBJECT((*frame)[46])
, ENSURE_VALID_OBJECT((*frame)[47])
, ENSURE_VALID_OBJECT((*frame)[48])
, ENSURE_VALID_OBJECT((*frame)[49])
, ENSURE_VALID_OBJECT((*frame)[50])
, ENSURE_VALID_OBJECT((*frame)[51])
, ENSURE_VALID_OBJECT((*frame)[52])
, ENSURE_VALID_OBJECT((*frame)[53])
, ENSURE_VALID_OBJECT((*frame)[54])
, ENSURE_VALID_OBJECT((*frame)[55])
, ENSURE_VALID_OBJECT((*frame)[56])
, ENSURE_VALID_OBJECT((*frame)[57])
, ENSURE_VALID_OBJECT((*frame)[58])
, ENSURE_VALID_OBJECT((*frame)[59])
, ENSURE_VALID_OBJECT((*frame)[60])
);
// Reg = 3
case 62:
return (*func).entry(func.raw_(), 62 , ENSURE_VALID_OBJECT((*frame)[0]) , ENSURE_VALID_OBJECT((*frame)[1]) ,
    ENSURE_VALID_OBJECT((*frame)[2]) , ENSURE_VALID_OBJECT((*frame)[3])        , ENSURE_VALID_OBJECT((*frame)[4])
, ENSURE_VALID_OBJECT((*frame)[5])
, ENSURE_VALID_OBJECT((*frame)[6])
, ENSURE_VALID_OBJECT((*frame)[7])
, ENSURE_VALID_OBJECT((*frame)[8])
, ENSURE_VALID_OBJECT((*frame)[9])
, ENSURE_VALID_OBJECT((*frame)[10])
, ENSURE_VALID_OBJECT((*frame)[11])
, ENSURE_VALID_OBJECT((*frame)[12])
, ENSURE_VALID_OBJECT((*frame)[13])
, ENSURE_VALID_OBJECT((*frame)[14])
, ENSURE_VALID_OBJECT((*frame)[15])
, ENSURE_VALID_OBJECT((*frame)[16])
, ENSURE_VALID_OBJECT((*frame)[17])
, ENSURE_VALID_OBJECT((*frame)[18])
, ENSURE_VALID_OBJECT((*frame)[19])
, ENSURE_VALID_OBJECT((*frame)[20])
, ENSURE_VALID_OBJECT((*frame)[21])
, ENSURE_VALID_OBJECT((*frame)[22])
, ENSURE_VALID_OBJECT((*frame)[23])
, ENSURE_VALID_OBJECT((*frame)[24])
, ENSURE_VALID_OBJECT((*frame)[25])
, ENSURE_VALID_OBJECT((*frame)[26])
, ENSURE_VALID_OBJECT((*frame)[27])
, ENSURE_VALID_OBJECT((*frame)[28])
, ENSURE_VALID_OBJECT((*frame)[29])
, ENSURE_VALID_OBJECT((*frame)[30])
, ENSURE_VALID_OBJECT((*frame)[31])
, ENSURE_VALID_OBJECT((*frame)[32])
, ENSURE_VALID_OBJECT((*frame)[33])
, ENSURE_VALID_OBJECT((*frame)[34])
, ENSURE_VALID_OBJECT((*frame)[35])
, ENSURE_VALID_OBJECT((*frame)[36])
, ENSURE_VALID_OBJECT((*frame)[37])
, ENSURE_VALID_OBJECT((*frame)[38])
, ENSURE_VALID_OBJECT((*frame)[39])
, ENSURE_VALID_OBJECT((*frame)[40])
, ENSURE_VALID_OBJECT((*frame)[41])
, ENSURE_VALID_OBJECT((*frame)[42])
, ENSURE_VALID_OBJECT((*frame)[43])
, ENSURE_VALID_OBJECT((*frame)[44])
, ENSURE_VALID_OBJECT((*frame)[45])
, ENSURE_VALID_OBJECT((*frame)[46])
, ENSURE_VALID_OBJECT((*frame)[47])
, ENSURE_VALID_OBJECT((*frame)[48])
, ENSURE_VALID_OBJECT((*frame)[49])
, ENSURE_VALID_OBJECT((*frame)[50])
, ENSURE_VALID_OBJECT((*frame)[51])
, ENSURE_VALID_OBJECT((*frame)[52])
, ENSURE_VALID_OBJECT((*frame)[53])
, ENSURE_VALID_OBJECT((*frame)[54])
, ENSURE_VALID_OBJECT((*frame)[55])
, ENSURE_VALID_OBJECT((*frame)[56])
, ENSURE_VALID_OBJECT((*frame)[57])
, ENSURE_VALID_OBJECT((*frame)[58])
, ENSURE_VALID_OBJECT((*frame)[59])
, ENSURE_VALID_OBJECT((*frame)[60])
, ENSURE_VALID_OBJECT((*frame)[61])
);
// Reg = 3
case 63:
return (*func).entry(func.raw_(), 63 , ENSURE_VALID_OBJECT((*frame)[0]) , ENSURE_VALID_OBJECT((*frame)[1]) ,
    ENSURE_VALID_OBJECT((*frame)[2]) , ENSURE_VALID_OBJECT((*frame)[3])        , ENSURE_VALID_OBJECT((*frame)[4])
, ENSURE_VALID_OBJECT((*frame)[5])
, ENSURE_VALID_OBJECT((*frame)[6])
, ENSURE_VALID_OBJECT((*frame)[7])
, ENSURE_VALID_OBJECT((*frame)[8])
, ENSURE_VALID_OBJECT((*frame)[9])
, ENSURE_VALID_OBJECT((*frame)[10])
, ENSURE_VALID_OBJECT((*frame)[11])
, ENSURE_VALID_OBJECT((*frame)[12])
, ENSURE_VALID_OBJECT((*frame)[13])
, ENSURE_VALID_OBJECT((*frame)[14])
, ENSURE_VALID_OBJECT((*frame)[15])
, ENSURE_VALID_OBJECT((*frame)[16])
, ENSURE_VALID_OBJECT((*frame)[17])
, ENSURE_VALID_OBJECT((*frame)[18])
, ENSURE_VALID_OBJECT((*frame)[19])
, ENSURE_VALID_OBJECT((*frame)[20])
, ENSURE_VALID_OBJECT((*frame)[21])
, ENSURE_VALID_OBJECT((*frame)[22])
, ENSURE_VALID_OBJECT((*frame)[23])
, ENSURE_VALID_OBJECT((*frame)[24])
, ENSURE_VALID_OBJECT((*frame)[25])
, ENSURE_VALID_OBJECT((*frame)[26])
, ENSURE_VALID_OBJECT((*frame)[27])
, ENSURE_VALID_OBJECT((*frame)[28])
, ENSURE_VALID_OBJECT((*frame)[29])
, ENSURE_VALID_OBJECT((*frame)[30])
, ENSURE_VALID_OBJECT((*frame)[31])
, ENSURE_VALID_OBJECT((*frame)[32])
, ENSURE_VALID_OBJECT((*frame)[33])
, ENSURE_VALID_OBJECT((*frame)[34])
, ENSURE_VALID_OBJECT((*frame)[35])
, ENSURE_VALID_OBJECT((*frame)[36])
, ENSURE_VALID_OBJECT((*frame)[37])
, ENSURE_VALID_OBJECT((*frame)[38])
, ENSURE_VALID_OBJECT((*frame)[39])
, ENSURE_VALID_OBJECT((*frame)[40])
, ENSURE_VALID_OBJECT((*frame)[41])
, ENSURE_VALID_OBJECT((*frame)[42])
, ENSURE_VALID_OBJECT((*frame)[43])
, ENSURE_VALID_OBJECT((*frame)[44])
, ENSURE_VALID_OBJECT((*frame)[45])
, ENSURE_VALID_OBJECT((*frame)[46])
, ENSURE_VALID_OBJECT((*frame)[47])
, ENSURE_VALID_OBJECT((*frame)[48])
, ENSURE_VALID_OBJECT((*frame)[49])
, ENSURE_VALID_OBJECT((*frame)[50])
, ENSURE_VALID_OBJECT((*frame)[51])
, ENSURE_VALID_OBJECT((*frame)[52])
, ENSURE_VALID_OBJECT((*frame)[53])
, ENSURE_VALID_OBJECT((*frame)[54])
, ENSURE_VALID_OBJECT((*frame)[55])
, ENSURE_VALID_OBJECT((*frame)[56])
, ENSURE_VALID_OBJECT((*frame)[57])
, ENSURE_VALID_OBJECT((*frame)[58])
, ENSURE_VALID_OBJECT((*frame)[59])
, ENSURE_VALID_OBJECT((*frame)[60])
, ENSURE_VALID_OBJECT((*frame)[61])
, ENSURE_VALID_OBJECT((*frame)[62])
);
// Reg = 3
case 64:
return (*func).entry(func.raw_(), 64 , ENSURE_VALID_OBJECT((*frame)[0]) , ENSURE_VALID_OBJECT((*frame)[1]) ,
    ENSURE_VALID_OBJECT((*frame)[2]) , ENSURE_VALID_OBJECT((*frame)[3])        , ENSURE_VALID_OBJECT((*frame)[4])
, ENSURE_VALID_OBJECT((*frame)[5])
, ENSURE_VALID_OBJECT((*frame)[6])
, ENSURE_VALID_OBJECT((*frame)[7])
, ENSURE_VALID_OBJECT((*frame)[8])
, ENSURE_VALID_OBJECT((*frame)[9])
, ENSURE_VALID_OBJECT((*frame)[10])
, ENSURE_VALID_OBJECT((*frame)[11])
, ENSURE_VALID_OBJECT((*frame)[12])
, ENSURE_VALID_OBJECT((*frame)[13])
, ENSURE_VALID_OBJECT((*frame)[14])
, ENSURE_VALID_OBJECT((*frame)[15])
, ENSURE_VALID_OBJECT((*frame)[16])
, ENSURE_VALID_OBJECT((*frame)[17])
, ENSURE_VALID_OBJECT((*frame)[18])
, ENSURE_VALID_OBJECT((*frame)[19])
, ENSURE_VALID_OBJECT((*frame)[20])
, ENSURE_VALID_OBJECT((*frame)[21])
, ENSURE_VALID_OBJECT((*frame)[22])
, ENSURE_VALID_OBJECT((*frame)[23])
, ENSURE_VALID_OBJECT((*frame)[24])
, ENSURE_VALID_OBJECT((*frame)[25])
, ENSURE_VALID_OBJECT((*frame)[26])
, ENSURE_VALID_OBJECT((*frame)[27])
, ENSURE_VALID_OBJECT((*frame)[28])
, ENSURE_VALID_OBJECT((*frame)[29])
, ENSURE_VALID_OBJECT((*frame)[30])
, ENSURE_VALID_OBJECT((*frame)[31])
, ENSURE_VALID_OBJECT((*frame)[32])
, ENSURE_VALID_OBJECT((*frame)[33])
, ENSURE_VALID_OBJECT((*frame)[34])
, ENSURE_VALID_OBJECT((*frame)[35])
, ENSURE_VALID_OBJECT((*frame)[36])
, ENSURE_VALID_OBJECT((*frame)[37])
, ENSURE_VALID_OBJECT((*frame)[38])
, ENSURE_VALID_OBJECT((*frame)[39])
, ENSURE_VALID_OBJECT((*frame)[40])
, ENSURE_VALID_OBJECT((*frame)[41])
, ENSURE_VALID_OBJECT((*frame)[42])
, ENSURE_VALID_OBJECT((*frame)[43])
, ENSURE_VALID_OBJECT((*frame)[44])
, ENSURE_VALID_OBJECT((*frame)[45])
, ENSURE_VALID_OBJECT((*frame)[46])
, ENSURE_VALID_OBJECT((*frame)[47])
, ENSURE_VALID_OBJECT((*frame)[48])
, ENSURE_VALID_OBJECT((*frame)[49])
, ENSURE_VALID_OBJECT((*frame)[50])
, ENSURE_VALID_OBJECT((*frame)[51])
, ENSURE_VALID_OBJECT((*frame)[52])
, ENSURE_VALID_OBJECT((*frame)[53])
, ENSURE_VALID_OBJECT((*frame)[54])
, ENSURE_VALID_OBJECT((*frame)[55])
, ENSURE_VALID_OBJECT((*frame)[56])
, ENSURE_VALID_OBJECT((*frame)[57])
, ENSURE_VALID_OBJECT((*frame)[58])
, ENSURE_VALID_OBJECT((*frame)[59])
, ENSURE_VALID_OBJECT((*frame)[60])
, ENSURE_VALID_OBJECT((*frame)[61])
, ENSURE_VALID_OBJECT((*frame)[62])
, ENSURE_VALID_OBJECT((*frame)[63])
);
// Reg = 3
case 65:
return (*func).entry(func.raw_(), 65 , ENSURE_VALID_OBJECT((*frame)[0]) , ENSURE_VALID_OBJECT((*frame)[1]) ,
    ENSURE_VALID_OBJECT((*frame)[2]) , ENSURE_VALID_OBJECT((*frame)[3])        , ENSURE_VALID_OBJECT((*frame)[4])
, ENSURE_VALID_OBJECT((*frame)[5])
, ENSURE_VALID_OBJECT((*frame)[6])
, ENSURE_VALID_OBJECT((*frame)[7])
, ENSURE_VALID_OBJECT((*frame)[8])
, ENSURE_VALID_OBJECT((*frame)[9])
, ENSURE_VALID_OBJECT((*frame)[10])
, ENSURE_VALID_OBJECT((*frame)[11])
, ENSURE_VALID_OBJECT((*frame)[12])
, ENSURE_VALID_OBJECT((*frame)[13])
, ENSURE_VALID_OBJECT((*frame)[14])
, ENSURE_VALID_OBJECT((*frame)[15])
, ENSURE_VALID_OBJECT((*frame)[16])
, ENSURE_VALID_OBJECT((*frame)[17])
, ENSURE_VALID_OBJECT((*frame)[18])
, ENSURE_VALID_OBJECT((*frame)[19])
, ENSURE_VALID_OBJECT((*frame)[20])
, ENSURE_VALID_OBJECT((*frame)[21])
, ENSURE_VALID_OBJECT((*frame)[22])
, ENSURE_VALID_OBJECT((*frame)[23])
, ENSURE_VALID_OBJECT((*frame)[24])
, ENSURE_VALID_OBJECT((*frame)[25])
, ENSURE_VALID_OBJECT((*frame)[26])
, ENSURE_VALID_OBJECT((*frame)[27])
, ENSURE_VALID_OBJECT((*frame)[28])
, ENSURE_VALID_OBJECT((*frame)[29])
, ENSURE_VALID_OBJECT((*frame)[30])
, ENSURE_VALID_OBJECT((*frame)[31])
, ENSURE_VALID_OBJECT((*frame)[32])
, ENSURE_VALID_OBJECT((*frame)[33])
, ENSURE_VALID_OBJECT((*frame)[34])
, ENSURE_VALID_OBJECT((*frame)[35])
, ENSURE_VALID_OBJECT((*frame)[36])
, ENSURE_VALID_OBJECT((*frame)[37])
, ENSURE_VALID_OBJECT((*frame)[38])
, ENSURE_VALID_OBJECT((*frame)[39])
, ENSURE_VALID_OBJECT((*frame)[40])
, ENSURE_VALID_OBJECT((*frame)[41])
, ENSURE_VALID_OBJECT((*frame)[42])
, ENSURE_VALID_OBJECT((*frame)[43])
, ENSURE_VALID_OBJECT((*frame)[44])
, ENSURE_VALID_OBJECT((*frame)[45])
, ENSURE_VALID_OBJECT((*frame)[46])
, ENSURE_VALID_OBJECT((*frame)[47])
, ENSURE_VALID_OBJECT((*frame)[48])
, ENSURE_VALID_OBJECT((*frame)[49])
, ENSURE_VALID_OBJECT((*frame)[50])
, ENSURE_VALID_OBJECT((*frame)[51])
, ENSURE_VALID_OBJECT((*frame)[52])
, ENSURE_VALID_OBJECT((*frame)[53])
, ENSURE_VALID_OBJECT((*frame)[54])
, ENSURE_VALID_OBJECT((*frame)[55])
, ENSURE_VALID_OBJECT((*frame)[56])
, ENSURE_VALID_OBJECT((*frame)[57])
, ENSURE_VALID_OBJECT((*frame)[58])
, ENSURE_VALID_OBJECT((*frame)[59])
, ENSURE_VALID_OBJECT((*frame)[60])
, ENSURE_VALID_OBJECT((*frame)[61])
, ENSURE_VALID_OBJECT((*frame)[62])
, ENSURE_VALID_OBJECT((*frame)[63])
, ENSURE_VALID_OBJECT((*frame)[64])
);
// Reg = 3
case 66:
return (*func).entry(func.raw_(), 66 , ENSURE_VALID_OBJECT((*frame)[0]) , ENSURE_VALID_OBJECT((*frame)[1]) ,
    ENSURE_VALID_OBJECT((*frame)[2]) , ENSURE_VALID_OBJECT((*frame)[3])        , ENSURE_VALID_OBJECT((*frame)[4])
, ENSURE_VALID_OBJECT((*frame)[5])
, ENSURE_VALID_OBJECT((*frame)[6])
, ENSURE_VALID_OBJECT((*frame)[7])
, ENSURE_VALID_OBJECT((*frame)[8])
, ENSURE_VALID_OBJECT((*frame)[9])
, ENSURE_VALID_OBJECT((*frame)[10])
, ENSURE_VALID_OBJECT((*frame)[11])
, ENSURE_VALID_OBJECT((*frame)[12])
, ENSURE_VALID_OBJECT((*frame)[13])
, ENSURE_VALID_OBJECT((*frame)[14])
, ENSURE_VALID_OBJECT((*frame)[15])
, ENSURE_VALID_OBJECT((*frame)[16])
, ENSURE_VALID_OBJECT((*frame)[17])
, ENSURE_VALID_OBJECT((*frame)[18])
, ENSURE_VALID_OBJECT((*frame)[19])
, ENSURE_VALID_OBJECT((*frame)[20])
, ENSURE_VALID_OBJECT((*frame)[21])
, ENSURE_VALID_OBJECT((*frame)[22])
, ENSURE_VALID_OBJECT((*frame)[23])
, ENSURE_VALID_OBJECT((*frame)[24])
, ENSURE_VALID_OBJECT((*frame)[25])
, ENSURE_VALID_OBJECT((*frame)[26])
, ENSURE_VALID_OBJECT((*frame)[27])
, ENSURE_VALID_OBJECT((*frame)[28])
, ENSURE_VALID_OBJECT((*frame)[29])
, ENSURE_VALID_OBJECT((*frame)[30])
, ENSURE_VALID_OBJECT((*frame)[31])
, ENSURE_VALID_OBJECT((*frame)[32])
, ENSURE_VALID_OBJECT((*frame)[33])
, ENSURE_VALID_OBJECT((*frame)[34])
, ENSURE_VALID_OBJECT((*frame)[35])
, ENSURE_VALID_OBJECT((*frame)[36])
, ENSURE_VALID_OBJECT((*frame)[37])
, ENSURE_VALID_OBJECT((*frame)[38])
, ENSURE_VALID_OBJECT((*frame)[39])
, ENSURE_VALID_OBJECT((*frame)[40])
, ENSURE_VALID_OBJECT((*frame)[41])
, ENSURE_VALID_OBJECT((*frame)[42])
, ENSURE_VALID_OBJECT((*frame)[43])
, ENSURE_VALID_OBJECT((*frame)[44])
, ENSURE_VALID_OBJECT((*frame)[45])
, ENSURE_VALID_OBJECT((*frame)[46])
, ENSURE_VALID_OBJECT((*frame)[47])
, ENSURE_VALID_OBJECT((*frame)[48])
, ENSURE_VALID_OBJECT((*frame)[49])
, ENSURE_VALID_OBJECT((*frame)[50])
, ENSURE_VALID_OBJECT((*frame)[51])
, ENSURE_VALID_OBJECT((*frame)[52])
, ENSURE_VALID_OBJECT((*frame)[53])
, ENSURE_VALID_OBJECT((*frame)[54])
, ENSURE_VALID_OBJECT((*frame)[55])
, ENSURE_VALID_OBJECT((*frame)[56])
, ENSURE_VALID_OBJECT((*frame)[57])
, ENSURE_VALID_OBJECT((*frame)[58])
, ENSURE_VALID_OBJECT((*frame)[59])
, ENSURE_VALID_OBJECT((*frame)[60])
, ENSURE_VALID_OBJECT((*frame)[61])
, ENSURE_VALID_OBJECT((*frame)[62])
, ENSURE_VALID_OBJECT((*frame)[63])
, ENSURE_VALID_OBJECT((*frame)[64])
, ENSURE_VALID_OBJECT((*frame)[65])
);
// Reg = 3
case 67:
return (*func).entry(func.raw_(), 67 , ENSURE_VALID_OBJECT((*frame)[0]) , ENSURE_VALID_OBJECT((*frame)[1]) ,
    ENSURE_VALID_OBJECT((*frame)[2]) , ENSURE_VALID_OBJECT((*frame)[3])        , ENSURE_VALID_OBJECT((*frame)[4])
, ENSURE_VALID_OBJECT((*frame)[5])
, ENSURE_VALID_OBJECT((*frame)[6])
, ENSURE_VALID_OBJECT((*frame)[7])
, ENSURE_VALID_OBJECT((*frame)[8])
, ENSURE_VALID_OBJECT((*frame)[9])
, ENSURE_VALID_OBJECT((*frame)[10])
, ENSURE_VALID_OBJECT((*frame)[11])
, ENSURE_VALID_OBJECT((*frame)[12])
, ENSURE_VALID_OBJECT((*frame)[13])
, ENSURE_VALID_OBJECT((*frame)[14])
, ENSURE_VALID_OBJECT((*frame)[15])
, ENSURE_VALID_OBJECT((*frame)[16])
, ENSURE_VALID_OBJECT((*frame)[17])
, ENSURE_VALID_OBJECT((*frame)[18])
, ENSURE_VALID_OBJECT((*frame)[19])
, ENSURE_VALID_OBJECT((*frame)[20])
, ENSURE_VALID_OBJECT((*frame)[21])
, ENSURE_VALID_OBJECT((*frame)[22])
, ENSURE_VALID_OBJECT((*frame)[23])
, ENSURE_VALID_OBJECT((*frame)[24])
, ENSURE_VALID_OBJECT((*frame)[25])
, ENSURE_VALID_OBJECT((*frame)[26])
, ENSURE_VALID_OBJECT((*frame)[27])
, ENSURE_VALID_OBJECT((*frame)[28])
, ENSURE_VALID_OBJECT((*frame)[29])
, ENSURE_VALID_OBJECT((*frame)[30])
, ENSURE_VALID_OBJECT((*frame)[31])
, ENSURE_VALID_OBJECT((*frame)[32])
, ENSURE_VALID_OBJECT((*frame)[33])
, ENSURE_VALID_OBJECT((*frame)[34])
, ENSURE_VALID_OBJECT((*frame)[35])
, ENSURE_VALID_OBJECT((*frame)[36])
, ENSURE_VALID_OBJECT((*frame)[37])
, ENSURE_VALID_OBJECT((*frame)[38])
, ENSURE_VALID_OBJECT((*frame)[39])
, ENSURE_VALID_OBJECT((*frame)[40])
, ENSURE_VALID_OBJECT((*frame)[41])
, ENSURE_VALID_OBJECT((*frame)[42])
, ENSURE_VALID_OBJECT((*frame)[43])
, ENSURE_VALID_OBJECT((*frame)[44])
, ENSURE_VALID_OBJECT((*frame)[45])
, ENSURE_VALID_OBJECT((*frame)[46])
, ENSURE_VALID_OBJECT((*frame)[47])
, ENSURE_VALID_OBJECT((*frame)[48])
, ENSURE_VALID_OBJECT((*frame)[49])
, ENSURE_VALID_OBJECT((*frame)[50])
, ENSURE_VALID_OBJECT((*frame)[51])
, ENSURE_VALID_OBJECT((*frame)[52])
, ENSURE_VALID_OBJECT((*frame)[53])
, ENSURE_VALID_OBJECT((*frame)[54])
, ENSURE_VALID_OBJECT((*frame)[55])
, ENSURE_VALID_OBJECT((*frame)[56])
, ENSURE_VALID_OBJECT((*frame)[57])
, ENSURE_VALID_OBJECT((*frame)[58])
, ENSURE_VALID_OBJECT((*frame)[59])
, ENSURE_VALID_OBJECT((*frame)[60])
, ENSURE_VALID_OBJECT((*frame)[61])
, ENSURE_VALID_OBJECT((*frame)[62])
, ENSURE_VALID_OBJECT((*frame)[63])
, ENSURE_VALID_OBJECT((*frame)[64])
, ENSURE_VALID_OBJECT((*frame)[65])
, ENSURE_VALID_OBJECT((*frame)[66])
);
// Reg = 3
case 68:
return (*func).entry(func.raw_(), 68 , ENSURE_VALID_OBJECT((*frame)[0]) , ENSURE_VALID_OBJECT((*frame)[1]) ,
    ENSURE_VALID_OBJECT((*frame)[2]) , ENSURE_VALID_OBJECT((*frame)[3])        , ENSURE_VALID_OBJECT((*frame)[4])
, ENSURE_VALID_OBJECT((*frame)[5])
, ENSURE_VALID_OBJECT((*frame)[6])
, ENSURE_VALID_OBJECT((*frame)[7])
, ENSURE_VALID_OBJECT((*frame)[8])
, ENSURE_VALID_OBJECT((*frame)[9])
, ENSURE_VALID_OBJECT((*frame)[10])
, ENSURE_VALID_OBJECT((*frame)[11])
, ENSURE_VALID_OBJECT((*frame)[12])
, ENSURE_VALID_OBJECT((*frame)[13])
, ENSURE_VALID_OBJECT((*frame)[14])
, ENSURE_VALID_OBJECT((*frame)[15])
, ENSURE_VALID_OBJECT((*frame)[16])
, ENSURE_VALID_OBJECT((*frame)[17])
, ENSURE_VALID_OBJECT((*frame)[18])
, ENSURE_VALID_OBJECT((*frame)[19])
, ENSURE_VALID_OBJECT((*frame)[20])
, ENSURE_VALID_OBJECT((*frame)[21])
, ENSURE_VALID_OBJECT((*frame)[22])
, ENSURE_VALID_OBJECT((*frame)[23])
, ENSURE_VALID_OBJECT((*frame)[24])
, ENSURE_VALID_OBJECT((*frame)[25])
, ENSURE_VALID_OBJECT((*frame)[26])
, ENSURE_VALID_OBJECT((*frame)[27])
, ENSURE_VALID_OBJECT((*frame)[28])
, ENSURE_VALID_OBJECT((*frame)[29])
, ENSURE_VALID_OBJECT((*frame)[30])
, ENSURE_VALID_OBJECT((*frame)[31])
, ENSURE_VALID_OBJECT((*frame)[32])
, ENSURE_VALID_OBJECT((*frame)[33])
, ENSURE_VALID_OBJECT((*frame)[34])
, ENSURE_VALID_OBJECT((*frame)[35])
, ENSURE_VALID_OBJECT((*frame)[36])
, ENSURE_VALID_OBJECT((*frame)[37])
, ENSURE_VALID_OBJECT((*frame)[38])
, ENSURE_VALID_OBJECT((*frame)[39])
, ENSURE_VALID_OBJECT((*frame)[40])
, ENSURE_VALID_OBJECT((*frame)[41])
, ENSURE_VALID_OBJECT((*frame)[42])
, ENSURE_VALID_OBJECT((*frame)[43])
, ENSURE_VALID_OBJECT((*frame)[44])
, ENSURE_VALID_OBJECT((*frame)[45])
, ENSURE_VALID_OBJECT((*frame)[46])
, ENSURE_VALID_OBJECT((*frame)[47])
, ENSURE_VALID_OBJECT((*frame)[48])
, ENSURE_VALID_OBJECT((*frame)[49])
, ENSURE_VALID_OBJECT((*frame)[50])
, ENSURE_VALID_OBJECT((*frame)[51])
, ENSURE_VALID_OBJECT((*frame)[52])
, ENSURE_VALID_OBJECT((*frame)[53])
, ENSURE_VALID_OBJECT((*frame)[54])
, ENSURE_VALID_OBJECT((*frame)[55])
, ENSURE_VALID_OBJECT((*frame)[56])
, ENSURE_VALID_OBJECT((*frame)[57])
, ENSURE_VALID_OBJECT((*frame)[58])
, ENSURE_VALID_OBJECT((*frame)[59])
, ENSURE_VALID_OBJECT((*frame)[60])
, ENSURE_VALID_OBJECT((*frame)[61])
, ENSURE_VALID_OBJECT((*frame)[62])
, ENSURE_VALID_OBJECT((*frame)[63])
, ENSURE_VALID_OBJECT((*frame)[64])
, ENSURE_VALID_OBJECT((*frame)[65])
, ENSURE_VALID_OBJECT((*frame)[66])
, ENSURE_VALID_OBJECT((*frame)[67])
);
// Reg = 3
case 69:
return (*func).entry(func.raw_(), 69 , ENSURE_VALID_OBJECT((*frame)[0]) , ENSURE_VALID_OBJECT((*frame)[1]) ,
    ENSURE_VALID_OBJECT((*frame)[2]) , ENSURE_VALID_OBJECT((*frame)[3])        , ENSURE_VALID_OBJECT((*frame)[4])
, ENSURE_VALID_OBJECT((*frame)[5])
, ENSURE_VALID_OBJECT((*frame)[6])
, ENSURE_VALID_OBJECT((*frame)[7])
, ENSURE_VALID_OBJECT((*frame)[8])
, ENSURE_VALID_OBJECT((*frame)[9])
, ENSURE_VALID_OBJECT((*frame)[10])
, ENSURE_VALID_OBJECT((*frame)[11])
, ENSURE_VALID_OBJECT((*frame)[12])
, ENSURE_VALID_OBJECT((*frame)[13])
, ENSURE_VALID_OBJECT((*frame)[14])
, ENSURE_VALID_OBJECT((*frame)[15])
, ENSURE_VALID_OBJECT((*frame)[16])
, ENSURE_VALID_OBJECT((*frame)[17])
, ENSURE_VALID_OBJECT((*frame)[18])
, ENSURE_VALID_OBJECT((*frame)[19])
, ENSURE_VALID_OBJECT((*frame)[20])
, ENSURE_VALID_OBJECT((*frame)[21])
, ENSURE_VALID_OBJECT((*frame)[22])
, ENSURE_VALID_OBJECT((*frame)[23])
, ENSURE_VALID_OBJECT((*frame)[24])
, ENSURE_VALID_OBJECT((*frame)[25])
, ENSURE_VALID_OBJECT((*frame)[26])
, ENSURE_VALID_OBJECT((*frame)[27])
, ENSURE_VALID_OBJECT((*frame)[28])
, ENSURE_VALID_OBJECT((*frame)[29])
, ENSURE_VALID_OBJECT((*frame)[30])
, ENSURE_VALID_OBJECT((*frame)[31])
, ENSURE_VALID_OBJECT((*frame)[32])
, ENSURE_VALID_OBJECT((*frame)[33])
, ENSURE_VALID_OBJECT((*frame)[34])
, ENSURE_VALID_OBJECT((*frame)[35])
, ENSURE_VALID_OBJECT((*frame)[36])
, ENSURE_VALID_OBJECT((*frame)[37])
, ENSURE_VALID_OBJECT((*frame)[38])
, ENSURE_VALID_OBJECT((*frame)[39])
, ENSURE_VALID_OBJECT((*frame)[40])
, ENSURE_VALID_OBJECT((*frame)[41])
, ENSURE_VALID_OBJECT((*frame)[42])
, ENSURE_VALID_OBJECT((*frame)[43])
, ENSURE_VALID_OBJECT((*frame)[44])
, ENSURE_VALID_OBJECT((*frame)[45])
, ENSURE_VALID_OBJECT((*frame)[46])
, ENSURE_VALID_OBJECT((*frame)[47])
, ENSURE_VALID_OBJECT((*frame)[48])
, ENSURE_VALID_OBJECT((*frame)[49])
, ENSURE_VALID_OBJECT((*frame)[50])
, ENSURE_VALID_OBJECT((*frame)[51])
, ENSURE_VALID_OBJECT((*frame)[52])
, ENSURE_VALID_OBJECT((*frame)[53])
, ENSURE_VALID_OBJECT((*frame)[54])
, ENSURE_VALID_OBJECT((*frame)[55])
, ENSURE_VALID_OBJECT((*frame)[56])
, ENSURE_VALID_OBJECT((*frame)[57])
, ENSURE_VALID_OBJECT((*frame)[58])
, ENSURE_VALID_OBJECT((*frame)[59])
, ENSURE_VALID_OBJECT((*frame)[60])
, ENSURE_VALID_OBJECT((*frame)[61])
, ENSURE_VALID_OBJECT((*frame)[62])
, ENSURE_VALID_OBJECT((*frame)[63])
, ENSURE_VALID_OBJECT((*frame)[64])
, ENSURE_VALID_OBJECT((*frame)[65])
, ENSURE_VALID_OBJECT((*frame)[66])
, ENSURE_VALID_OBJECT((*frame)[67])
, ENSURE_VALID_OBJECT((*frame)[68])
);
// Reg = 3
case 70:
return (*func).entry(func.raw_(), 70 , ENSURE_VALID_OBJECT((*frame)[0]) , ENSURE_VALID_OBJECT((*frame)[1]) ,
    ENSURE_VALID_OBJECT((*frame)[2]) , ENSURE_VALID_OBJECT((*frame)[3])        , ENSURE_VALID_OBJECT((*frame)[4])
, ENSURE_VALID_OBJECT((*frame)[5])
, ENSURE_VALID_OBJECT((*frame)[6])
, ENSURE_VALID_OBJECT((*frame)[7])
, ENSURE_VALID_OBJECT((*frame)[8])
, ENSURE_VALID_OBJECT((*frame)[9])
, ENSURE_VALID_OBJECT((*frame)[10])
, ENSURE_VALID_OBJECT((*frame)[11])
, ENSURE_VALID_OBJECT((*frame)[12])
, ENSURE_VALID_OBJECT((*frame)[13])
, ENSURE_VALID_OBJECT((*frame)[14])
, ENSURE_VALID_OBJECT((*frame)[15])
, ENSURE_VALID_OBJECT((*frame)[16])
, ENSURE_VALID_OBJECT((*frame)[17])
, ENSURE_VALID_OBJECT((*frame)[18])
, ENSURE_VALID_OBJECT((*frame)[19])
, ENSURE_VALID_OBJECT((*frame)[20])
, ENSURE_VALID_OBJECT((*frame)[21])
, ENSURE_VALID_OBJECT((*frame)[22])
, ENSURE_VALID_OBJECT((*frame)[23])
, ENSURE_VALID_OBJECT((*frame)[24])
, ENSURE_VALID_OBJECT((*frame)[25])
, ENSURE_VALID_OBJECT((*frame)[26])
, ENSURE_VALID_OBJECT((*frame)[27])
, ENSURE_VALID_OBJECT((*frame)[28])
, ENSURE_VALID_OBJECT((*frame)[29])
, ENSURE_VALID_OBJECT((*frame)[30])
, ENSURE_VALID_OBJECT((*frame)[31])
, ENSURE_VALID_OBJECT((*frame)[32])
, ENSURE_VALID_OBJECT((*frame)[33])
, ENSURE_VALID_OBJECT((*frame)[34])
, ENSURE_VALID_OBJECT((*frame)[35])
, ENSURE_VALID_OBJECT((*frame)[36])
, ENSURE_VALID_OBJECT((*frame)[37])
, ENSURE_VALID_OBJECT((*frame)[38])
, ENSURE_VALID_OBJECT((*frame)[39])
, ENSURE_VALID_OBJECT((*frame)[40])
, ENSURE_VALID_OBJECT((*frame)[41])
, ENSURE_VALID_OBJECT((*frame)[42])
, ENSURE_VALID_OBJECT((*frame)[43])
, ENSURE_VALID_OBJECT((*frame)[44])
, ENSURE_VALID_OBJECT((*frame)[45])
, ENSURE_VALID_OBJECT((*frame)[46])
, ENSURE_VALID_OBJECT((*frame)[47])
, ENSURE_VALID_OBJECT((*frame)[48])
, ENSURE_VALID_OBJECT((*frame)[49])
, ENSURE_VALID_OBJECT((*frame)[50])
, ENSURE_VALID_OBJECT((*frame)[51])
, ENSURE_VALID_OBJECT((*frame)[52])
, ENSURE_VALID_OBJECT((*frame)[53])
, ENSURE_VALID_OBJECT((*frame)[54])
, ENSURE_VALID_OBJECT((*frame)[55])
, ENSURE_VALID_OBJECT((*frame)[56])
, ENSURE_VALID_OBJECT((*frame)[57])
, ENSURE_VALID_OBJECT((*frame)[58])
, ENSURE_VALID_OBJECT((*frame)[59])
, ENSURE_VALID_OBJECT((*frame)[60])
, ENSURE_VALID_OBJECT((*frame)[61])
, ENSURE_VALID_OBJECT((*frame)[62])
, ENSURE_VALID_OBJECT((*frame)[63])
, ENSURE_VALID_OBJECT((*frame)[64])
, ENSURE_VALID_OBJECT((*frame)[65])
, ENSURE_VALID_OBJECT((*frame)[66])
, ENSURE_VALID_OBJECT((*frame)[67])
, ENSURE_VALID_OBJECT((*frame)[68])
, ENSURE_VALID_OBJECT((*frame)[69])
);
#endif

#ifdef APPLY_TO_VA_LIST
/* */

inline gctools::return_type funcall_va_list_0(Function_sp func, VaList_sp args) {
return func->entry(func.raw_()
, 0  , LCC_UNUSED , LCC_UNUSED , LCC_UNUSED , LCC_UNUSED    );
}
inline gctools::return_type funcall_va_list_1(Function_sp func, VaList_sp args) {
T_O* arg0 = ENSURE_VALID_OBJECT(args->next_arg_raw());
return func->entry(func.raw_()
, 1 , arg0  , LCC_UNUSED , LCC_UNUSED , LCC_UNUSED    );
}
inline gctools::return_type funcall_va_list_2(Function_sp func, VaList_sp args) {
T_O* arg0 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg1 = ENSURE_VALID_OBJECT(args->next_arg_raw());
return func->entry(func.raw_()
, 2 , arg0 , arg1  , LCC_UNUSED , LCC_UNUSED    );
}
inline gctools::return_type funcall_va_list_3(Function_sp func, VaList_sp args) {
T_O* arg0 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg1 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg2 = ENSURE_VALID_OBJECT(args->next_arg_raw());
return func->entry(func.raw_()
, 3 , arg0 , arg1 , arg2  , LCC_UNUSED    );
}
inline gctools::return_type funcall_va_list_4(Function_sp func, VaList_sp args) {
T_O* arg0 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg1 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg2 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg3 = ENSURE_VALID_OBJECT(args->next_arg_raw());
return func->entry(func.raw_()
, 4 , arg0 , arg1 , arg2 , arg3     );
}
inline gctools::return_type funcall_va_list_5(Function_sp func, VaList_sp args) {
T_O* arg0 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg1 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg2 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg3 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg4 = ENSURE_VALID_OBJECT(args->next_arg_raw());
return func->entry(func.raw_()
, 5 , arg0 , arg1 , arg2 , arg3     , arg4  );
}
inline gctools::return_type funcall_va_list_6(Function_sp func, VaList_sp args) {
T_O* arg0 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg1 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg2 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg3 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg4 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg5 = ENSURE_VALID_OBJECT(args->next_arg_raw());
return func->entry(func.raw_()
, 6 , arg0 , arg1 , arg2 , arg3     , arg4  , arg5  );
}
inline gctools::return_type funcall_va_list_7(Function_sp func, VaList_sp args) {
T_O* arg0 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg1 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg2 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg3 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg4 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg5 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg6 = ENSURE_VALID_OBJECT(args->next_arg_raw());
return func->entry(func.raw_()
, 7 , arg0 , arg1 , arg2 , arg3     , arg4  , arg5  , arg6  );
}
inline gctools::return_type funcall_va_list_8(Function_sp func, VaList_sp args) {
T_O* arg0 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg1 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg2 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg3 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg4 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg5 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg6 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg7 = ENSURE_VALID_OBJECT(args->next_arg_raw());
return func->entry(func.raw_()
, 8 , arg0 , arg1 , arg2 , arg3     , arg4  , arg5  , arg6  , arg7  );
}
inline gctools::return_type funcall_va_list_9(Function_sp func, VaList_sp args) {
T_O* arg0 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg1 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg2 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg3 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg4 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg5 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg6 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg7 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg8 = ENSURE_VALID_OBJECT(args->next_arg_raw());
return func->entry(func.raw_()
, 9 , arg0 , arg1 , arg2 , arg3     , arg4  , arg5  , arg6  , arg7  , arg8  );
}
inline gctools::return_type funcall_va_list_10(Function_sp func, VaList_sp args) {
T_O* arg0 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg1 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg2 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg3 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg4 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg5 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg6 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg7 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg8 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg9 = ENSURE_VALID_OBJECT(args->next_arg_raw());
return func->entry(func.raw_()
, 10 , arg0 , arg1 , arg2 , arg3     , arg4  , arg5  , arg6  , arg7  , arg8  , arg9  );
}
inline gctools::return_type funcall_va_list_11(Function_sp func, VaList_sp args) {
T_O* arg0 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg1 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg2 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg3 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg4 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg5 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg6 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg7 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg8 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg9 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg10 = ENSURE_VALID_OBJECT(args->next_arg_raw());
return func->entry(func.raw_()
, 11 , arg0 , arg1 , arg2 , arg3     , arg4  , arg5  , arg6  , arg7  , arg8  , arg9  , arg10  );
}
inline gctools::return_type funcall_va_list_12(Function_sp func, VaList_sp args) {
T_O* arg0 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg1 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg2 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg3 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg4 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg5 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg6 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg7 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg8 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg9 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg10 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg11 = ENSURE_VALID_OBJECT(args->next_arg_raw());
return func->entry(func.raw_()
, 12 , arg0 , arg1 , arg2 , arg3     , arg4  , arg5  , arg6  , arg7  , arg8  , arg9  , arg10  , arg11  );
}
inline gctools::return_type funcall_va_list_13(Function_sp func, VaList_sp args) {
T_O* arg0 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg1 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg2 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg3 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg4 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg5 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg6 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg7 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg8 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg9 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg10 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg11 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg12 = ENSURE_VALID_OBJECT(args->next_arg_raw());
return func->entry(func.raw_()
, 13 , arg0 , arg1 , arg2 , arg3     , arg4  , arg5  , arg6  , arg7  , arg8  , arg9  , arg10  , arg11  , arg12  );
}
inline gctools::return_type funcall_va_list_14(Function_sp func, VaList_sp args) {
T_O* arg0 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg1 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg2 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg3 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg4 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg5 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg6 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg7 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg8 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg9 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg10 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg11 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg12 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg13 = ENSURE_VALID_OBJECT(args->next_arg_raw());
return func->entry(func.raw_()
, 14 , arg0 , arg1 , arg2 , arg3     , arg4  , arg5  , arg6  , arg7  , arg8  , arg9  , arg10  , arg11  , arg12  , arg13  );
}
inline gctools::return_type funcall_va_list_15(Function_sp func, VaList_sp args) {
T_O* arg0 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg1 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg2 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg3 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg4 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg5 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg6 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg7 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg8 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg9 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg10 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg11 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg12 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg13 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg14 = ENSURE_VALID_OBJECT(args->next_arg_raw());
return func->entry(func.raw_()
, 15 , arg0 , arg1 , arg2 , arg3     , arg4  , arg5  , arg6  , arg7  , arg8  , arg9  , arg10  , arg11  , arg12  , arg13  , arg14  );
}
inline gctools::return_type funcall_va_list_16(Function_sp func, VaList_sp args) {
T_O* arg0 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg1 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg2 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg3 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg4 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg5 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg6 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg7 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg8 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg9 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg10 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg11 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg12 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg13 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg14 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg15 = ENSURE_VALID_OBJECT(args->next_arg_raw());
return func->entry(func.raw_()
, 16 , arg0 , arg1 , arg2 , arg3     , arg4  , arg5  , arg6  , arg7  , arg8  , arg9  , arg10  , arg11  , arg12  , arg13  , arg14  ,
    arg15  );
}
inline gctools::return_type funcall_va_list_17(Function_sp func, VaList_sp args) {
T_O* arg0 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg1 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg2 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg3 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg4 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg5 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg6 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg7 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg8 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg9 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg10 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg11 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg12 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg13 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg14 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg15 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg16 = ENSURE_VALID_OBJECT(args->next_arg_raw());
return func->entry(func.raw_()
, 17 , arg0 , arg1 , arg2 , arg3     , arg4  , arg5  , arg6  , arg7  , arg8  , arg9  , arg10  , arg11  , arg12  , arg13  , arg14  ,
    arg15  , arg16  );
}
inline gctools::return_type funcall_va_list_18(Function_sp func, VaList_sp args) {
T_O* arg0 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg1 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg2 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg3 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg4 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg5 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg6 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg7 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg8 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg9 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg10 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg11 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg12 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg13 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg14 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg15 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg16 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg17 = ENSURE_VALID_OBJECT(args->next_arg_raw());
return func->entry(func.raw_()
, 18 , arg0 , arg1 , arg2 , arg3     , arg4  , arg5  , arg6  , arg7  , arg8  , arg9  , arg10  , arg11  , arg12  , arg13  , arg14  ,
    arg15  , arg16  , arg17  );
}
inline gctools::return_type funcall_va_list_19(Function_sp func, VaList_sp args) {
T_O* arg0 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg1 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg2 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg3 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg4 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg5 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg6 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg7 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg8 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg9 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg10 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg11 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg12 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg13 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg14 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg15 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg16 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg17 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg18 = ENSURE_VALID_OBJECT(args->next_arg_raw());
return func->entry(func.raw_()
, 19 , arg0 , arg1 , arg2 , arg3     , arg4  , arg5  , arg6  , arg7  , arg8  , arg9  , arg10  , arg11  , arg12  , arg13  , arg14  ,
    arg15  , arg16  , arg17  , arg18  );
}
inline gctools::return_type funcall_va_list_20(Function_sp func, VaList_sp args) {
T_O* arg0 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg1 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg2 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg3 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg4 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg5 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg6 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg7 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg8 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg9 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg10 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg11 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg12 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg13 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg14 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg15 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg16 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg17 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg18 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg19 = ENSURE_VALID_OBJECT(args->next_arg_raw());
return func->entry(func.raw_()
, 20 , arg0 , arg1 , arg2 , arg3     , arg4  , arg5  , arg6  , arg7  , arg8  , arg9  , arg10  , arg11  , arg12  , arg13  , arg14  ,
    arg15  , arg16  , arg17  , arg18  , arg19  );
}
inline gctools::return_type funcall_va_list_21(Function_sp func, VaList_sp args) {
T_O* arg0 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg1 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg2 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg3 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg4 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg5 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg6 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg7 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg8 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg9 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg10 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg11 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg12 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg13 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg14 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg15 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg16 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg17 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg18 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg19 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg20 = ENSURE_VALID_OBJECT(args->next_arg_raw());
return func->entry(func.raw_()
, 21 , arg0 , arg1 , arg2 , arg3     , arg4  , arg5  , arg6  , arg7  , arg8  , arg9  , arg10  , arg11  , arg12  , arg13  , arg14  ,
    arg15  , arg16  , arg17  , arg18  , arg19  , arg20  );
}
inline gctools::return_type funcall_va_list_22(Function_sp func, VaList_sp args) {
T_O* arg0 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg1 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg2 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg3 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg4 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg5 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg6 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg7 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg8 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg9 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg10 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg11 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg12 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg13 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg14 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg15 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg16 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg17 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg18 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg19 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg20 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg21 = ENSURE_VALID_OBJECT(args->next_arg_raw());
return func->entry(func.raw_()
, 22 , arg0 , arg1 , arg2 , arg3     , arg4  , arg5  , arg6  , arg7  , arg8  , arg9  , arg10  , arg11  , arg12  , arg13  , arg14  ,
    arg15  , arg16  , arg17  , arg18  , arg19  , arg20  , arg21  );
}
inline gctools::return_type funcall_va_list_23(Function_sp func, VaList_sp args) {
T_O* arg0 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg1 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg2 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg3 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg4 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg5 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg6 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg7 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg8 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg9 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg10 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg11 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg12 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg13 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg14 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg15 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg16 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg17 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg18 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg19 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg20 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg21 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg22 = ENSURE_VALID_OBJECT(args->next_arg_raw());
return func->entry(func.raw_()
, 23 , arg0 , arg1 , arg2 , arg3     , arg4  , arg5  , arg6  , arg7  , arg8  , arg9  , arg10  , arg11  , arg12  , arg13  , arg14  ,
    arg15  , arg16  , arg17  , arg18  , arg19  , arg20  , arg21  , arg22  );
}
inline gctools::return_type funcall_va_list_24(Function_sp func, VaList_sp args) {
T_O* arg0 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg1 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg2 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg3 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg4 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg5 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg6 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg7 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg8 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg9 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg10 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg11 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg12 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg13 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg14 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg15 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg16 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg17 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg18 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg19 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg20 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg21 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg22 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg23 = ENSURE_VALID_OBJECT(args->next_arg_raw());
return func->entry(func.raw_()
, 24 , arg0 , arg1 , arg2 , arg3     , arg4  , arg5  , arg6  , arg7  , arg8  , arg9  , arg10  , arg11  , arg12  , arg13  , arg14  ,
    arg15  , arg16  , arg17  , arg18  , arg19  , arg20  , arg21  , arg22  , arg23  );
}
inline gctools::return_type funcall_va_list_25(Function_sp func, VaList_sp args) {
T_O* arg0 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg1 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg2 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg3 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg4 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg5 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg6 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg7 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg8 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg9 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg10 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg11 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg12 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg13 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg14 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg15 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg16 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg17 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg18 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg19 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg20 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg21 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg22 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg23 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg24 = ENSURE_VALID_OBJECT(args->next_arg_raw());
return func->entry(func.raw_()
, 25 , arg0 , arg1 , arg2 , arg3     , arg4  , arg5  , arg6  , arg7  , arg8  , arg9  , arg10  , arg11  , arg12  , arg13  , arg14  ,
    arg15  , arg16  , arg17  , arg18  , arg19  , arg20  , arg21  , arg22  , arg23  , arg24  );
}
inline gctools::return_type funcall_va_list_26(Function_sp func, VaList_sp args) {
T_O* arg0 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg1 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg2 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg3 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg4 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg5 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg6 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg7 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg8 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg9 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg10 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg11 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg12 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg13 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg14 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg15 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg16 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg17 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg18 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg19 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg20 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg21 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg22 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg23 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg24 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg25 = ENSURE_VALID_OBJECT(args->next_arg_raw());
return func->entry(func.raw_()
, 26 , arg0 , arg1 , arg2 , arg3     , arg4  , arg5  , arg6  , arg7  , arg8  , arg9  , arg10  , arg11  , arg12  , arg13  , arg14  ,
    arg15  , arg16  , arg17  , arg18  , arg19  , arg20  , arg21  , arg22  , arg23  , arg24  , arg25  );
}
inline gctools::return_type funcall_va_list_27(Function_sp func, VaList_sp args) {
T_O* arg0 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg1 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg2 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg3 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg4 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg5 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg6 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg7 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg8 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg9 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg10 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg11 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg12 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg13 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg14 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg15 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg16 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg17 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg18 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg19 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg20 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg21 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg22 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg23 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg24 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg25 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg26 = ENSURE_VALID_OBJECT(args->next_arg_raw());
return func->entry(func.raw_()
, 27 , arg0 , arg1 , arg2 , arg3     , arg4  , arg5  , arg6  , arg7  , arg8  , arg9  , arg10  , arg11  , arg12  , arg13  , arg14  ,
    arg15  , arg16  , arg17  , arg18  , arg19  , arg20  , arg21  , arg22  , arg23  , arg24  , arg25  , arg26  );
}
inline gctools::return_type funcall_va_list_28(Function_sp func, VaList_sp args) {
T_O* arg0 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg1 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg2 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg3 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg4 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg5 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg6 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg7 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg8 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg9 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg10 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg11 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg12 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg13 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg14 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg15 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg16 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg17 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg18 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg19 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg20 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg21 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg22 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg23 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg24 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg25 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg26 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg27 = ENSURE_VALID_OBJECT(args->next_arg_raw());
return func->entry(func.raw_()
, 28 , arg0 , arg1 , arg2 , arg3     , arg4  , arg5  , arg6  , arg7  , arg8  , arg9  , arg10  , arg11  , arg12  , arg13  , arg14  ,
    arg15  , arg16  , arg17  , arg18  , arg19  , arg20  , arg21  , arg22  , arg23  , arg24  , arg25  , arg26  , arg27  );
}
inline gctools::return_type funcall_va_list_29(Function_sp func, VaList_sp args) {
T_O* arg0 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg1 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg2 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg3 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg4 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg5 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg6 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg7 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg8 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg9 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg10 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg11 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg12 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg13 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg14 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg15 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg16 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg17 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg18 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg19 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg20 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg21 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg22 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg23 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg24 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg25 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg26 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg27 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg28 = ENSURE_VALID_OBJECT(args->next_arg_raw());
return func->entry(func.raw_()
, 29 , arg0 , arg1 , arg2 , arg3     , arg4  , arg5  , arg6  , arg7  , arg8  , arg9  , arg10  , arg11  , arg12  , arg13  , arg14  ,
    arg15  , arg16  , arg17  , arg18  , arg19  , arg20  , arg21  , arg22  , arg23  , arg24  , arg25  , arg26  , arg27  , arg28  );
}
inline gctools::return_type funcall_va_list_30(Function_sp func, VaList_sp args) {
T_O* arg0 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg1 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg2 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg3 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg4 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg5 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg6 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg7 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg8 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg9 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg10 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg11 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg12 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg13 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg14 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg15 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg16 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg17 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg18 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg19 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg20 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg21 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg22 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg23 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg24 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg25 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg26 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg27 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg28 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg29 = ENSURE_VALID_OBJECT(args->next_arg_raw());
return func->entry(func.raw_()
, 30 , arg0 , arg1 , arg2 , arg3     , arg4  , arg5  , arg6  , arg7  , arg8  , arg9  , arg10  , arg11  , arg12  , arg13  , arg14  ,
    arg15  , arg16  , arg17  , arg18  , arg19  , arg20  , arg21  , arg22  , arg23  , arg24  , arg25  , arg26  , arg27  , arg28  ,
    arg29  );
}
inline gctools::return_type funcall_va_list_31(Function_sp func, VaList_sp args) {
T_O* arg0 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg1 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg2 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg3 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg4 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg5 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg6 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg7 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg8 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg9 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg10 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg11 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg12 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg13 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg14 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg15 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg16 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg17 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg18 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg19 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg20 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg21 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg22 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg23 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg24 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg25 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg26 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg27 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg28 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg29 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg30 = ENSURE_VALID_OBJECT(args->next_arg_raw());
return func->entry(func.raw_()
, 31 , arg0 , arg1 , arg2 , arg3     , arg4  , arg5  , arg6  , arg7  , arg8  , arg9  , arg10  , arg11  , arg12  , arg13  , arg14  ,
    arg15  , arg16  , arg17  , arg18  , arg19  , arg20  , arg21  , arg22  , arg23  , arg24  , arg25  , arg26  , arg27  , arg28  ,
    arg29  , arg30  );
}
inline gctools::return_type funcall_va_list_32(Function_sp func, VaList_sp args) {
T_O* arg0 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg1 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg2 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg3 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg4 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg5 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg6 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg7 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg8 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg9 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg10 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg11 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg12 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg13 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg14 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg15 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg16 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg17 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg18 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg19 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg20 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg21 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg22 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg23 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg24 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg25 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg26 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg27 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg28 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg29 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg30 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg31 = ENSURE_VALID_OBJECT(args->next_arg_raw());
return func->entry(func.raw_()
, 32 , arg0 , arg1 , arg2 , arg3     , arg4  , arg5  , arg6  , arg7  , arg8  , arg9  , arg10  , arg11  , arg12  , arg13  , arg14  ,
    arg15  , arg16  , arg17  , arg18  , arg19  , arg20  , arg21  , arg22  , arg23  , arg24  , arg25  , arg26  , arg27  , arg28  ,
    arg29  , arg30  , arg31  );
}
inline gctools::return_type funcall_va_list_33(Function_sp func, VaList_sp args) {
T_O* arg0 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg1 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg2 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg3 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg4 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg5 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg6 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg7 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg8 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg9 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg10 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg11 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg12 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg13 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg14 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg15 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg16 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg17 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg18 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg19 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg20 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg21 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg22 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg23 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg24 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg25 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg26 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg27 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg28 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg29 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg30 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg31 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg32 = ENSURE_VALID_OBJECT(args->next_arg_raw());
return func->entry(func.raw_()
, 33 , arg0 , arg1 , arg2 , arg3     , arg4  , arg5  , arg6  , arg7  , arg8  , arg9  , arg10  , arg11  , arg12  , arg13  , arg14  ,
    arg15  , arg16  , arg17  , arg18  , arg19  , arg20  , arg21  , arg22  , arg23  , arg24  , arg25  , arg26  , arg27  , arg28  ,
    arg29  , arg30  , arg31  , arg32  );
}
inline gctools::return_type funcall_va_list_34(Function_sp func, VaList_sp args) {
T_O* arg0 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg1 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg2 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg3 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg4 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg5 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg6 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg7 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg8 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg9 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg10 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg11 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg12 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg13 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg14 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg15 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg16 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg17 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg18 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg19 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg20 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg21 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg22 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg23 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg24 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg25 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg26 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg27 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg28 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg29 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg30 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg31 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg32 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg33 = ENSURE_VALID_OBJECT(args->next_arg_raw());
return func->entry(func.raw_()
, 34 , arg0 , arg1 , arg2 , arg3     , arg4  , arg5  , arg6  , arg7  , arg8  , arg9  , arg10  , arg11  , arg12  , arg13  , arg14  ,
    arg15  , arg16  , arg17  , arg18  , arg19  , arg20  , arg21  , arg22  , arg23  , arg24  , arg25  , arg26  , arg27  , arg28  ,
    arg29  , arg30  , arg31  , arg32  , arg33  );
}
inline gctools::return_type funcall_va_list_35(Function_sp func, VaList_sp args) {
T_O* arg0 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg1 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg2 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg3 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg4 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg5 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg6 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg7 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg8 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg9 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg10 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg11 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg12 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg13 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg14 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg15 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg16 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg17 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg18 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg19 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg20 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg21 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg22 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg23 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg24 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg25 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg26 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg27 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg28 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg29 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg30 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg31 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg32 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg33 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg34 = ENSURE_VALID_OBJECT(args->next_arg_raw());
return func->entry(func.raw_()
, 35 , arg0 , arg1 , arg2 , arg3     , arg4  , arg5  , arg6  , arg7  , arg8  , arg9  , arg10  , arg11  , arg12  , arg13  , arg14  ,
    arg15  , arg16  , arg17  , arg18  , arg19  , arg20  , arg21  , arg22  , arg23  , arg24  , arg25  , arg26  , arg27  , arg28  ,
    arg29  , arg30  , arg31  , arg32  , arg33  , arg34  );
}
inline gctools::return_type funcall_va_list_36(Function_sp func, VaList_sp args) {
T_O* arg0 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg1 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg2 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg3 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg4 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg5 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg6 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg7 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg8 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg9 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg10 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg11 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg12 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg13 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg14 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg15 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg16 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg17 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg18 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg19 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg20 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg21 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg22 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg23 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg24 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg25 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg26 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg27 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg28 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg29 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg30 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg31 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg32 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg33 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg34 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg35 = ENSURE_VALID_OBJECT(args->next_arg_raw());
return func->entry(func.raw_()
, 36 , arg0 , arg1 , arg2 , arg3     , arg4  , arg5  , arg6  , arg7  , arg8  , arg9  , arg10  , arg11  , arg12  , arg13  , arg14  ,
    arg15  , arg16  , arg17  , arg18  , arg19  , arg20  , arg21  , arg22  , arg23  , arg24  , arg25  , arg26  , arg27  , arg28  ,
    arg29  , arg30  , arg31  , arg32  , arg33  , arg34  , arg35  );
}
inline gctools::return_type funcall_va_list_37(Function_sp func, VaList_sp args) {
T_O* arg0 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg1 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg2 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg3 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg4 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg5 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg6 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg7 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg8 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg9 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg10 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg11 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg12 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg13 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg14 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg15 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg16 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg17 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg18 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg19 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg20 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg21 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg22 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg23 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg24 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg25 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg26 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg27 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg28 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg29 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg30 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg31 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg32 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg33 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg34 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg35 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg36 = ENSURE_VALID_OBJECT(args->next_arg_raw());
return func->entry(func.raw_()
, 37 , arg0 , arg1 , arg2 , arg3     , arg4  , arg5  , arg6  , arg7  , arg8  , arg9  , arg10  , arg11  , arg12  , arg13  , arg14  ,
    arg15  , arg16  , arg17  , arg18  , arg19  , arg20  , arg21  , arg22  , arg23  , arg24  , arg25  , arg26  , arg27  , arg28  ,
    arg29  , arg30  , arg31  , arg32  , arg33  , arg34  , arg35  , arg36  );
}
inline gctools::return_type funcall_va_list_38(Function_sp func, VaList_sp args) {
T_O* arg0 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg1 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg2 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg3 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg4 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg5 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg6 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg7 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg8 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg9 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg10 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg11 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg12 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg13 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg14 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg15 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg16 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg17 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg18 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg19 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg20 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg21 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg22 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg23 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg24 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg25 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg26 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg27 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg28 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg29 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg30 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg31 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg32 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg33 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg34 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg35 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg36 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg37 = ENSURE_VALID_OBJECT(args->next_arg_raw());
return func->entry(func.raw_()
, 38 , arg0 , arg1 , arg2 , arg3     , arg4  , arg5  , arg6  , arg7  , arg8  , arg9  , arg10  , arg11  , arg12  , arg13  , arg14  ,
    arg15  , arg16  , arg17  , arg18  , arg19  , arg20  , arg21  , arg22  , arg23  , arg24  , arg25  , arg26  , arg27  , arg28  ,
    arg29  , arg30  , arg31  , arg32  , arg33  , arg34  , arg35  , arg36  , arg37  );
}
inline gctools::return_type funcall_va_list_39(Function_sp func, VaList_sp args) {
T_O* arg0 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg1 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg2 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg3 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg4 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg5 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg6 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg7 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg8 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg9 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg10 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg11 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg12 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg13 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg14 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg15 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg16 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg17 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg18 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg19 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg20 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg21 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg22 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg23 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg24 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg25 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg26 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg27 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg28 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg29 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg30 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg31 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg32 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg33 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg34 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg35 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg36 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg37 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg38 = ENSURE_VALID_OBJECT(args->next_arg_raw());
return func->entry(func.raw_()
, 39 , arg0 , arg1 , arg2 , arg3     , arg4  , arg5  , arg6  , arg7  , arg8  , arg9  , arg10  , arg11  , arg12  , arg13  , arg14  ,
    arg15  , arg16  , arg17  , arg18  , arg19  , arg20  , arg21  , arg22  , arg23  , arg24  , arg25  , arg26  , arg27  , arg28  ,
    arg29  , arg30  , arg31  , arg32  , arg33  , arg34  , arg35  , arg36  , arg37  , arg38  );
}
inline gctools::return_type funcall_va_list_40(Function_sp func, VaList_sp args) {
T_O* arg0 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg1 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg2 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg3 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg4 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg5 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg6 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg7 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg8 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg9 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg10 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg11 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg12 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg13 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg14 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg15 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg16 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg17 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg18 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg19 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg20 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg21 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg22 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg23 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg24 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg25 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg26 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg27 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg28 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg29 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg30 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg31 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg32 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg33 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg34 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg35 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg36 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg37 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg38 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg39 = ENSURE_VALID_OBJECT(args->next_arg_raw());
return func->entry(func.raw_()
, 40 , arg0 , arg1 , arg2 , arg3     , arg4  , arg5  , arg6  , arg7  , arg8  , arg9  , arg10  , arg11  , arg12  , arg13  , arg14  ,
    arg15  , arg16  , arg17  , arg18  , arg19  , arg20  , arg21  , arg22  , arg23  , arg24  , arg25  , arg26  , arg27  , arg28  ,
    arg29  , arg30  , arg31  , arg32  , arg33  , arg34  , arg35  , arg36  , arg37  , arg38  , arg39  );
}
inline gctools::return_type funcall_va_list_41(Function_sp func, VaList_sp args) {
T_O* arg0 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg1 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg2 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg3 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg4 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg5 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg6 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg7 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg8 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg9 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg10 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg11 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg12 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg13 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg14 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg15 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg16 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg17 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg18 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg19 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg20 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg21 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg22 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg23 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg24 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg25 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg26 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg27 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg28 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg29 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg30 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg31 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg32 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg33 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg34 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg35 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg36 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg37 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg38 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg39 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg40 = ENSURE_VALID_OBJECT(args->next_arg_raw());
return func->entry(func.raw_()
, 41 , arg0 , arg1 , arg2 , arg3     , arg4  , arg5  , arg6  , arg7  , arg8  , arg9  , arg10  , arg11  , arg12  , arg13  , arg14  ,
    arg15  , arg16  , arg17  , arg18  , arg19  , arg20  , arg21  , arg22  , arg23  , arg24  , arg25  , arg26  , arg27  , arg28  ,
    arg29  , arg30  , arg31  , arg32  , arg33  , arg34  , arg35  , arg36  , arg37  , arg38  , arg39  , arg40  );
}
inline gctools::return_type funcall_va_list_42(Function_sp func, VaList_sp args) {
T_O* arg0 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg1 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg2 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg3 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg4 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg5 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg6 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg7 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg8 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg9 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg10 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg11 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg12 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg13 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg14 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg15 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg16 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg17 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg18 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg19 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg20 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg21 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg22 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg23 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg24 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg25 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg26 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg27 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg28 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg29 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg30 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg31 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg32 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg33 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg34 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg35 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg36 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg37 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg38 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg39 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg40 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg41 = ENSURE_VALID_OBJECT(args->next_arg_raw());
return func->entry(func.raw_()
, 42 , arg0 , arg1 , arg2 , arg3     , arg4  , arg5  , arg6  , arg7  , arg8  , arg9  , arg10  , arg11  , arg12  , arg13  , arg14  ,
    arg15  , arg16  , arg17  , arg18  , arg19  , arg20  , arg21  , arg22  , arg23  , arg24  , arg25  , arg26  , arg27  , arg28  ,
    arg29  , arg30  , arg31  , arg32  , arg33  , arg34  , arg35  , arg36  , arg37  , arg38  , arg39  , arg40  , arg41  );
}
inline gctools::return_type funcall_va_list_43(Function_sp func, VaList_sp args) {
T_O* arg0 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg1 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg2 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg3 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg4 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg5 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg6 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg7 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg8 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg9 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg10 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg11 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg12 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg13 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg14 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg15 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg16 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg17 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg18 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg19 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg20 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg21 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg22 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg23 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg24 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg25 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg26 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg27 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg28 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg29 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg30 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg31 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg32 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg33 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg34 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg35 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg36 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg37 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg38 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg39 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg40 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg41 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg42 = ENSURE_VALID_OBJECT(args->next_arg_raw());
return func->entry(func.raw_()
, 43 , arg0 , arg1 , arg2 , arg3     , arg4  , arg5  , arg6  , arg7  , arg8  , arg9  , arg10  , arg11  , arg12  , arg13  , arg14  ,
    arg15  , arg16  , arg17  , arg18  , arg19  , arg20  , arg21  , arg22  , arg23  , arg24  , arg25  , arg26  , arg27  , arg28  ,
    arg29  , arg30  , arg31  , arg32  , arg33  , arg34  , arg35  , arg36  , arg37  , arg38  , arg39  , arg40  , arg41  , arg42  );
}
inline gctools::return_type funcall_va_list_44(Function_sp func, VaList_sp args) {
T_O* arg0 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg1 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg2 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg3 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg4 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg5 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg6 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg7 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg8 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg9 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg10 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg11 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg12 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg13 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg14 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg15 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg16 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg17 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg18 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg19 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg20 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg21 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg22 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg23 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg24 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg25 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg26 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg27 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg28 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg29 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg30 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg31 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg32 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg33 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg34 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg35 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg36 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg37 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg38 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg39 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg40 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg41 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg42 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg43 = ENSURE_VALID_OBJECT(args->next_arg_raw());
return func->entry(func.raw_()
, 44 , arg0 , arg1 , arg2 , arg3     , arg4  , arg5  , arg6  , arg7  , arg8  , arg9  , arg10  , arg11  , arg12  , arg13  , arg14  ,
    arg15  , arg16  , arg17  , arg18  , arg19  , arg20  , arg21  , arg22  , arg23  , arg24  , arg25  , arg26  , arg27  , arg28  ,
    arg29  , arg30  , arg31  , arg32  , arg33  , arg34  , arg35  , arg36  , arg37  , arg38  , arg39  , arg40  , arg41  , arg42  ,
    arg43  );
}
inline gctools::return_type funcall_va_list_45(Function_sp func, VaList_sp args) {
T_O* arg0 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg1 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg2 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg3 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg4 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg5 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg6 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg7 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg8 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg9 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg10 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg11 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg12 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg13 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg14 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg15 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg16 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg17 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg18 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg19 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg20 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg21 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg22 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg23 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg24 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg25 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg26 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg27 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg28 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg29 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg30 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg31 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg32 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg33 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg34 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg35 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg36 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg37 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg38 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg39 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg40 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg41 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg42 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg43 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg44 = ENSURE_VALID_OBJECT(args->next_arg_raw());
return func->entry(func.raw_()
, 45 , arg0 , arg1 , arg2 , arg3     , arg4  , arg5  , arg6  , arg7  , arg8  , arg9  , arg10  , arg11  , arg12  , arg13  , arg14  ,
    arg15  , arg16  , arg17  , arg18  , arg19  , arg20  , arg21  , arg22  , arg23  , arg24  , arg25  , arg26  , arg27  , arg28  ,
    arg29  , arg30  , arg31  , arg32  , arg33  , arg34  , arg35  , arg36  , arg37  , arg38  , arg39  , arg40  , arg41  , arg42  ,
    arg43  , arg44  );
}
inline gctools::return_type funcall_va_list_46(Function_sp func, VaList_sp args) {
T_O* arg0 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg1 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg2 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg3 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg4 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg5 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg6 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg7 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg8 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg9 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg10 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg11 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg12 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg13 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg14 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg15 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg16 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg17 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg18 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg19 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg20 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg21 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg22 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg23 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg24 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg25 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg26 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg27 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg28 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg29 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg30 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg31 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg32 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg33 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg34 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg35 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg36 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg37 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg38 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg39 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg40 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg41 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg42 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg43 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg44 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg45 = ENSURE_VALID_OBJECT(args->next_arg_raw());
return func->entry(func.raw_()
, 46 , arg0 , arg1 , arg2 , arg3     , arg4  , arg5  , arg6  , arg7  , arg8  , arg9  , arg10  , arg11  , arg12  , arg13  , arg14  ,
    arg15  , arg16  , arg17  , arg18  , arg19  , arg20  , arg21  , arg22  , arg23  , arg24  , arg25  , arg26  , arg27  , arg28  ,
    arg29  , arg30  , arg31  , arg32  , arg33  , arg34  , arg35  , arg36  , arg37  , arg38  , arg39  , arg40  , arg41  , arg42  ,
    arg43  , arg44  , arg45  );
}
inline gctools::return_type funcall_va_list_47(Function_sp func, VaList_sp args) {
T_O* arg0 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg1 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg2 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg3 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg4 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg5 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg6 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg7 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg8 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg9 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg10 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg11 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg12 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg13 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg14 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg15 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg16 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg17 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg18 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg19 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg20 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg21 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg22 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg23 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg24 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg25 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg26 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg27 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg28 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg29 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg30 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg31 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg32 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg33 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg34 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg35 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg36 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg37 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg38 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg39 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg40 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg41 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg42 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg43 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg44 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg45 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg46 = ENSURE_VALID_OBJECT(args->next_arg_raw());
return func->entry(func.raw_()
, 47 , arg0 , arg1 , arg2 , arg3     , arg4  , arg5  , arg6  , arg7  , arg8  , arg9  , arg10  , arg11  , arg12  , arg13  , arg14  ,
    arg15  , arg16  , arg17  , arg18  , arg19  , arg20  , arg21  , arg22  , arg23  , arg24  , arg25  , arg26  , arg27  , arg28  ,
    arg29  , arg30  , arg31  , arg32  , arg33  , arg34  , arg35  , arg36  , arg37  , arg38  , arg39  , arg40  , arg41  , arg42  ,
    arg43  , arg44  , arg45  , arg46  );
}
inline gctools::return_type funcall_va_list_48(Function_sp func, VaList_sp args) {
T_O* arg0 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg1 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg2 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg3 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg4 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg5 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg6 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg7 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg8 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg9 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg10 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg11 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg12 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg13 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg14 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg15 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg16 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg17 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg18 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg19 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg20 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg21 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg22 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg23 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg24 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg25 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg26 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg27 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg28 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg29 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg30 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg31 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg32 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg33 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg34 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg35 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg36 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg37 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg38 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg39 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg40 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg41 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg42 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg43 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg44 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg45 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg46 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg47 = ENSURE_VALID_OBJECT(args->next_arg_raw());
return func->entry(func.raw_()
, 48 , arg0 , arg1 , arg2 , arg3     , arg4  , arg5  , arg6  , arg7  , arg8  , arg9  , arg10  , arg11  , arg12  , arg13  , arg14  ,
    arg15  , arg16  , arg17  , arg18  , arg19  , arg20  , arg21  , arg22  , arg23  , arg24  , arg25  , arg26  , arg27  , arg28  ,
    arg29  , arg30  , arg31  , arg32  , arg33  , arg34  , arg35  , arg36  , arg37  , arg38  , arg39  , arg40  , arg41  , arg42  ,
    arg43  , arg44  , arg45  , arg46  , arg47  );
}
inline gctools::return_type funcall_va_list_49(Function_sp func, VaList_sp args) {
T_O* arg0 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg1 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg2 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg3 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg4 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg5 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg6 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg7 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg8 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg9 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg10 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg11 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg12 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg13 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg14 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg15 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg16 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg17 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg18 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg19 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg20 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg21 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg22 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg23 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg24 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg25 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg26 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg27 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg28 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg29 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg30 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg31 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg32 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg33 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg34 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg35 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg36 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg37 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg38 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg39 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg40 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg41 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg42 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg43 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg44 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg45 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg46 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg47 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg48 = ENSURE_VALID_OBJECT(args->next_arg_raw());
return func->entry(func.raw_()
, 49 , arg0 , arg1 , arg2 , arg3     , arg4  , arg5  , arg6  , arg7  , arg8  , arg9  , arg10  , arg11  , arg12  , arg13  , arg14  ,
    arg15  , arg16  , arg17  , arg18  , arg19  , arg20  , arg21  , arg22  , arg23  , arg24  , arg25  , arg26  , arg27  , arg28  ,
    arg29  , arg30  , arg31  , arg32  , arg33  , arg34  , arg35  , arg36  , arg37  , arg38  , arg39  , arg40  , arg41  , arg42  ,
    arg43  , arg44  , arg45  , arg46  , arg47  , arg48  );
}
inline gctools::return_type funcall_va_list_50(Function_sp func, VaList_sp args) {
T_O* arg0 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg1 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg2 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg3 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg4 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg5 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg6 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg7 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg8 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg9 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg10 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg11 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg12 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg13 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg14 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg15 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg16 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg17 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg18 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg19 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg20 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg21 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg22 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg23 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg24 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg25 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg26 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg27 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg28 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg29 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg30 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg31 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg32 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg33 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg34 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg35 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg36 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg37 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg38 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg39 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg40 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg41 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg42 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg43 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg44 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg45 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg46 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg47 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg48 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg49 = ENSURE_VALID_OBJECT(args->next_arg_raw());
return func->entry(func.raw_()
, 50 , arg0 , arg1 , arg2 , arg3     , arg4  , arg5  , arg6  , arg7  , arg8  , arg9  , arg10  , arg11  , arg12  , arg13  , arg14  ,
    arg15  , arg16  , arg17  , arg18  , arg19  , arg20  , arg21  , arg22  , arg23  , arg24  , arg25  , arg26  , arg27  , arg28  ,
    arg29  , arg30  , arg31  , arg32  , arg33  , arg34  , arg35  , arg36  , arg37  , arg38  , arg39  , arg40  , arg41  , arg42  ,
    arg43  , arg44  , arg45  , arg46  , arg47  , arg48  , arg49  );
}
inline gctools::return_type funcall_va_list_51(Function_sp func, VaList_sp args) {
T_O* arg0 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg1 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg2 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg3 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg4 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg5 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg6 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg7 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg8 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg9 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg10 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg11 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg12 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg13 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg14 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg15 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg16 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg17 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg18 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg19 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg20 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg21 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg22 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg23 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg24 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg25 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg26 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg27 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg28 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg29 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg30 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg31 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg32 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg33 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg34 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg35 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg36 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg37 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg38 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg39 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg40 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg41 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg42 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg43 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg44 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg45 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg46 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg47 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg48 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg49 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg50 = ENSURE_VALID_OBJECT(args->next_arg_raw());
return func->entry(func.raw_()
, 51 , arg0 , arg1 , arg2 , arg3     , arg4  , arg5  , arg6  , arg7  , arg8  , arg9  , arg10  , arg11  , arg12  , arg13  , arg14  ,
    arg15  , arg16  , arg17  , arg18  , arg19  , arg20  , arg21  , arg22  , arg23  , arg24  , arg25  , arg26  , arg27  , arg28  ,
    arg29  , arg30  , arg31  , arg32  , arg33  , arg34  , arg35  , arg36  , arg37  , arg38  , arg39  , arg40  , arg41  , arg42  ,
    arg43  , arg44  , arg45  , arg46  , arg47  , arg48  , arg49  , arg50  );
}
inline gctools::return_type funcall_va_list_52(Function_sp func, VaList_sp args) {
T_O* arg0 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg1 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg2 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg3 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg4 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg5 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg6 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg7 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg8 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg9 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg10 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg11 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg12 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg13 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg14 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg15 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg16 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg17 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg18 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg19 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg20 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg21 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg22 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg23 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg24 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg25 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg26 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg27 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg28 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg29 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg30 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg31 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg32 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg33 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg34 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg35 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg36 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg37 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg38 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg39 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg40 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg41 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg42 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg43 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg44 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg45 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg46 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg47 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg48 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg49 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg50 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg51 = ENSURE_VALID_OBJECT(args->next_arg_raw());
return func->entry(func.raw_()
, 52 , arg0 , arg1 , arg2 , arg3     , arg4  , arg5  , arg6  , arg7  , arg8  , arg9  , arg10  , arg11  , arg12  , arg13  , arg14  ,
    arg15  , arg16  , arg17  , arg18  , arg19  , arg20  , arg21  , arg22  , arg23  , arg24  , arg25  , arg26  , arg27  , arg28  ,
    arg29  , arg30  , arg31  , arg32  , arg33  , arg34  , arg35  , arg36  , arg37  , arg38  , arg39  , arg40  , arg41  , arg42  ,
    arg43  , arg44  , arg45  , arg46  , arg47  , arg48  , arg49  , arg50  , arg51  );
}
inline gctools::return_type funcall_va_list_53(Function_sp func, VaList_sp args) {
T_O* arg0 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg1 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg2 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg3 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg4 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg5 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg6 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg7 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg8 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg9 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg10 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg11 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg12 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg13 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg14 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg15 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg16 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg17 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg18 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg19 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg20 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg21 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg22 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg23 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg24 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg25 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg26 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg27 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg28 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg29 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg30 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg31 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg32 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg33 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg34 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg35 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg36 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg37 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg38 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg39 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg40 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg41 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg42 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg43 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg44 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg45 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg46 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg47 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg48 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg49 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg50 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg51 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg52 = ENSURE_VALID_OBJECT(args->next_arg_raw());
return func->entry(func.raw_()
, 53 , arg0 , arg1 , arg2 , arg3     , arg4  , arg5  , arg6  , arg7  , arg8  , arg9  , arg10  , arg11  , arg12  , arg13  , arg14  ,
    arg15  , arg16  , arg17  , arg18  , arg19  , arg20  , arg21  , arg22  , arg23  , arg24  , arg25  , arg26  , arg27  , arg28  ,
    arg29  , arg30  , arg31  , arg32  , arg33  , arg34  , arg35  , arg36  , arg37  , arg38  , arg39  , arg40  , arg41  , arg42  ,
    arg43  , arg44  , arg45  , arg46  , arg47  , arg48  , arg49  , arg50  , arg51  , arg52  );
}
inline gctools::return_type funcall_va_list_54(Function_sp func, VaList_sp args) {
T_O* arg0 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg1 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg2 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg3 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg4 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg5 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg6 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg7 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg8 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg9 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg10 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg11 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg12 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg13 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg14 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg15 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg16 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg17 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg18 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg19 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg20 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg21 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg22 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg23 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg24 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg25 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg26 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg27 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg28 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg29 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg30 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg31 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg32 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg33 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg34 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg35 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg36 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg37 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg38 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg39 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg40 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg41 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg42 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg43 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg44 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg45 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg46 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg47 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg48 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg49 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg50 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg51 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg52 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg53 = ENSURE_VALID_OBJECT(args->next_arg_raw());
return func->entry(func.raw_()
, 54 , arg0 , arg1 , arg2 , arg3     , arg4  , arg5  , arg6  , arg7  , arg8  , arg9  , arg10  , arg11  , arg12  , arg13  , arg14  ,
    arg15  , arg16  , arg17  , arg18  , arg19  , arg20  , arg21  , arg22  , arg23  , arg24  , arg25  , arg26  , arg27  , arg28  ,
    arg29  , arg30  , arg31  , arg32  , arg33  , arg34  , arg35  , arg36  , arg37  , arg38  , arg39  , arg40  , arg41  , arg42  ,
    arg43  , arg44  , arg45  , arg46  , arg47  , arg48  , arg49  , arg50  , arg51  , arg52  , arg53  );
}
inline gctools::return_type funcall_va_list_55(Function_sp func, VaList_sp args) {
T_O* arg0 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg1 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg2 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg3 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg4 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg5 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg6 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg7 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg8 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg9 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg10 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg11 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg12 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg13 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg14 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg15 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg16 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg17 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg18 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg19 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg20 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg21 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg22 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg23 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg24 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg25 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg26 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg27 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg28 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg29 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg30 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg31 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg32 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg33 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg34 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg35 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg36 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg37 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg38 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg39 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg40 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg41 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg42 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg43 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg44 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg45 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg46 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg47 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg48 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg49 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg50 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg51 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg52 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg53 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg54 = ENSURE_VALID_OBJECT(args->next_arg_raw());
return func->entry(func.raw_()
, 55 , arg0 , arg1 , arg2 , arg3     , arg4  , arg5  , arg6  , arg7  , arg8  , arg9  , arg10  , arg11  , arg12  , arg13  , arg14  ,
    arg15  , arg16  , arg17  , arg18  , arg19  , arg20  , arg21  , arg22  , arg23  , arg24  , arg25  , arg26  , arg27  , arg28  ,
    arg29  , arg30  , arg31  , arg32  , arg33  , arg34  , arg35  , arg36  , arg37  , arg38  , arg39  , arg40  , arg41  , arg42  ,
    arg43  , arg44  , arg45  , arg46  , arg47  , arg48  , arg49  , arg50  , arg51  , arg52  , arg53  , arg54  );
}
inline gctools::return_type funcall_va_list_56(Function_sp func, VaList_sp args) {
T_O* arg0 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg1 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg2 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg3 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg4 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg5 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg6 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg7 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg8 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg9 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg10 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg11 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg12 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg13 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg14 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg15 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg16 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg17 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg18 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg19 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg20 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg21 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg22 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg23 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg24 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg25 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg26 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg27 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg28 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg29 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg30 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg31 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg32 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg33 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg34 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg35 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg36 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg37 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg38 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg39 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg40 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg41 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg42 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg43 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg44 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg45 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg46 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg47 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg48 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg49 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg50 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg51 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg52 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg53 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg54 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg55 = ENSURE_VALID_OBJECT(args->next_arg_raw());
return func->entry(func.raw_()
, 56 , arg0 , arg1 , arg2 , arg3     , arg4  , arg5  , arg6  , arg7  , arg8  , arg9  , arg10  , arg11  , arg12  , arg13  , arg14  ,
    arg15  , arg16  , arg17  , arg18  , arg19  , arg20  , arg21  , arg22  , arg23  , arg24  , arg25  , arg26  , arg27  , arg28  ,
    arg29  , arg30  , arg31  , arg32  , arg33  , arg34  , arg35  , arg36  , arg37  , arg38  , arg39  , arg40  , arg41  , arg42  ,
    arg43  , arg44  , arg45  , arg46  , arg47  , arg48  , arg49  , arg50  , arg51  , arg52  , arg53  , arg54  , arg55  );
}
inline gctools::return_type funcall_va_list_57(Function_sp func, VaList_sp args) {
T_O* arg0 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg1 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg2 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg3 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg4 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg5 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg6 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg7 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg8 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg9 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg10 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg11 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg12 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg13 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg14 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg15 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg16 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg17 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg18 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg19 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg20 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg21 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg22 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg23 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg24 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg25 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg26 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg27 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg28 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg29 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg30 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg31 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg32 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg33 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg34 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg35 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg36 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg37 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg38 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg39 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg40 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg41 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg42 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg43 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg44 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg45 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg46 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg47 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg48 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg49 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg50 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg51 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg52 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg53 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg54 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg55 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg56 = ENSURE_VALID_OBJECT(args->next_arg_raw());
return func->entry(func.raw_()
, 57 , arg0 , arg1 , arg2 , arg3     , arg4  , arg5  , arg6  , arg7  , arg8  , arg9  , arg10  , arg11  , arg12  , arg13  , arg14  ,
    arg15  , arg16  , arg17  , arg18  , arg19  , arg20  , arg21  , arg22  , arg23  , arg24  , arg25  , arg26  , arg27  , arg28  ,
    arg29  , arg30  , arg31  , arg32  , arg33  , arg34  , arg35  , arg36  , arg37  , arg38  , arg39  , arg40  , arg41  , arg42  ,
    arg43  , arg44  , arg45  , arg46  , arg47  , arg48  , arg49  , arg50  , arg51  , arg52  , arg53  , arg54  , arg55  , arg56  );
}
inline gctools::return_type funcall_va_list_58(Function_sp func, VaList_sp args) {
T_O* arg0 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg1 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg2 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg3 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg4 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg5 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg6 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg7 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg8 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg9 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg10 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg11 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg12 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg13 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg14 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg15 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg16 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg17 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg18 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg19 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg20 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg21 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg22 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg23 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg24 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg25 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg26 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg27 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg28 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg29 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg30 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg31 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg32 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg33 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg34 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg35 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg36 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg37 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg38 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg39 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg40 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg41 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg42 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg43 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg44 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg45 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg46 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg47 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg48 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg49 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg50 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg51 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg52 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg53 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg54 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg55 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg56 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg57 = ENSURE_VALID_OBJECT(args->next_arg_raw());
return func->entry(func.raw_()
, 58 , arg0 , arg1 , arg2 , arg3     , arg4  , arg5  , arg6  , arg7  , arg8  , arg9  , arg10  , arg11  , arg12  , arg13  , arg14  ,
    arg15  , arg16  , arg17  , arg18  , arg19  , arg20  , arg21  , arg22  , arg23  , arg24  , arg25  , arg26  , arg27  , arg28  ,
    arg29  , arg30  , arg31  , arg32  , arg33  , arg34  , arg35  , arg36  , arg37  , arg38  , arg39  , arg40  , arg41  , arg42  ,
    arg43  , arg44  , arg45  , arg46  , arg47  , arg48  , arg49  , arg50  , arg51  , arg52  , arg53  , arg54  , arg55  , arg56  ,
    arg57  );
}
inline gctools::return_type funcall_va_list_59(Function_sp func, VaList_sp args) {
T_O* arg0 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg1 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg2 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg3 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg4 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg5 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg6 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg7 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg8 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg9 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg10 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg11 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg12 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg13 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg14 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg15 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg16 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg17 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg18 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg19 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg20 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg21 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg22 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg23 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg24 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg25 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg26 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg27 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg28 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg29 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg30 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg31 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg32 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg33 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg34 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg35 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg36 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg37 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg38 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg39 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg40 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg41 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg42 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg43 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg44 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg45 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg46 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg47 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg48 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg49 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg50 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg51 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg52 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg53 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg54 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg55 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg56 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg57 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg58 = ENSURE_VALID_OBJECT(args->next_arg_raw());
return func->entry(func.raw_()
, 59 , arg0 , arg1 , arg2 , arg3     , arg4  , arg5  , arg6  , arg7  , arg8  , arg9  , arg10  , arg11  , arg12  , arg13  , arg14  ,
    arg15  , arg16  , arg17  , arg18  , arg19  , arg20  , arg21  , arg22  , arg23  , arg24  , arg25  , arg26  , arg27  , arg28  ,
    arg29  , arg30  , arg31  , arg32  , arg33  , arg34  , arg35  , arg36  , arg37  , arg38  , arg39  , arg40  , arg41  , arg42  ,
    arg43  , arg44  , arg45  , arg46  , arg47  , arg48  , arg49  , arg50  , arg51  , arg52  , arg53  , arg54  , arg55  , arg56  ,
    arg57  , arg58  );
}
inline gctools::return_type funcall_va_list_60(Function_sp func, VaList_sp args) {
T_O* arg0 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg1 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg2 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg3 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg4 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg5 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg6 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg7 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg8 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg9 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg10 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg11 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg12 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg13 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg14 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg15 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg16 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg17 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg18 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg19 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg20 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg21 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg22 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg23 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg24 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg25 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg26 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg27 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg28 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg29 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg30 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg31 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg32 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg33 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg34 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg35 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg36 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg37 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg38 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg39 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg40 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg41 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg42 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg43 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg44 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg45 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg46 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg47 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg48 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg49 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg50 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg51 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg52 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg53 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg54 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg55 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg56 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg57 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg58 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg59 = ENSURE_VALID_OBJECT(args->next_arg_raw());
return func->entry(func.raw_()
, 60 , arg0 , arg1 , arg2 , arg3     , arg4  , arg5  , arg6  , arg7  , arg8  , arg9  , arg10  , arg11  , arg12  , arg13  , arg14  ,
    arg15  , arg16  , arg17  , arg18  , arg19  , arg20  , arg21  , arg22  , arg23  , arg24  , arg25  , arg26  , arg27  , arg28  ,
    arg29  , arg30  , arg31  , arg32  , arg33  , arg34  , arg35  , arg36  , arg37  , arg38  , arg39  , arg40  , arg41  , arg42  ,
    arg43  , arg44  , arg45  , arg46  , arg47  , arg48  , arg49  , arg50  , arg51  , arg52  , arg53  , arg54  , arg55  , arg56  ,
    arg57  , arg58  , arg59  );
}
inline gctools::return_type funcall_va_list_61(Function_sp func, VaList_sp args) {
T_O* arg0 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg1 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg2 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg3 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg4 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg5 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg6 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg7 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg8 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg9 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg10 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg11 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg12 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg13 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg14 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg15 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg16 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg17 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg18 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg19 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg20 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg21 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg22 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg23 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg24 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg25 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg26 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg27 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg28 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg29 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg30 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg31 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg32 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg33 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg34 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg35 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg36 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg37 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg38 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg39 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg40 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg41 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg42 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg43 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg44 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg45 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg46 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg47 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg48 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg49 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg50 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg51 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg52 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg53 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg54 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg55 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg56 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg57 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg58 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg59 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg60 = ENSURE_VALID_OBJECT(args->next_arg_raw());
return func->entry(func.raw_()
, 61 , arg0 , arg1 , arg2 , arg3     , arg4  , arg5  , arg6  , arg7  , arg8  , arg9  , arg10  , arg11  , arg12  , arg13  , arg14  ,
    arg15  , arg16  , arg17  , arg18  , arg19  , arg20  , arg21  , arg22  , arg23  , arg24  , arg25  , arg26  , arg27  , arg28  ,
    arg29  , arg30  , arg31  , arg32  , arg33  , arg34  , arg35  , arg36  , arg37  , arg38  , arg39  , arg40  , arg41  , arg42  ,
    arg43  , arg44  , arg45  , arg46  , arg47  , arg48  , arg49  , arg50  , arg51  , arg52  , arg53  , arg54  , arg55  , arg56  ,
    arg57  , arg58  , arg59  , arg60  );
}
inline gctools::return_type funcall_va_list_62(Function_sp func, VaList_sp args) {
T_O* arg0 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg1 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg2 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg3 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg4 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg5 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg6 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg7 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg8 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg9 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg10 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg11 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg12 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg13 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg14 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg15 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg16 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg17 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg18 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg19 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg20 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg21 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg22 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg23 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg24 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg25 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg26 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg27 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg28 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg29 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg30 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg31 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg32 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg33 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg34 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg35 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg36 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg37 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg38 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg39 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg40 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg41 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg42 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg43 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg44 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg45 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg46 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg47 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg48 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg49 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg50 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg51 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg52 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg53 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg54 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg55 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg56 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg57 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg58 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg59 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg60 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg61 = ENSURE_VALID_OBJECT(args->next_arg_raw());
return func->entry(func.raw_()
, 62 , arg0 , arg1 , arg2 , arg3     , arg4  , arg5  , arg6  , arg7  , arg8  , arg9  , arg10  , arg11  , arg12  , arg13  , arg14  ,
    arg15  , arg16  , arg17  , arg18  , arg19  , arg20  , arg21  , arg22  , arg23  , arg24  , arg25  , arg26  , arg27  , arg28  ,
    arg29  , arg30  , arg31  , arg32  , arg33  , arg34  , arg35  , arg36  , arg37  , arg38  , arg39  , arg40  , arg41  , arg42  ,
    arg43  , arg44  , arg45  , arg46  , arg47  , arg48  , arg49  , arg50  , arg51  , arg52  , arg53  , arg54  , arg55  , arg56  ,
    arg57  , arg58  , arg59  , arg60  , arg61  );
}
inline gctools::return_type funcall_va_list_63(Function_sp func, VaList_sp args) {
T_O* arg0 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg1 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg2 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg3 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg4 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg5 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg6 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg7 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg8 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg9 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg10 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg11 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg12 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg13 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg14 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg15 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg16 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg17 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg18 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg19 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg20 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg21 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg22 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg23 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg24 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg25 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg26 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg27 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg28 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg29 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg30 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg31 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg32 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg33 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg34 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg35 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg36 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg37 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg38 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg39 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg40 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg41 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg42 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg43 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg44 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg45 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg46 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg47 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg48 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg49 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg50 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg51 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg52 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg53 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg54 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg55 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg56 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg57 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg58 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg59 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg60 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg61 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg62 = ENSURE_VALID_OBJECT(args->next_arg_raw());
return func->entry(func.raw_()
, 63 , arg0 , arg1 , arg2 , arg3     , arg4  , arg5  , arg6  , arg7  , arg8  , arg9  , arg10  , arg11  , arg12  , arg13  , arg14  ,
    arg15  , arg16  , arg17  , arg18  , arg19  , arg20  , arg21  , arg22  , arg23  , arg24  , arg25  , arg26  , arg27  , arg28  ,
    arg29  , arg30  , arg31  , arg32  , arg33  , arg34  , arg35  , arg36  , arg37  , arg38  , arg39  , arg40  , arg41  , arg42  ,
    arg43  , arg44  , arg45  , arg46  , arg47  , arg48  , arg49  , arg50  , arg51  , arg52  , arg53  , arg54  , arg55  , arg56  ,
    arg57  , arg58  , arg59  , arg60  , arg61  , arg62  );
}
inline gctools::return_type funcall_va_list_64(Function_sp func, VaList_sp args) {
T_O* arg0 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg1 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg2 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg3 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg4 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg5 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg6 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg7 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg8 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg9 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg10 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg11 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg12 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg13 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg14 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg15 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg16 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg17 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg18 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg19 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg20 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg21 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg22 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg23 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg24 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg25 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg26 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg27 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg28 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg29 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg30 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg31 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg32 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg33 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg34 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg35 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg36 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg37 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg38 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg39 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg40 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg41 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg42 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg43 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg44 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg45 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg46 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg47 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg48 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg49 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg50 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg51 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg52 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg53 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg54 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg55 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg56 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg57 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg58 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg59 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg60 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg61 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg62 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg63 = ENSURE_VALID_OBJECT(args->next_arg_raw());
return func->entry(func.raw_()
, 64 , arg0 , arg1 , arg2 , arg3     , arg4  , arg5  , arg6  , arg7  , arg8  , arg9  , arg10  , arg11  , arg12  , arg13  , arg14  ,
    arg15  , arg16  , arg17  , arg18  , arg19  , arg20  , arg21  , arg22  , arg23  , arg24  , arg25  , arg26  , arg27  , arg28  ,
    arg29  , arg30  , arg31  , arg32  , arg33  , arg34  , arg35  , arg36  , arg37  , arg38  , arg39  , arg40  , arg41  , arg42  ,
    arg43  , arg44  , arg45  , arg46  , arg47  , arg48  , arg49  , arg50  , arg51  , arg52  , arg53  , arg54  , arg55  , arg56  ,
    arg57  , arg58  , arg59  , arg60  , arg61  , arg62  , arg63  );
}
inline gctools::return_type funcall_va_list_65(Function_sp func, VaList_sp args) {
T_O* arg0 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg1 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg2 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg3 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg4 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg5 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg6 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg7 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg8 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg9 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg10 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg11 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg12 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg13 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg14 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg15 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg16 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg17 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg18 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg19 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg20 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg21 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg22 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg23 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg24 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg25 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg26 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg27 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg28 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg29 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg30 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg31 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg32 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg33 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg34 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg35 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg36 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg37 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg38 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg39 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg40 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg41 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg42 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg43 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg44 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg45 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg46 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg47 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg48 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg49 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg50 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg51 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg52 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg53 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg54 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg55 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg56 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg57 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg58 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg59 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg60 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg61 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg62 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg63 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg64 = ENSURE_VALID_OBJECT(args->next_arg_raw());
return func->entry(func.raw_()
, 65 , arg0 , arg1 , arg2 , arg3     , arg4  , arg5  , arg6  , arg7  , arg8  , arg9  , arg10  , arg11  , arg12  , arg13  , arg14  ,
    arg15  , arg16  , arg17  , arg18  , arg19  , arg20  , arg21  , arg22  , arg23  , arg24  , arg25  , arg26  , arg27  , arg28  ,
    arg29  , arg30  , arg31  , arg32  , arg33  , arg34  , arg35  , arg36  , arg37  , arg38  , arg39  , arg40  , arg41  , arg42  ,
    arg43  , arg44  , arg45  , arg46  , arg47  , arg48  , arg49  , arg50  , arg51  , arg52  , arg53  , arg54  , arg55  , arg56  ,
    arg57  , arg58  , arg59  , arg60  , arg61  , arg62  , arg63  , arg64  );
}
inline gctools::return_type funcall_va_list_66(Function_sp func, VaList_sp args) {
T_O* arg0 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg1 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg2 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg3 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg4 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg5 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg6 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg7 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg8 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg9 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg10 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg11 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg12 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg13 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg14 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg15 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg16 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg17 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg18 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg19 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg20 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg21 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg22 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg23 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg24 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg25 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg26 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg27 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg28 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg29 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg30 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg31 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg32 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg33 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg34 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg35 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg36 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg37 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg38 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg39 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg40 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg41 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg42 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg43 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg44 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg45 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg46 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg47 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg48 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg49 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg50 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg51 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg52 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg53 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg54 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg55 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg56 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg57 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg58 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg59 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg60 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg61 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg62 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg63 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg64 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg65 = ENSURE_VALID_OBJECT(args->next_arg_raw());
return func->entry(func.raw_()
, 66 , arg0 , arg1 , arg2 , arg3     , arg4  , arg5  , arg6  , arg7  , arg8  , arg9  , arg10  , arg11  , arg12  , arg13  , arg14  ,
    arg15  , arg16  , arg17  , arg18  , arg19  , arg20  , arg21  , arg22  , arg23  , arg24  , arg25  , arg26  , arg27  , arg28  ,
    arg29  , arg30  , arg31  , arg32  , arg33  , arg34  , arg35  , arg36  , arg37  , arg38  , arg39  , arg40  , arg41  , arg42  ,
    arg43  , arg44  , arg45  , arg46  , arg47  , arg48  , arg49  , arg50  , arg51  , arg52  , arg53  , arg54  , arg55  , arg56  ,
    arg57  , arg58  , arg59  , arg60  , arg61  , arg62  , arg63  , arg64  , arg65  );
}
inline gctools::return_type funcall_va_list_67(Function_sp func, VaList_sp args) {
T_O* arg0 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg1 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg2 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg3 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg4 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg5 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg6 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg7 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg8 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg9 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg10 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg11 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg12 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg13 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg14 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg15 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg16 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg17 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg18 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg19 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg20 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg21 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg22 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg23 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg24 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg25 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg26 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg27 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg28 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg29 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg30 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg31 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg32 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg33 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg34 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg35 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg36 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg37 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg38 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg39 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg40 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg41 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg42 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg43 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg44 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg45 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg46 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg47 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg48 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg49 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg50 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg51 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg52 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg53 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg54 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg55 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg56 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg57 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg58 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg59 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg60 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg61 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg62 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg63 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg64 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg65 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg66 = ENSURE_VALID_OBJECT(args->next_arg_raw());
return func->entry(func.raw_()
, 67 , arg0 , arg1 , arg2 , arg3     , arg4  , arg5  , arg6  , arg7  , arg8  , arg9  , arg10  , arg11  , arg12  , arg13  , arg14  ,
    arg15  , arg16  , arg17  , arg18  , arg19  , arg20  , arg21  , arg22  , arg23  , arg24  , arg25  , arg26  , arg27  , arg28  ,
    arg29  , arg30  , arg31  , arg32  , arg33  , arg34  , arg35  , arg36  , arg37  , arg38  , arg39  , arg40  , arg41  , arg42  ,
    arg43  , arg44  , arg45  , arg46  , arg47  , arg48  , arg49  , arg50  , arg51  , arg52  , arg53  , arg54  , arg55  , arg56  ,
    arg57  , arg58  , arg59  , arg60  , arg61  , arg62  , arg63  , arg64  , arg65  , arg66  );
}
inline gctools::return_type funcall_va_list_68(Function_sp func, VaList_sp args) {
T_O* arg0 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg1 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg2 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg3 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg4 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg5 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg6 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg7 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg8 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg9 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg10 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg11 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg12 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg13 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg14 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg15 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg16 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg17 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg18 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg19 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg20 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg21 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg22 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg23 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg24 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg25 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg26 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg27 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg28 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg29 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg30 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg31 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg32 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg33 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg34 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg35 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg36 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg37 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg38 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg39 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg40 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg41 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg42 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg43 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg44 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg45 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg46 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg47 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg48 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg49 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg50 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg51 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg52 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg53 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg54 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg55 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg56 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg57 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg58 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg59 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg60 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg61 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg62 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg63 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg64 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg65 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg66 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg67 = ENSURE_VALID_OBJECT(args->next_arg_raw());
return func->entry(func.raw_()
, 68 , arg0 , arg1 , arg2 , arg3     , arg4  , arg5  , arg6  , arg7  , arg8  , arg9  , arg10  , arg11  , arg12  , arg13  , arg14  ,
    arg15  , arg16  , arg17  , arg18  , arg19  , arg20  , arg21  , arg22  , arg23  , arg24  , arg25  , arg26  , arg27  , arg28  ,
    arg29  , arg30  , arg31  , arg32  , arg33  , arg34  , arg35  , arg36  , arg37  , arg38  , arg39  , arg40  , arg41  , arg42  ,
    arg43  , arg44  , arg45  , arg46  , arg47  , arg48  , arg49  , arg50  , arg51  , arg52  , arg53  , arg54  , arg55  , arg56  ,
    arg57  , arg58  , arg59  , arg60  , arg61  , arg62  , arg63  , arg64  , arg65  , arg66  , arg67  );
}
inline gctools::return_type funcall_va_list_69(Function_sp func, VaList_sp args) {
T_O* arg0 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg1 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg2 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg3 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg4 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg5 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg6 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg7 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg8 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg9 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg10 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg11 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg12 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg13 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg14 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg15 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg16 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg17 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg18 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg19 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg20 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg21 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg22 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg23 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg24 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg25 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg26 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg27 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg28 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg29 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg30 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg31 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg32 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg33 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg34 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg35 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg36 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg37 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg38 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg39 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg40 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg41 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg42 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg43 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg44 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg45 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg46 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg47 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg48 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg49 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg50 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg51 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg52 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg53 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg54 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg55 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg56 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg57 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg58 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg59 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg60 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg61 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg62 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg63 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg64 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg65 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg66 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg67 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg68 = ENSURE_VALID_OBJECT(args->next_arg_raw());
return func->entry(func.raw_()
, 69 , arg0 , arg1 , arg2 , arg3     , arg4  , arg5  , arg6  , arg7  , arg8  , arg9  , arg10  , arg11  , arg12  , arg13  , arg14  ,
    arg15  , arg16  , arg17  , arg18  , arg19  , arg20  , arg21  , arg22  , arg23  , arg24  , arg25  , arg26  , arg27  , arg28  ,
    arg29  , arg30  , arg31  , arg32  , arg33  , arg34  , arg35  , arg36  , arg37  , arg38  , arg39  , arg40  , arg41  , arg42  ,
    arg43  , arg44  , arg45  , arg46  , arg47  , arg48  , arg49  , arg50  , arg51  , arg52  , arg53  , arg54  , arg55  , arg56  ,
    arg57  , arg58  , arg59  , arg60  , arg61  , arg62  , arg63  , arg64  , arg65  , arg66  , arg67  , arg68  );
}
inline gctools::return_type funcall_va_list_70(Function_sp func, VaList_sp args) {
T_O* arg0 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg1 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg2 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg3 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg4 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg5 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg6 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg7 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg8 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg9 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg10 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg11 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg12 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg13 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg14 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg15 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg16 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg17 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg18 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg19 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg20 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg21 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg22 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg23 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg24 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg25 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg26 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg27 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg28 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg29 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg30 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg31 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg32 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg33 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg34 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg35 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg36 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg37 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg38 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg39 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg40 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg41 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg42 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg43 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg44 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg45 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg46 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg47 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg48 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg49 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg50 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg51 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg52 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg53 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg54 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg55 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg56 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg57 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg58 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg59 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg60 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg61 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg62 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg63 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg64 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg65 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg66 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg67 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg68 = ENSURE_VALID_OBJECT(args->next_arg_raw());
T_O* arg69 = ENSURE_VALID_OBJECT(args->next_arg_raw());
return func->entry(func.raw_()
, 70 , arg0 , arg1 , arg2 , arg3     , arg4  , arg5  , arg6  , arg7  , arg8  , arg9  , arg10  , arg11  , arg12  , arg13  , arg14  ,
    arg15  , arg16  , arg17  , arg18  , arg19  , arg20  , arg21  , arg22  , arg23  , arg24  , arg25  , arg26  , arg27  , arg28  ,
    arg29  , arg30  , arg31  , arg32  , arg33  , arg34  , arg35  , arg36  , arg37  , arg38  , arg39  , arg40  , arg41  , arg42  ,
    arg43  , arg44  , arg45  , arg46  , arg47  , arg48  , arg49  , arg50  , arg51  , arg52  , arg53  , arg54  , arg55  , arg56  ,
    arg57  , arg58  , arg59  , arg60  , arg61  , arg62  , arg63  , arg64  , arg65  , arg66  , arg67  , arg68  , arg69  );
}

#endif

#ifdef APPLY_TO_VA_LIST_CASE
case 0:
return funcall_va_list_0(func,args);
case 1:
return funcall_va_list_1(func,args);
case 2:
return funcall_va_list_2(func,args);
case 3:
return funcall_va_list_3(func,args);
case 4:
return funcall_va_list_4(func,args);
case 5:
return funcall_va_list_5(func,args);
case 6:
return funcall_va_list_6(func,args);
case 7:
return funcall_va_list_7(func,args);
case 8:
return funcall_va_list_8(func,args);
case 9:
return funcall_va_list_9(func,args);
case 10:
return funcall_va_list_10(func,args);
case 11:
return funcall_va_list_11(func,args);
case 12:
return funcall_va_list_12(func,args);
case 13:
return funcall_va_list_13(func,args);
case 14:
return funcall_va_list_14(func,args);
case 15:
return funcall_va_list_15(func,args);
case 16:
return funcall_va_list_16(func,args);
case 17:
return funcall_va_list_17(func,args);
case 18:
return funcall_va_list_18(func,args);
case 19:
return funcall_va_list_19(func,args);
case 20:
return funcall_va_list_20(func,args);
case 21:
return funcall_va_list_21(func,args);
case 22:
return funcall_va_list_22(func,args);
case 23:
return funcall_va_list_23(func,args);
case 24:
return funcall_va_list_24(func,args);
case 25:
return funcall_va_list_25(func,args);
case 26:
return funcall_va_list_26(func,args);
case 27:
return funcall_va_list_27(func,args);
case 28:
return funcall_va_list_28(func,args);
case 29:
return funcall_va_list_29(func,args);
case 30:
return funcall_va_list_30(func,args);
case 31:
return funcall_va_list_31(func,args);
case 32:
return funcall_va_list_32(func,args);
case 33:
return funcall_va_list_33(func,args);
case 34:
return funcall_va_list_34(func,args);
case 35:
return funcall_va_list_35(func,args);
case 36:
return funcall_va_list_36(func,args);
case 37:
return funcall_va_list_37(func,args);
case 38:
return funcall_va_list_38(func,args);
case 39:
return funcall_va_list_39(func,args);
case 40:
return funcall_va_list_40(func,args);
case 41:
return funcall_va_list_41(func,args);
case 42:
return funcall_va_list_42(func,args);
case 43:
return funcall_va_list_43(func,args);
case 44:
return funcall_va_list_44(func,args);
case 45:
return funcall_va_list_45(func,args);
case 46:
return funcall_va_list_46(func,args);
case 47:
return funcall_va_list_47(func,args);
case 48:
return funcall_va_list_48(func,args);
case 49:
return funcall_va_list_49(func,args);
case 50:
return funcall_va_list_50(func,args);
case 51:
return funcall_va_list_51(func,args);
case 52:
return funcall_va_list_52(func,args);
case 53:
return funcall_va_list_53(func,args);
case 54:
return funcall_va_list_54(func,args);
case 55:
return funcall_va_list_55(func,args);
case 56:
return funcall_va_list_56(func,args);
case 57:
return funcall_va_list_57(func,args);
case 58:
return funcall_va_list_58(func,args);
case 59:
return funcall_va_list_59(func,args);
case 60:
return funcall_va_list_60(func,args);
case 61:
return funcall_va_list_61(func,args);
case 62:
return funcall_va_list_62(func,args);
case 63:
return funcall_va_list_63(func,args);
case 64:
return funcall_va_list_64(func,args);
case 65:
return funcall_va_list_65(func,args);
case 66:
return funcall_va_list_66(func,args);
case 67:
return funcall_va_list_67(func,args);
case 68:
return funcall_va_list_68(func,args);
case 69:
return funcall_va_list_69(func,args);
case 70:
return funcall_va_list_70(func,args);/* */
#endif

